{"version":3,"file":"index.js","sources":["../../src/util.ts","../../src/rule/required.ts","../../src/rule/whitespace.ts","../../src/rule/type.ts","../../src/rule/range.ts","../../src/rule/enum.ts","../../src/rule/pattern.ts","../../src/rule/index.ts","../../src/validator/string.ts","../../src/validator/method.ts","../../src/validator/number.ts","../../src/validator/boolean.ts","../../src/validator/regexp.ts","../../src/validator/integer.ts","../../src/validator/float.ts","../../src/validator/array.ts","../../src/validator/object.ts","../../src/validator/enum.ts","../../src/validator/pattern.ts","../../src/validator/date.ts","../../src/validator/required.ts","../../src/validator/type.ts","../../src/validator/any.ts","../../src/validator/index.ts","../../src/messages.ts","../../src/index.ts"],"sourcesContent":["/* eslint no-console:0 */\n\nimport {\n  ValidateError,\n  ValidateOption,\n  RuleValuePackage,\n  InternalRuleItem,\n  SyncErrorType,\n  RuleType,\n  Value,\n  Values,\n} from './interface';\n\nconst formatRegExp = /%[sdj%]/g;\n\ndeclare var ASYNC_VALIDATOR_NO_WARNING;\n\nexport let warning: (type: string, errors: SyncErrorType[]) => void = () => { };\n\n// don't print warning message when in production env or node runtime\nif (\n  typeof process !== 'undefined' &&\n  process.env &&\n  process.env.NODE_ENV !== 'production' &&\n  typeof window !== 'undefined' &&\n  typeof document !== 'undefined'\n) {\n  warning = (type, errors) => {\n    if (typeof console !== 'undefined' && console.warn &&\n      typeof ASYNC_VALIDATOR_NO_WARNING === 'undefined'\n    ) {\n      if (errors.every(e => typeof e === 'string')) {\n        console.warn(type, errors);\n      }\n    }\n  };\n}\n\nexport function convertFieldsError(\n  errors: ValidateError[],\n): Record<string, ValidateError[]> {\n  if (!errors || !errors.length) return null;\n  const fields = {};\n  errors.forEach(error => {\n    const field = error.field;\n    fields[field] = fields[field] || [];\n    fields[field].push(error);\n  });\n  return fields;\n}\n\nexport function format(\n  template: ((...args: any[]) => string) | string,\n  ...args: any[]\n): string {\n  let i = 0;\n  const len = args.length;\n  if (typeof template === 'function') {\n    return template.apply(null, args);\n  }\n  if (typeof template === 'string') {\n    let str = template.replace(formatRegExp, x => {\n      if (x === '%%') {\n        return '%';\n      }\n      if (i >= len) {\n        return x;\n      }\n      switch (x) {\n        case '%s':\n          return String(args[i++]);\n        case '%d':\n          return (Number(args[i++]) as unknown) as string;\n        case '%j':\n          try {\n            return JSON.stringify(args[i++]);\n          } catch (_) {\n            return '[Circular]';\n          }\n          break;\n        default:\n          return x;\n      }\n    });\n    return str;\n  }\n  return template;\n}\n\nfunction isNativeStringType(type: string) {\n  return (\n    type === 'string' ||\n    type === 'url' ||\n    type === 'hex' ||\n    type === 'email' ||\n    type === 'date' ||\n    type === 'pattern'\n  );\n}\n\nexport function isEmptyValue(value: Value, type?: string) {\n  if (value === undefined || value === null) {\n    return true;\n  }\n  if (type === 'array' && Array.isArray(value) && !value.length) {\n    return true;\n  }\n  if (isNativeStringType(type) && typeof value === 'string' && !value) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEmptyObject(obj: object) {\n  return Object.keys(obj).length === 0;\n}\n\nfunction asyncParallelArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  const results: ValidateError[] = [];\n  let total = 0;\n  const arrLength = arr.length;\n\n  function count(errors: ValidateError[]) {\n    results.push(...(errors || []));\n    total++;\n    if (total === arrLength) {\n      callback(results);\n    }\n  }\n\n  arr.forEach(a => {\n    func(a, count);\n  });\n}\n\nfunction asyncSerialArray(\n  arr: RuleValuePackage[],\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n) {\n  let index = 0;\n  const arrLength = arr.length;\n\n  function next(errors: ValidateError[]) {\n    if (errors && errors.length) {\n      callback(errors);\n      return;\n    }\n    const original = index;\n    index = index + 1;\n    if (original < arrLength) {\n      func(arr[original], next);\n    } else {\n      callback([]);\n    }\n  }\n\n  next([]);\n}\n\nfunction flattenObjArr(objArr: Record<string, RuleValuePackage[]>) {\n  const ret: RuleValuePackage[] = [];\n  Object.keys(objArr).forEach(k => {\n    ret.push(...(objArr[k] || []));\n  });\n  return ret;\n}\n\nexport class AsyncValidationError extends Error {\n  errors: ValidateError[];\n  fields: Record<string, ValidateError[]>;\n\n  constructor(\n    errors: ValidateError[],\n    fields: Record<string, ValidateError[]>,\n  ) {\n    super('Async Validation Error');\n    this.errors = errors;\n    this.fields = fields;\n  }\n}\n\ntype ValidateFunc = (\n  data: RuleValuePackage,\n  doIt: (errors: ValidateError[]) => void,\n) => void;\n\nexport function asyncMap(\n  objArr: Record<string, RuleValuePackage[]>,\n  option: ValidateOption,\n  func: ValidateFunc,\n  callback: (errors: ValidateError[]) => void,\n  source: Values,\n): Promise<Values> {\n  if (option.first) {\n    const pending = new Promise<Values>((resolve, reject) => {\n      const next = (errors: ValidateError[]) => {\n        callback(errors);\n        return errors.length\n          ? reject(new AsyncValidationError(errors, convertFieldsError(errors)))\n          : resolve(source);\n      };\n      const flattenArr = flattenObjArr(objArr);\n      asyncSerialArray(flattenArr, func, next);\n    });\n    pending.catch(e => e);\n    return pending;\n  }\n  const firstFields =\n    option.firstFields === true\n      ? Object.keys(objArr)\n      : option.firstFields || [];\n\n  const objArrKeys = Object.keys(objArr);\n  const objArrLength = objArrKeys.length;\n  let total = 0;\n  const results: ValidateError[] = [];\n  const pending = new Promise<Values>((resolve, reject) => {\n    const next = (errors: ValidateError[]) => {\n      results.push.apply(results, errors);\n      total++;\n      if (total === objArrLength) {\n        callback(results);\n        return results.length\n          ? reject(\n            new AsyncValidationError(results, convertFieldsError(results)),\n          )\n          : resolve(source);\n      }\n    };\n    if (!objArrKeys.length) {\n      callback(results);\n      resolve(source);\n    }\n    objArrKeys.forEach(key => {\n      const arr = objArr[key];\n      if (firstFields.indexOf(key) !== -1) {\n        asyncSerialArray(arr, func, next);\n      } else {\n        asyncParallelArray(arr, func, next);\n      }\n    });\n  });\n  pending.catch(e => e);\n  return pending;\n}\n\nfunction isErrorObj(\n  obj: ValidateError | string | (() => string),\n): obj is ValidateError {\n  return !!(obj && (obj as ValidateError).message !== undefined);\n}\n\nfunction getValue(value: Values, path: string[]) {\n  let v = value;\n  for (let i = 0; i < path.length; i++) {\n    if (v == undefined) {\n      return v;\n    }\n    v = v[path[i]];\n  }\n  return v;\n}\n\nexport function complementError(rule: InternalRuleItem, source: Values) {\n  return (oe: ValidateError | (() => string) | string): ValidateError => {\n    let fieldValue;\n    if (rule.fullFields) {\n      fieldValue = getValue(source, rule.fullFields);\n    } else {\n      fieldValue = source[(oe as any).field || rule.fullField];\n    }\n    if (isErrorObj(oe)) {\n      oe.field = oe.field || rule.fullField;\n      oe.fieldValue = fieldValue;\n      return oe;\n    }\n    return {\n      message: typeof oe === 'function' ? oe() : oe,\n      fieldValue,\n      field: ((oe as unknown) as ValidateError).field || rule.fullField,\n    };\n  };\n}\n\nexport function deepMerge<T extends object>(target: T, source: Partial<T>): T {\n  if (source) {\n    for (const s in source) {\n      if (source.hasOwnProperty(s)) {\n        const value = source[s];\n        if (typeof value === 'object' && typeof target[s] === 'object') {\n          target[s] = {\n            ...target[s],\n            ...value,\n          };\n        } else {\n          target[s] = value;\n        }\n      }\n    }\n  }\n  return target;\n}\n","import { ExecuteRule } from '../interface';\nimport { format, isEmptyValue } from '../util';\n\nconst required: ExecuteRule = (rule, value, source, errors, options, type) => {\n  if (\n    rule.required &&\n    (!source.hasOwnProperty(rule.field) ||\n      isEmptyValue(value, type || rule.type))\n  ) {\n    errors.push(format(options.messages.required, rule.fullField));\n  }\n};\n\nexport default required;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\n/**\n *  Rule for validating whitespace.\n *\n *  @param rule The validation rule.\n *  @param value The value of the field on the source object.\n *  @param source The source object being validated.\n *  @param errors An array of errors that this rule may add\n *  validation errors to.\n *  @param options The validation options.\n *  @param options.messages The validation messages.\n */\nconst whitespace: ExecuteRule = (rule, value, source, errors, options) => {\n  if (/^\\s+$/.test(value) || value === '') {\n    errors.push(format(options.messages.whitespace, rule.fullField));\n  }\n};\n\nexport default whitespace;\n","import { ExecuteRule, Value } from '../interface';\nimport { format } from '../util';\nimport required from './required';\n\n/* eslint max-len:0 */\n\nconst pattern = {\n  // http://emailregex.com/\n  email: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+\\.)+[a-zA-Z\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{2,}))$/,\n  url: new RegExp(\n    '^(?!mailto:)(?:(?:http|https|ftp)://|//)(?:\\\\S+(?::\\\\S*)?@)?(?:(?:(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[0-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]+-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})))|localhost)(?::\\\\d{2,5})?(?:(/|\\\\?|#)[^\\\\s]*)?$',\n    'i',\n  ),\n  hex: /^#?([a-f0-9]{6}|[a-f0-9]{3})$/i,\n};\n\nconst types = {\n  integer(value: Value) {\n    return types.number(value) && parseInt(value, 10) === value;\n  },\n  float(value: Value) {\n    return types.number(value) && !types.integer(value);\n  },\n  array(value: Value) {\n    return Array.isArray(value);\n  },\n  regexp(value: Value) {\n    if (value instanceof RegExp) {\n      return true;\n    }\n    try {\n      return !!new RegExp(value);\n    } catch (e) {\n      return false;\n    }\n  },\n  date(value: Value) {\n    return (\n      typeof value.getTime === 'function' &&\n      typeof value.getMonth === 'function' &&\n      typeof value.getYear === 'function' &&\n      !isNaN(value.getTime())\n    );\n  },\n  number(value: Value) {\n    if (isNaN(value)) {\n      return false;\n    }\n    return typeof value === 'number';\n  },\n  object(value: Value) {\n    return typeof value === 'object' && !types.array(value);\n  },\n  method(value: Value) {\n    return typeof value === 'function';\n  },\n  email(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 320 &&\n      !!value.match(pattern.email)\n    );\n  },\n  url(value: Value) {\n    return (\n      typeof value === 'string' &&\n      value.length <= 2048 &&\n      !!value.match(pattern.url)\n    );\n  },\n  hex(value: Value) {\n    return typeof value === 'string' && !!value.match(pattern.hex);\n  },\n};\n\nconst type: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.required && value === undefined) {\n    required(rule, value, source, errors, options);\n    return;\n  }\n  const custom = [\n    'integer',\n    'float',\n    'array',\n    'regexp',\n    'object',\n    'method',\n    'email',\n    'number',\n    'date',\n    'url',\n    'hex',\n  ];\n  const ruleType = rule.type;\n  if (custom.indexOf(ruleType) > -1) {\n    if (!types[ruleType](value)) {\n      errors.push(\n        format(options.messages.types[ruleType], rule.fullField, rule.type),\n      );\n    }\n    // straight typeof check\n  } else if (ruleType && typeof value !== rule.type) {\n    errors.push(\n      format(options.messages.types[ruleType], rule.fullField, rule.type),\n    );\n  }\n};\n\nexport default type;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst range: ExecuteRule = (rule, value, source, errors, options) => {\n  const len = typeof rule.len === 'number';\n  const min = typeof rule.min === 'number';\n  const max = typeof rule.max === 'number';\n  // 正则匹配码点范围从U+010000一直到U+10FFFF的文字（补充平面Supplementary Plane）\n  const spRegexp = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n  let val = value;\n  let key = null;\n  const num = typeof value === 'number';\n  const str = typeof value === 'string';\n  const arr = Array.isArray(value);\n  if (num) {\n    key = 'number';\n  } else if (str) {\n    key = 'string';\n  } else if (arr) {\n    key = 'array';\n  }\n  // if the value is not of a supported type for range validation\n  // the validation rule rule should use the\n  // type property to also test for a particular type\n  if (!key) {\n    return false;\n  }\n  if (arr) {\n    val = value.length;\n  }\n  if (str) {\n    // 处理码点大于U+010000的文字length属性不准确的bug，如\"𠮷𠮷𠮷\".lenght !== 3\n    val = value.replace(spRegexp, '_').length;\n  }\n  if (len) {\n    if (val !== rule.len) {\n      errors.push(format(options.messages[key].len, rule.fullField, rule.len));\n    }\n  } else if (min && !max && val < rule.min) {\n    errors.push(format(options.messages[key].min, rule.fullField, rule.min));\n  } else if (max && !min && val > rule.max) {\n    errors.push(format(options.messages[key].max, rule.fullField, rule.max));\n  } else if (min && max && (val < rule.min || val > rule.max)) {\n    errors.push(\n      format(options.messages[key].range, rule.fullField, rule.min, rule.max),\n    );\n  }\n};\n\nexport default range;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteRule = (rule, value, source, errors, options) => {\n  rule[ENUM] = Array.isArray(rule[ENUM]) ? rule[ENUM] : [];\n  if (rule[ENUM].indexOf(value) === -1) {\n    errors.push(\n      format(options.messages[ENUM], rule.fullField, rule[ENUM].join(', ')),\n    );\n  }\n};\n\nexport default enumerable;\n","import { ExecuteRule } from '../interface';\nimport { format } from '../util';\n\nconst pattern: ExecuteRule = (rule, value, source, errors, options) => {\n  if (rule.pattern) {\n    if (rule.pattern instanceof RegExp) {\n      // if a RegExp instance is passed, reset `lastIndex` in case its `global`\n      // flag is accidentally set to `true`, which in a validation scenario\n      // is not necessary and the result might be misleading\n      rule.pattern.lastIndex = 0;\n      if (!rule.pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    } else if (typeof rule.pattern === 'string') {\n      const _pattern = new RegExp(rule.pattern);\n      if (!_pattern.test(value)) {\n        errors.push(\n          format(\n            options.messages.pattern.mismatch,\n            rule.fullField,\n            value,\n            rule.pattern,\n          ),\n        );\n      }\n    }\n  }\n};\n\nexport default pattern;\n","import required from './required';\nimport whitespace from './whitespace';\nimport type from './type';\nimport range from './range';\nimport enumRule from './enum';\nimport pattern from './pattern';\n\nexport default {\n  required,\n  whitespace,\n  type,\n  range,\n  enum: enumRule,\n  pattern,\n};\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst string: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'string');\n    if (!isEmptyValue(value, 'string')) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n      rules.pattern(rule, value, source, errors, options);\n      if (rule.whitespace === true) {\n        rules.whitespace(rule, value, source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default string;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst method: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default method;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst number: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (value === '') {\n      value = undefined;\n    }\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default number;\n","import { isEmptyValue } from '../util';\nimport rules from '../rule';\nimport { ExecuteValidator } from '../interface';\n\nconst boolean: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default boolean;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst regexp: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default regexp;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst integer: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default integer;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst floatFn: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default floatFn;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule/index';\n\nconst array: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if ((value === undefined || value === null) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, 'array');\n    if (value !== undefined && value !== null) {\n      rules.type(rule, value, source, errors, options);\n      rules.range(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default array;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst object: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default object;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst ENUM = 'enum' as const;\n\nconst enumerable: ExecuteValidator = (\n  rule,\n  value,\n  callback,\n  source,\n  options,\n) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (value !== undefined) {\n      rules[ENUM](rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default enumerable;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst pattern: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, 'string') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'string')) {\n      rules.pattern(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default pattern;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst date: ExecuteValidator = (rule, value, callback, source, options) => {\n  // console.log('integer rule called %j', rule);\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  // console.log('validate on %s value', value);\n  if (validate) {\n    if (isEmptyValue(value, 'date') && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n    if (!isEmptyValue(value, 'date')) {\n      let dateObject;\n\n      if (value instanceof Date) {\n        dateObject = value;\n      } else {\n        dateObject = new Date(value);\n      }\n\n      rules.type(rule, dateObject, source, errors, options);\n      if (dateObject) {\n        rules.range(rule, dateObject.getTime(), source, errors, options);\n      }\n    }\n  }\n  callback(errors);\n};\n\nexport default date;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\n\nconst required: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const type = Array.isArray(value) ? 'array' : typeof value;\n  rules.required(rule, value, source, errors, options, type);\n  callback(errors);\n};\n\nexport default required;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst type: ExecuteValidator = (rule, value, callback, source, options) => {\n  const ruleType = rule.type;\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value, ruleType) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options, ruleType);\n    if (!isEmptyValue(value, ruleType)) {\n      rules.type(rule, value, source, errors, options);\n    }\n  }\n  callback(errors);\n};\n\nexport default type;\n","import { ExecuteValidator } from '../interface';\nimport rules from '../rule';\nimport { isEmptyValue } from '../util';\n\nconst any: ExecuteValidator = (rule, value, callback, source, options) => {\n  const errors: string[] = [];\n  const validate =\n    rule.required || (!rule.required && source.hasOwnProperty(rule.field));\n  if (validate) {\n    if (isEmptyValue(value) && !rule.required) {\n      return callback();\n    }\n    rules.required(rule, value, source, errors, options);\n  }\n  callback(errors);\n};\n\nexport default any;\n","import string from './string';\nimport method from './method';\nimport number from './number';\nimport boolean from './boolean';\nimport regexp from './regexp';\nimport integer from './integer';\nimport float from './float';\nimport array from './array';\nimport object from './object';\nimport enumValidator from './enum';\nimport pattern from './pattern';\nimport date from './date';\nimport required from './required';\nimport type from './type';\nimport any from './any';\n\nexport default {\n  string,\n  method,\n  number,\n  boolean,\n  regexp,\n  integer,\n  float,\n  array,\n  object,\n  enum: enumValidator,\n  pattern,\n  date,\n  url: type,\n  hex: type,\n  email: type,\n  required,\n  any,\n};\n","import { InternalValidateMessages } from './interface';\n\nexport function newMessages(): InternalValidateMessages {\n  return {\n    default: 'Validation error on field %s',\n    required: '%s is required',\n    enum: '%s must be one of %s',\n    whitespace: '%s cannot be empty',\n    date: {\n      format: '%s date %s is invalid for format %s',\n      parse: '%s date could not be parsed, %s is invalid ',\n      invalid: '%s date %s is invalid',\n    },\n    types: {\n      string: '%s is not a %s',\n      method: '%s is not a %s (function)',\n      array: '%s is not an %s',\n      object: '%s is not an %s',\n      number: '%s is not a %s',\n      date: '%s is not a %s',\n      boolean: '%s is not a %s',\n      integer: '%s is not an %s',\n      float: '%s is not a %s',\n      regexp: '%s is not a valid %s',\n      email: '%s is not a valid %s',\n      url: '%s is not a valid %s',\n      hex: '%s is not a valid %s',\n    },\n    string: {\n      len: '%s must be exactly %s characters',\n      min: '%s must be at least %s characters',\n      max: '%s cannot be longer than %s characters',\n      range: '%s must be between %s and %s characters',\n    },\n    number: {\n      len: '%s must equal %s',\n      min: '%s cannot be less than %s',\n      max: '%s cannot be greater than %s',\n      range: '%s must be between %s and %s',\n    },\n    array: {\n      len: '%s must be exactly %s in length',\n      min: '%s cannot be less than %s in length',\n      max: '%s cannot be greater than %s in length',\n      range: '%s must be between %s and %s in length',\n    },\n    pattern: {\n      mismatch: '%s value %s does not match pattern %s',\n    },\n    clone() {\n      const cloned = JSON.parse(JSON.stringify(this));\n      cloned.clone = this.clone;\n      return cloned;\n    },\n  };\n}\n\nexport const messages = newMessages();\n","import {\n  format,\n  complementError,\n  asyncMap,\n  warning,\n  deepMerge,\n  convertFieldsError,\n} from './util';\nimport validators from './validator/index';\nimport { messages as defaultMessages, newMessages } from './messages';\nimport {\n  InternalRuleItem,\n  InternalValidateMessages,\n  Rule,\n  RuleItem,\n  Rules,\n  ValidateCallback,\n  ValidateMessages,\n  ValidateOption,\n  Values,\n  RuleValuePackage,\n  ValidateError,\n  ValidateFieldsError,\n  SyncErrorType,\n  ValidateResult,\n} from './interface';\n\nexport * from './interface';\n\n/**\n *  Encapsulates a validation schema.\n *\n *  @param descriptor An object declaring validation rules\n *  for this schema.\n */\nclass Schema {\n  // ========================= Static =========================\n  static register = function register(type: string, validator) {\n    if (typeof validator !== 'function') {\n      throw new Error(\n        'Cannot register a validator by type, validator is not a function',\n      );\n    }\n    validators[type] = validator;\n  };\n\n  static warning = warning;\n\n  static messages = defaultMessages;\n\n  static validators = validators;\n\n  // ======================== Instance ========================\n  rules: Record<string, RuleItem[]> = null;\n  _messages: InternalValidateMessages = defaultMessages;\n\n  constructor(descriptor: Rules) {\n    this.define(descriptor);\n  }\n\n  define(rules: Rules) {\n    if (!rules) {\n      throw new Error('Cannot configure a schema with no rules');\n    }\n    if (typeof rules !== 'object' || Array.isArray(rules)) {\n      throw new Error('Rules must be an object');\n    }\n    this.rules = {};\n\n    Object.keys(rules).forEach(name => {\n      const item: Rule = rules[name];\n      this.rules[name] = Array.isArray(item) ? item : [item];\n    });\n  }\n\n  messages(messages?: ValidateMessages) {\n    if (messages) {\n      this._messages = deepMerge(newMessages(), messages);\n    }\n    return this._messages;\n  }\n\n  validate(\n    source: Values,\n    option?: ValidateOption,\n    callback?: ValidateCallback,\n  ): Promise<Values>;\n  validate(source: Values, callback: ValidateCallback): Promise<Values>;\n  validate(source: Values): Promise<Values>;\n\n  validate(source_: Values, o: any = {}, oc: any = () => {}): Promise<Values> {\n    let source: Values = source_;\n    let options: ValidateOption = o;\n    let callback: ValidateCallback = oc;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!this.rules || Object.keys(this.rules).length === 0) {\n      if (callback) {\n        callback(null, source);\n      }\n      return Promise.resolve(source);\n    }\n\n    function complete(results: (ValidateError | ValidateError[])[]) {\n      let errors: ValidateError[] = [];\n      let fields: ValidateFieldsError = {};\n\n      function add(e: ValidateError | ValidateError[]) {\n        if (Array.isArray(e)) {\n          errors = errors.concat(...e);\n        } else {\n          errors.push(e);\n        }\n      }\n\n      for (let i = 0; i < results.length; i++) {\n        add(results[i]);\n      }\n      if (!errors.length) {\n        callback(null, source);\n      } else {\n        fields = convertFieldsError(errors);\n        (callback as (\n          errors: ValidateError[],\n          fields: ValidateFieldsError,\n        ) => void)(errors, fields);\n      }\n    }\n\n    if (options.messages) {\n      let messages = this.messages();\n      if (messages === defaultMessages) {\n        messages = newMessages();\n      }\n      deepMerge(messages, options.messages);\n      options.messages = messages;\n    } else {\n      options.messages = this.messages();\n    }\n\n    const series: Record<string, RuleValuePackage[]> = {};\n    const keys = options.keys || Object.keys(this.rules);\n    keys.forEach(z => {\n      const arr = this.rules[z];\n      let value = source[z];\n      arr.forEach(r => {\n        let rule: InternalRuleItem = r;\n        if (typeof rule.transform === 'function') {\n          if (source === source_) {\n            source = { ...source };\n          }\n          value = source[z] = rule.transform(value);\n        }\n        if (typeof rule === 'function') {\n          rule = {\n            validator: rule,\n          };\n        } else {\n          rule = { ...rule };\n        }\n\n        // Fill validator. Skip if nothing need to validate\n        rule.validator = this.getValidationMethod(rule);\n        if (!rule.validator) {\n          return;\n        }\n\n        rule.field = z;\n        rule.fullField = rule.fullField || z;\n        rule.type = this.getType(rule);\n        series[z] = series[z] || [];\n        series[z].push({\n          rule,\n          value,\n          source,\n          field: z,\n        });\n      });\n    });\n    const errorFields = {};\n    return asyncMap(\n      series,\n      options,\n      (data, doIt) => {\n        const rule = data.rule;\n        let deep =\n          (rule.type === 'object' || rule.type === 'array') &&\n          (typeof rule.fields === 'object' ||\n            typeof rule.defaultField === 'object');\n        deep = deep && (rule.required || (!rule.required && data.value));\n        rule.field = data.field;\n\n        function addFullField(key: string, schema: RuleItem) {\n          return {\n            ...schema,\n            fullField: `${rule.fullField}.${key}`,\n            fullFields: rule.fullFields ? [...rule.fullFields, key] : [key],\n          };\n        }\n\n        function cb(e: SyncErrorType | SyncErrorType[] = []) {\n          let errorList = Array.isArray(e) ? e : [e];\n          if (!options.suppressWarning && errorList.length) {\n            Schema.warning('async-validator:', errorList);\n          }\n          if (errorList.length && rule.message !== undefined) {\n            errorList = [].concat(rule.message);\n          }\n\n          // Fill error info\n          let filledErrors = errorList.map(complementError(rule, source));\n\n          if (options.first && filledErrors.length) {\n            errorFields[rule.field] = 1;\n            return doIt(filledErrors);\n          }\n          if (!deep) {\n            doIt(filledErrors);\n          } else {\n            // if rule is required but the target object\n            // does not exist fail at the rule level and don't\n            // go deeper\n            if (rule.required && !data.value) {\n              if (rule.message !== undefined) {\n                filledErrors = []\n                  .concat(rule.message)\n                  .map(complementError(rule, source));\n              } else if (options.error) {\n                filledErrors = [\n                  options.error(\n                    rule,\n                    format(options.messages.required, rule.field),\n                  ),\n                ];\n              }\n              return doIt(filledErrors);\n            }\n\n            let fieldsSchema: Record<string, Rule> = {};\n            if (rule.defaultField) {\n              Object.keys(data.value).map(key => {\n                fieldsSchema[key] = rule.defaultField;\n              });\n            }\n            fieldsSchema = {\n              ...fieldsSchema,\n              ...data.rule.fields,\n            };\n\n            const paredFieldsSchema: Record<string, RuleItem[]> = {};\n\n            Object.keys(fieldsSchema).forEach(field => {\n              const fieldSchema = fieldsSchema[field];\n              const fieldSchemaList = Array.isArray(fieldSchema)\n                ? fieldSchema\n                : [fieldSchema];\n              paredFieldsSchema[field] = fieldSchemaList.map(\n                addFullField.bind(null, field),\n              );\n            });\n            const schema = new Schema(paredFieldsSchema);\n            schema.messages(options.messages);\n            if (data.rule.options) {\n              data.rule.options.messages = options.messages;\n              data.rule.options.error = options.error;\n            }\n            schema.validate(data.value, data.rule.options || options, errs => {\n              const finalErrors = [];\n              if (filledErrors && filledErrors.length) {\n                finalErrors.push(...filledErrors);\n              }\n              if (errs && errs.length) {\n                finalErrors.push(...errs);\n              }\n              doIt(finalErrors.length ? finalErrors : null);\n            });\n          }\n        }\n\n        let res: ValidateResult;\n        if (rule.asyncValidator) {\n          res = rule.asyncValidator(rule, data.value, cb, data.source, options);\n        } else if (rule.validator) {\n          res = rule.validator(rule, data.value, cb, data.source, options);\n          if (res === true) {\n            cb();\n          } else if (res === false) {\n            cb(\n              typeof rule.message === 'function'\n                ? rule.message(rule.fullField || rule.field)\n                : rule.message || `${rule.fullField || rule.field} fails`,\n            );\n          } else if (res instanceof Array) {\n            cb(res);\n          } else if (res instanceof Error) {\n            cb(res.message);\n          }\n        }\n        if (res && (res as Promise<void>).then) {\n          (res as Promise<void>).then(\n            () => cb(),\n            e => cb(e),\n          );\n        }\n      },\n      results => {\n        complete(results);\n      },\n      source,\n    );\n  }\n\n  getType(rule: InternalRuleItem) {\n    if (rule.type === undefined && rule.pattern instanceof RegExp) {\n      rule.type = 'pattern';\n    }\n    if (\n      typeof rule.validator !== 'function' &&\n      rule.type &&\n      !validators.hasOwnProperty(rule.type)\n    ) {\n      throw new Error(format('Unknown rule type %s', rule.type));\n    }\n    return rule.type || 'string';\n  }\n\n  getValidationMethod(rule: InternalRuleItem) {\n    if (typeof rule.validator === 'function') {\n      return rule.validator;\n    }\n    const keys = Object.keys(rule);\n    const messageIndex = keys.indexOf('message');\n    if (messageIndex !== -1) {\n      keys.splice(messageIndex, 1);\n    }\n    if (keys.length === 1 && keys[0] === 'required') {\n      return validators.required;\n    }\n    return validators[this.getType(rule)] || undefined;\n  }\n}\n\nexport default Schema;\n"],"names":["formatRegExp","warning","process","env","NODE_ENV","window","document","type","errors","console","warn","ASYNC_VALIDATOR_NO_WARNING","every","e","convertFieldsError","length","fields","forEach","error","field","push","format","template","args","i","len","apply","str","replace","x","String","Number","JSON","stringify","_","isNativeStringType","isEmptyValue","value","undefined","Array","isArray","asyncParallelArray","arr","func","callback","results","total","arrLength","count","a","asyncSerialArray","index","next","original","flattenObjArr","objArr","ret","Object","keys","k","AsyncValidationError","Error","asyncMap","option","source","first","pending","Promise","resolve","reject","flattenArr","firstFields","objArrKeys","objArrLength","key","indexOf","isErrorObj","obj","message","getValue","path","v","complementError","rule","oe","fieldValue","fullFields","fullField","deepMerge","target","s","hasOwnProperty","required","options","messages","whitespace","test","pattern","email","url","RegExp","hex","types","integer","number","parseInt","array","regexp","date","getTime","getMonth","getYear","isNaN","object","method","match","custom","ruleType","range","min","max","spRegexp","val","num","ENUM","enumerable","join","lastIndex","mismatch","_pattern","enumRule","string","validate","rules","boolean","floatFn","dateObject","Date","any","float","enumValidator","newMessages","parse","invalid","clone","cloned","Schema","descriptor","_messages","defaultMessages","define","name","item","source_","o","oc","complete","add","concat","series","z","r","transform","validator","getValidationMethod","getType","errorFields","data","doIt","deep","defaultField","addFullField","schema","cb","errorList","suppressWarning","filledErrors","map","fieldsSchema","paredFieldsSchema","fieldSchema","fieldSchemaList","bind","errs","finalErrors","res","asyncValidator","then","validators","messageIndex","splice","register"],"mappings":"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"}