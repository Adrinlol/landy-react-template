{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nvar uniquePrefix = Math.random().toFixed(5).toString().slice(2);\nvar internalId = 0;\nexport default function useUUID(id) {\n  var _useMergedState = useMergedState(id, {\n    value: id\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      uuid = _useMergedState2[0],\n      setUUID = _useMergedState2[1];\n\n  React.useEffect(function () {\n    internalId += 1;\n    var newId = process.env.NODE_ENV === 'test' ? 'test' : \"\".concat(uniquePrefix, \"-\").concat(internalId);\n    setUUID(\"rc-menu-uuid-\".concat(newId));\n  }, []);\n  return uuid;\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-menu/es/hooks/useUUID.js"],"names":["_slicedToArray","React","useMergedState","uniquePrefix","Math","random","toFixed","toString","slice","internalId","useUUID","id","_useMergedState","value","_useMergedState2","uuid","setUUID","useEffect","newId","process","env","NODE_ENV","concat"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,IAAIC,YAAY,GAAGC,IAAI,CAACC,MAAL,GAAcC,OAAd,CAAsB,CAAtB,EAAyBC,QAAzB,GAAoCC,KAApC,CAA0C,CAA1C,CAAnB;AACA,IAAIC,UAAU,GAAG,CAAjB;AACA,eAAe,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AAClC,MAAIC,eAAe,GAAGV,cAAc,CAACS,EAAD,EAAK;AACvCE,IAAAA,KAAK,EAAEF;AADgC,GAAL,CAApC;AAAA,MAGIG,gBAAgB,GAAGd,cAAc,CAACY,eAAD,EAAkB,CAAlB,CAHrC;AAAA,MAIIG,IAAI,GAAGD,gBAAgB,CAAC,CAAD,CAJ3B;AAAA,MAKIE,OAAO,GAAGF,gBAAgB,CAAC,CAAD,CAL9B;;AAOAb,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAY;AAC1BR,IAAAA,UAAU,IAAI,CAAd;AACA,QAAIS,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,MAAzB,GAAkC,MAAlC,GAA2C,GAAGC,MAAH,CAAUnB,YAAV,EAAwB,GAAxB,EAA6BmB,MAA7B,CAAoCb,UAApC,CAAvD;AACAO,IAAAA,OAAO,CAAC,gBAAgBM,MAAhB,CAAuBJ,KAAvB,CAAD,CAAP;AACD,GAJD,EAIG,EAJH;AAKA,SAAOH,IAAP;AACD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nvar uniquePrefix = Math.random().toFixed(5).toString().slice(2);\nvar internalId = 0;\nexport default function useUUID(id) {\n  var _useMergedState = useMergedState(id, {\n    value: id\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      uuid = _useMergedState2[0],\n      setUUID = _useMergedState2[1];\n\n  React.useEffect(function () {\n    internalId += 1;\n    var newId = process.env.NODE_ENV === 'test' ? 'test' : \"\".concat(uniquePrefix, \"-\").concat(internalId);\n    setUUID(\"rc-menu-uuid-\".concat(newId));\n  }, []);\n  return uuid;\n}"]},"metadata":{},"sourceType":"module"}