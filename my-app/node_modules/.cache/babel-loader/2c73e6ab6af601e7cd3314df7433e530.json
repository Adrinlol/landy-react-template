{"ast":null,"code":"import React from 'react';\nimport CSSMotion from 'rc-motion';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\n\nvar getCollapsedWidth = function getCollapsedWidth() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: 'scale(0)'\n  };\n};\n\nvar getRealWidth = function getRealWidth(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: 'scale(1)'\n  };\n};\n\nvar LoadingIcon = function LoadingIcon(_ref) {\n  var prefixCls = _ref.prefixCls,\n      loading = _ref.loading,\n      existIcon = _ref.existIcon;\n  var visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\")\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, null));\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible // We do not really use this motionName\n    ,\n    motionName: \"\".concat(prefixCls, \"-loading-icon-motion\"),\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, function (_ref2, ref) {\n    var className = _ref2.className,\n        style = _ref2.style;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\"),\n      style: style,\n      ref: ref\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: className\n    }));\n  });\n};\n\nexport default LoadingIcon;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/button/LoadingIcon.js"],"names":["React","CSSMotion","LoadingOutlined","getCollapsedWidth","width","opacity","transform","getRealWidth","node","scrollWidth","LoadingIcon","_ref","prefixCls","loading","existIcon","visible","createElement","className","concat","motionName","removeOnLeave","onAppearStart","onAppearActive","onEnterStart","onEnterActive","onLeaveStart","onLeaveActive","_ref2","ref","style"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,eAAP,MAA4B,4CAA5B;;AAEA,IAAIC,iBAAiB,GAAG,SAASA,iBAAT,GAA6B;AACnD,SAAO;AACLC,IAAAA,KAAK,EAAE,CADF;AAELC,IAAAA,OAAO,EAAE,CAFJ;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD,CAND;;AAQA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7C,SAAO;AACLJ,IAAAA,KAAK,EAAEI,IAAI,CAACC,WADP;AAELJ,IAAAA,OAAO,EAAE,CAFJ;AAGLC,IAAAA,SAAS,EAAE;AAHN,GAAP;AAKD,CAND;;AAQA,IAAII,WAAW,GAAG,SAASA,WAAT,CAAqBC,IAArB,EAA2B;AAC3C,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,OAAO,GAAGF,IAAI,CAACE,OADnB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACG,SAFrB;AAGA,MAAIC,OAAO,GAAG,CAAC,CAACF,OAAhB;;AAEA,MAAIC,SAAJ,EAAe;AACb,WAAO,aAAad,KAAK,CAACgB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,MAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUN,SAAV,EAAqB,eAArB;AADmC,KAA5B,EAEjB,aAAaZ,KAAK,CAACgB,aAAN,CAAoBd,eAApB,EAAqC,IAArC,CAFI,CAApB;AAGD;;AAED,SAAO,aAAaF,KAAK,CAACgB,aAAN,CAAoBf,SAApB,EAA+B;AACjDc,IAAAA,OAAO,EAAEA,OADwC,CAChC;AADgC;AAGjDI,IAAAA,UAAU,EAAE,GAAGD,MAAH,CAAUN,SAAV,EAAqB,sBAArB,CAHqC;AAIjDQ,IAAAA,aAAa,EAAE,IAJkC;AAKjDC,IAAAA,aAAa,EAAElB,iBALkC;AAMjDmB,IAAAA,cAAc,EAAEf,YANiC;AAOjDgB,IAAAA,YAAY,EAAEpB,iBAPmC;AAQjDqB,IAAAA,aAAa,EAAEjB,YARkC;AASjDkB,IAAAA,YAAY,EAAElB,YATmC;AAUjDmB,IAAAA,aAAa,EAAEvB;AAVkC,GAA/B,EAWjB,UAAUwB,KAAV,EAAiBC,GAAjB,EAAsB;AACvB,QAAIX,SAAS,GAAGU,KAAK,CAACV,SAAtB;AAAA,QACIY,KAAK,GAAGF,KAAK,CAACE,KADlB;AAEA,WAAO,aAAa7B,KAAK,CAACgB,aAAN,CAAoB,MAApB,EAA4B;AAC9CC,MAAAA,SAAS,EAAE,GAAGC,MAAH,CAAUN,SAAV,EAAqB,eAArB,CADmC;AAE9CiB,MAAAA,KAAK,EAAEA,KAFuC;AAG9CD,MAAAA,GAAG,EAAEA;AAHyC,KAA5B,EAIjB,aAAa5B,KAAK,CAACgB,aAAN,CAAoBd,eAApB,EAAqC;AACnDe,MAAAA,SAAS,EAAEA;AADwC,KAArC,CAJI,CAApB;AAOD,GArBmB,CAApB;AAsBD,CAlCD;;AAoCA,eAAeP,WAAf","sourcesContent":["import React from 'react';\nimport CSSMotion from 'rc-motion';\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\n\nvar getCollapsedWidth = function getCollapsedWidth() {\n  return {\n    width: 0,\n    opacity: 0,\n    transform: 'scale(0)'\n  };\n};\n\nvar getRealWidth = function getRealWidth(node) {\n  return {\n    width: node.scrollWidth,\n    opacity: 1,\n    transform: 'scale(1)'\n  };\n};\n\nvar LoadingIcon = function LoadingIcon(_ref) {\n  var prefixCls = _ref.prefixCls,\n      loading = _ref.loading,\n      existIcon = _ref.existIcon;\n  var visible = !!loading;\n\n  if (existIcon) {\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\")\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, null));\n  }\n\n  return /*#__PURE__*/React.createElement(CSSMotion, {\n    visible: visible // We do not really use this motionName\n    ,\n    motionName: \"\".concat(prefixCls, \"-loading-icon-motion\"),\n    removeOnLeave: true,\n    onAppearStart: getCollapsedWidth,\n    onAppearActive: getRealWidth,\n    onEnterStart: getCollapsedWidth,\n    onEnterActive: getRealWidth,\n    onLeaveStart: getRealWidth,\n    onLeaveActive: getCollapsedWidth\n  }, function (_ref2, ref) {\n    var className = _ref2.className,\n        style = _ref2.style;\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-loading-icon\"),\n      style: style,\n      ref: ref\n    }, /*#__PURE__*/React.createElement(LoadingOutlined, {\n      className: className\n    }));\n  });\n};\n\nexport default LoadingIcon;"]},"metadata":{},"sourceType":"module"}