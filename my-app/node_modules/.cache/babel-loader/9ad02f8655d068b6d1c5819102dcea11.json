{"ast":null,"code":"var _jsxFileName = \"/Users/iflego/Documents/GitHub/landy-react-template/my-app/src/common/ScrollToTop/index.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { SvgIcon } from \"../SvgIcon\";\nimport { ScrollUpContainer } from \"./styles\";\nimport { getScroll } from \"../utils/getWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ScrollToTop = () => {\n  _s();\n\n  const [showScroll, setShowScroll] = useState(false);\n\n  const checkScrollTop = event => {\n    const offsetFromTop = getScroll(event.target, true);\n\n    if (!showScroll && offsetFromTop > 350) {\n      setShowScroll(true);\n    } else if (offsetFromTop <= 350) {\n      setShowScroll(false);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", checkScrollTop);\n    return () => {\n      window.removeEventListener(\"scroll\", checkScrollTop);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const scrollUp = () => {\n    const element = document.getElementById(\"intro\");\n    element.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"end\",\n      inline: \"nearest\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(ScrollUpContainer, {\n    onClick: scrollUp,\n    show: showScroll,\n    children: /*#__PURE__*/_jsxDEV(SvgIcon, {\n      src: \"scroll-top.svg\",\n      width: \"20px\",\n      height: \"20px\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ScrollToTop, \"PfkPbRUmWGfJg95Mr7aaJLsda20=\");\n\n_c = ScrollToTop;\nexport default ScrollToTop;\n\nvar _c;\n\n$RefreshReg$(_c, \"ScrollToTop\");","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/src/common/ScrollToTop/index.tsx"],"names":["useEffect","useState","SvgIcon","ScrollUpContainer","getScroll","ScrollToTop","showScroll","setShowScroll","checkScrollTop","event","offsetFromTop","target","window","addEventListener","removeEventListener","scrollUp","element","document","getElementById","scrollIntoView","behavior","block","inline"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,SAASC,iBAAT,QAAkC,UAAlC;AACA,SAASC,SAAT,QAA0B,oBAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BN,QAAQ,CAAC,KAAD,CAA5C;;AAEA,QAAMO,cAAc,GAAIC,KAAD,IAAgB;AACrC,UAAMC,aAAa,GAAGN,SAAS,CAACK,KAAK,CAACE,MAAP,EAAe,IAAf,CAA/B;;AAEA,QAAI,CAACL,UAAD,IAAeI,aAAa,GAAG,GAAnC,EAAwC;AACtCH,MAAAA,aAAa,CAAC,IAAD,CAAb;AACD,KAFD,MAEO,IAAIG,aAAa,IAAI,GAArB,EAA0B;AAC/BH,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GARD;;AAUAP,EAAAA,SAAS,CAAC,MAAM;AACdY,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCL,cAAlC;AACA,WAAO,MAAM;AACXI,MAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,EAAqCN,cAArC;AACD,KAFD,CAFc,CAKd;AACD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMO,QAAQ,GAAG,MAAM;AACrB,UAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACG,cAAR,CAAuB;AACrBC,MAAAA,QAAQ,EAAE,QADW;AAErBC,MAAAA,KAAK,EAAE,KAFc;AAGrBC,MAAAA,MAAM,EAAE;AAHa,KAAvB;AAKD,GAPD;;AASA,sBACE,QAAC,iBAAD;AAAmB,IAAA,OAAO,EAAEP,QAA5B;AAAsC,IAAA,IAAI,EAAET,UAA5C;AAAA,2BACE,QAAC,OAAD;AAAS,MAAA,GAAG,EAAC,gBAAb;AAA8B,MAAA,KAAK,EAAC,MAApC;AAA2C,MAAA,MAAM,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAnCD;;GAAMD,W;;KAAAA,W;AAqCN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { SvgIcon } from \"../SvgIcon\";\r\nimport { ScrollUpContainer } from \"./styles\";\r\nimport { getScroll } from \"../utils/getWindow\";\r\n\r\nconst ScrollToTop = () => {\r\n  const [showScroll, setShowScroll] = useState(false);\r\n\r\n  const checkScrollTop = (event: any) => {\r\n    const offsetFromTop = getScroll(event.target, true);\r\n\r\n    if (!showScroll && offsetFromTop > 350) {\r\n      setShowScroll(true);\r\n    } else if (offsetFromTop <= 350) {\r\n      setShowScroll(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", checkScrollTop);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", checkScrollTop);\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  const scrollUp = () => {\r\n    const element = document.getElementById(\"intro\") as HTMLDivElement;\r\n    element.scrollIntoView({\r\n      behavior: \"smooth\",\r\n      block: \"end\",\r\n      inline: \"nearest\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ScrollUpContainer onClick={scrollUp} show={showScroll}>\r\n      <SvgIcon src=\"scroll-top.svg\" width=\"20px\" height=\"20px\" />\r\n    </ScrollUpContainer>\r\n  );\r\n};\r\n\r\nexport default ScrollToTop;\r\n"]},"metadata":{},"sourceType":"module"}