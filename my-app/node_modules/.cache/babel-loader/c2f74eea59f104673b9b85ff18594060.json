{"ast":null,"code":"var _jsxFileName = \"/Users/iflego/Documents/GitHub/landy-react-template/my-app/src/components/Block/index.tsx\";\nimport { withTranslation } from \"react-i18next\";\nimport { Container, TextWrapper, Content } from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Block = _ref => {\n  let {\n    title,\n    content,\n    t\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n      children: t(title)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TextWrapper, {\n      children: /*#__PURE__*/_jsxDEV(Content, {\n        children: t(content)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Block;\nexport default withTranslation()(Block);\n\nvar _c;\n\n$RefreshReg$(_c, \"Block\");","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/src/components/Block/index.tsx"],"names":["withTranslation","Container","TextWrapper","Content","Block","title","content","t"],"mappings":";AAAA,SAASA,eAAT,QAAgC,eAAhC;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,OAAjC,QAAgD,UAAhD;;;AAQA,MAAMC,KAAK,GAAG,QAAkC;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA;AAAlB,GAAiC;AAC9C,sBACE,QAAC,SAAD;AAAA,4BACE;AAAA,gBAAKA,CAAC,CAACF,KAAD;AAAN;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,WAAD;AAAA,6BACE,QAAC,OAAD;AAAA,kBAAUE,CAAC,CAACD,OAAD;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CATD;;KAAMF,K;AAWN,eAAeJ,eAAe,GAAGI,KAAH,CAA9B","sourcesContent":["import { withTranslation } from \"react-i18next\";\r\nimport { Container, TextWrapper, Content } from \"./styles\";\r\n\r\ninterface Props {\r\n  title: string;\r\n  content: string;\r\n  t: any;\r\n}\r\n\r\nconst Block = ({ title, content, t }: Props) => {\r\n  return (\r\n    <Container>\r\n      <h6>{t(title)}</h6>\r\n      <TextWrapper>\r\n        <Content>{t(content)}</Content>\r\n      </TextWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default withTranslation()(Block);\r\n"]},"metadata":{},"sourceType":"module"}