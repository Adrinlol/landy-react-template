{"ast":null,"code":"export function getCellFixedInfo(colStart, colEnd, columns, stickyOffsets, direction) {\n  var startColumn = columns[colStart] || {};\n  var endColumn = columns[colEnd] || {};\n  var fixLeft;\n  var fixRight;\n\n  if (startColumn.fixed === 'left') {\n    fixLeft = stickyOffsets.left[colStart];\n  } else if (endColumn.fixed === 'right') {\n    fixRight = stickyOffsets.right[colEnd];\n  }\n\n  var lastFixLeft = false;\n  var firstFixRight = false;\n  var lastFixRight = false;\n  var firstFixLeft = false;\n  var nextColumn = columns[colEnd + 1];\n  var prevColumn = columns[colStart - 1];\n\n  if (direction === 'rtl') {\n    if (fixLeft !== undefined) {\n      var prevFixLeft = prevColumn && prevColumn.fixed === 'left';\n      firstFixLeft = !prevFixLeft;\n    } else if (fixRight !== undefined) {\n      var nextFixRight = nextColumn && nextColumn.fixed === 'right';\n      lastFixRight = !nextFixRight;\n    }\n  } else if (fixLeft !== undefined) {\n    var nextFixLeft = nextColumn && nextColumn.fixed === 'left';\n    lastFixLeft = !nextFixLeft;\n  } else if (fixRight !== undefined) {\n    var prevFixRight = prevColumn && prevColumn.fixed === 'right';\n    firstFixRight = !prevFixRight;\n  }\n\n  return {\n    fixLeft: fixLeft,\n    fixRight: fixRight,\n    lastFixLeft: lastFixLeft,\n    firstFixRight: firstFixRight,\n    lastFixRight: lastFixRight,\n    firstFixLeft: firstFixLeft,\n    isSticky: stickyOffsets.isSticky\n  };\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-table/es/utils/fixUtil.js"],"names":["getCellFixedInfo","colStart","colEnd","columns","stickyOffsets","direction","startColumn","endColumn","fixLeft","fixRight","fixed","left","right","lastFixLeft","firstFixRight","lastFixRight","firstFixLeft","nextColumn","prevColumn","undefined","prevFixLeft","nextFixRight","nextFixLeft","prevFixRight","isSticky"],"mappings":"AAAA,OAAO,SAASA,gBAAT,CAA0BC,QAA1B,EAAoCC,MAApC,EAA4CC,OAA5C,EAAqDC,aAArD,EAAoEC,SAApE,EAA+E;AACpF,MAAIC,WAAW,GAAGH,OAAO,CAACF,QAAD,CAAP,IAAqB,EAAvC;AACA,MAAIM,SAAS,GAAGJ,OAAO,CAACD,MAAD,CAAP,IAAmB,EAAnC;AACA,MAAIM,OAAJ;AACA,MAAIC,QAAJ;;AAEA,MAAIH,WAAW,CAACI,KAAZ,KAAsB,MAA1B,EAAkC;AAChCF,IAAAA,OAAO,GAAGJ,aAAa,CAACO,IAAd,CAAmBV,QAAnB,CAAV;AACD,GAFD,MAEO,IAAIM,SAAS,CAACG,KAAV,KAAoB,OAAxB,EAAiC;AACtCD,IAAAA,QAAQ,GAAGL,aAAa,CAACQ,KAAd,CAAoBV,MAApB,CAAX;AACD;;AAED,MAAIW,WAAW,GAAG,KAAlB;AACA,MAAIC,aAAa,GAAG,KAApB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,YAAY,GAAG,KAAnB;AACA,MAAIC,UAAU,GAAGd,OAAO,CAACD,MAAM,GAAG,CAAV,CAAxB;AACA,MAAIgB,UAAU,GAAGf,OAAO,CAACF,QAAQ,GAAG,CAAZ,CAAxB;;AAEA,MAAII,SAAS,KAAK,KAAlB,EAAyB;AACvB,QAAIG,OAAO,KAAKW,SAAhB,EAA2B;AACzB,UAAIC,WAAW,GAAGF,UAAU,IAAIA,UAAU,CAACR,KAAX,KAAqB,MAArD;AACAM,MAAAA,YAAY,GAAG,CAACI,WAAhB;AACD,KAHD,MAGO,IAAIX,QAAQ,KAAKU,SAAjB,EAA4B;AACjC,UAAIE,YAAY,GAAGJ,UAAU,IAAIA,UAAU,CAACP,KAAX,KAAqB,OAAtD;AACAK,MAAAA,YAAY,GAAG,CAACM,YAAhB;AACD;AACF,GARD,MAQO,IAAIb,OAAO,KAAKW,SAAhB,EAA2B;AAChC,QAAIG,WAAW,GAAGL,UAAU,IAAIA,UAAU,CAACP,KAAX,KAAqB,MAArD;AACAG,IAAAA,WAAW,GAAG,CAACS,WAAf;AACD,GAHM,MAGA,IAAIb,QAAQ,KAAKU,SAAjB,EAA4B;AACjC,QAAII,YAAY,GAAGL,UAAU,IAAIA,UAAU,CAACR,KAAX,KAAqB,OAAtD;AACAI,IAAAA,aAAa,GAAG,CAACS,YAAjB;AACD;;AAED,SAAO;AACLf,IAAAA,OAAO,EAAEA,OADJ;AAELC,IAAAA,QAAQ,EAAEA,QAFL;AAGLI,IAAAA,WAAW,EAAEA,WAHR;AAILC,IAAAA,aAAa,EAAEA,aAJV;AAKLC,IAAAA,YAAY,EAAEA,YALT;AAMLC,IAAAA,YAAY,EAAEA,YANT;AAOLQ,IAAAA,QAAQ,EAAEpB,aAAa,CAACoB;AAPnB,GAAP;AASD","sourcesContent":["export function getCellFixedInfo(colStart, colEnd, columns, stickyOffsets, direction) {\n  var startColumn = columns[colStart] || {};\n  var endColumn = columns[colEnd] || {};\n  var fixLeft;\n  var fixRight;\n\n  if (startColumn.fixed === 'left') {\n    fixLeft = stickyOffsets.left[colStart];\n  } else if (endColumn.fixed === 'right') {\n    fixRight = stickyOffsets.right[colEnd];\n  }\n\n  var lastFixLeft = false;\n  var firstFixRight = false;\n  var lastFixRight = false;\n  var firstFixLeft = false;\n  var nextColumn = columns[colEnd + 1];\n  var prevColumn = columns[colStart - 1];\n\n  if (direction === 'rtl') {\n    if (fixLeft !== undefined) {\n      var prevFixLeft = prevColumn && prevColumn.fixed === 'left';\n      firstFixLeft = !prevFixLeft;\n    } else if (fixRight !== undefined) {\n      var nextFixRight = nextColumn && nextColumn.fixed === 'right';\n      lastFixRight = !nextFixRight;\n    }\n  } else if (fixLeft !== undefined) {\n    var nextFixLeft = nextColumn && nextColumn.fixed === 'left';\n    lastFixLeft = !nextFixLeft;\n  } else if (fixRight !== undefined) {\n    var prevFixRight = prevColumn && prevColumn.fixed === 'right';\n    firstFixRight = !prevFixRight;\n  }\n\n  return {\n    fixLeft: fixLeft,\n    fixRight: fixRight,\n    lastFixLeft: lastFixLeft,\n    firstFixRight: firstFixRight,\n    lastFixRight: lastFixRight,\n    firstFixLeft: firstFixLeft,\n    isSticky: stickyOffsets.isSticky\n  };\n}"]},"metadata":{},"sourceType":"module"}