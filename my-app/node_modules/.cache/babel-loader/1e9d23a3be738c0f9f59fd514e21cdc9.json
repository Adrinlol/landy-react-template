{"ast":null,"code":"import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport get from './get';\n\nfunction internalSet(entity, paths, value, removeIfUndefined) {\n  if (!paths.length) {\n    return value;\n  }\n\n  var _paths = _toArray(paths),\n      path = _paths[0],\n      restPath = _paths.slice(1);\n\n  var clone;\n\n  if (!entity && typeof path === 'number') {\n    clone = [];\n  } else if (Array.isArray(entity)) {\n    clone = _toConsumableArray(entity);\n  } else {\n    clone = _objectSpread({}, entity);\n  } // Delete prop if `removeIfUndefined` and value is undefined\n\n\n  if (removeIfUndefined && value === undefined && restPath.length === 1) {\n    delete clone[path][restPath[0]];\n  } else {\n    clone[path] = internalSet(clone[path], restPath, value, removeIfUndefined);\n  }\n\n  return clone;\n}\n\nexport default function set(entity, paths, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false; // Do nothing if `removeIfUndefined` and parent object not exist\n\n  if (paths.length && removeIfUndefined && value === undefined && !get(entity, paths.slice(0, -1))) {\n    return entity;\n  }\n\n  return internalSet(entity, paths, value, removeIfUndefined);\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-util/es/utils/set.js"],"names":["_objectSpread","_toConsumableArray","_toArray","get","internalSet","entity","paths","value","removeIfUndefined","length","_paths","path","restPath","slice","clone","Array","isArray","undefined","set","arguments"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,0CAA1B;AACA,OAAOC,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;AAEA,SAASC,WAAT,CAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,KAApC,EAA2CC,iBAA3C,EAA8D;AAC5D,MAAI,CAACF,KAAK,CAACG,MAAX,EAAmB;AACjB,WAAOF,KAAP;AACD;;AAED,MAAIG,MAAM,GAAGR,QAAQ,CAACI,KAAD,CAArB;AAAA,MACIK,IAAI,GAAGD,MAAM,CAAC,CAAD,CADjB;AAAA,MAEIE,QAAQ,GAAGF,MAAM,CAACG,KAAP,CAAa,CAAb,CAFf;;AAIA,MAAIC,KAAJ;;AAEA,MAAI,CAACT,MAAD,IAAW,OAAOM,IAAP,KAAgB,QAA/B,EAAyC;AACvCG,IAAAA,KAAK,GAAG,EAAR;AACD,GAFD,MAEO,IAAIC,KAAK,CAACC,OAAN,CAAcX,MAAd,CAAJ,EAA2B;AAChCS,IAAAA,KAAK,GAAGb,kBAAkB,CAACI,MAAD,CAA1B;AACD,GAFM,MAEA;AACLS,IAAAA,KAAK,GAAGd,aAAa,CAAC,EAAD,EAAKK,MAAL,CAArB;AACD,GAjB2D,CAiB1D;;;AAGF,MAAIG,iBAAiB,IAAID,KAAK,KAAKU,SAA/B,IAA4CL,QAAQ,CAACH,MAAT,KAAoB,CAApE,EAAuE;AACrE,WAAOK,KAAK,CAACH,IAAD,CAAL,CAAYC,QAAQ,CAAC,CAAD,CAApB,CAAP;AACD,GAFD,MAEO;AACLE,IAAAA,KAAK,CAACH,IAAD,CAAL,GAAcP,WAAW,CAACU,KAAK,CAACH,IAAD,CAAN,EAAcC,QAAd,EAAwBL,KAAxB,EAA+BC,iBAA/B,CAAzB;AACD;;AAED,SAAOM,KAAP;AACD;;AAED,eAAe,SAASI,GAAT,CAAab,MAAb,EAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;AAChD,MAAIC,iBAAiB,GAAGW,SAAS,CAACV,MAAV,GAAmB,CAAnB,IAAwBU,SAAS,CAAC,CAAD,CAAT,KAAiBF,SAAzC,GAAqDE,SAAS,CAAC,CAAD,CAA9D,GAAoE,KAA5F,CADgD,CAGhD;;AACA,MAAIb,KAAK,CAACG,MAAN,IAAgBD,iBAAhB,IAAqCD,KAAK,KAAKU,SAA/C,IAA4D,CAACd,GAAG,CAACE,MAAD,EAASC,KAAK,CAACO,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,CAAT,CAApE,EAAkG;AAChG,WAAOR,MAAP;AACD;;AAED,SAAOD,WAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,EAAuBC,iBAAvB,CAAlB;AACD","sourcesContent":["import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport get from './get';\n\nfunction internalSet(entity, paths, value, removeIfUndefined) {\n  if (!paths.length) {\n    return value;\n  }\n\n  var _paths = _toArray(paths),\n      path = _paths[0],\n      restPath = _paths.slice(1);\n\n  var clone;\n\n  if (!entity && typeof path === 'number') {\n    clone = [];\n  } else if (Array.isArray(entity)) {\n    clone = _toConsumableArray(entity);\n  } else {\n    clone = _objectSpread({}, entity);\n  } // Delete prop if `removeIfUndefined` and value is undefined\n\n\n  if (removeIfUndefined && value === undefined && restPath.length === 1) {\n    delete clone[path][restPath[0]];\n  } else {\n    clone[path] = internalSet(clone[path], restPath, value, removeIfUndefined);\n  }\n\n  return clone;\n}\n\nexport default function set(entity, paths, value) {\n  var removeIfUndefined = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n  // Do nothing if `removeIfUndefined` and parent object not exist\n  if (paths.length && removeIfUndefined && value === undefined && !get(entity, paths.slice(0, -1))) {\n    return entity;\n  }\n\n  return internalSet(entity, paths, value, removeIfUndefined);\n}"]},"metadata":{},"sourceType":"module"}