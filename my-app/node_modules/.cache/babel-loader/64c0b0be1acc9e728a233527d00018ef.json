{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nexport function parseChildren(children, keyPath) {\n  return toArray(children).map(function (child, index) {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      var _child$props$eventKey, _child$props;\n\n      var key = child.key;\n      var eventKey = (_child$props$eventKey = (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.eventKey) !== null && _child$props$eventKey !== void 0 ? _child$props$eventKey : key;\n      var emptyKey = eventKey === null || eventKey === undefined;\n\n      if (emptyKey) {\n        eventKey = \"tmp_key-\".concat([].concat(_toConsumableArray(keyPath), [index]).join('-'));\n      }\n\n      var cloneProps = {\n        key: eventKey,\n        eventKey: eventKey\n      };\n\n      if (process.env.NODE_ENV !== 'production' && emptyKey) {\n        cloneProps.warnKey = true;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, cloneProps);\n    }\n\n    return child;\n  });\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-menu/es/utils/nodeUtil.js"],"names":["_toConsumableArray","React","toArray","parseChildren","children","keyPath","map","child","index","isValidElement","_child$props$eventKey","_child$props","key","eventKey","props","emptyKey","undefined","concat","join","cloneProps","process","env","NODE_ENV","warnKey","cloneElement"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,6BAApB;AACA,OAAO,SAASC,aAAT,CAAuBC,QAAvB,EAAiCC,OAAjC,EAA0C;AAC/C,SAAOH,OAAO,CAACE,QAAD,CAAP,CAAkBE,GAAlB,CAAsB,UAAUC,KAAV,EAAiBC,KAAjB,EAAwB;AACnD,SAAK,aAAaP,KAAK,CAACQ,cAAN,CAAqBF,KAArB,CAAlB,EAA+C;AAC7C,UAAIG,qBAAJ,EAA2BC,YAA3B;;AAEA,UAAIC,GAAG,GAAGL,KAAK,CAACK,GAAhB;AACA,UAAIC,QAAQ,GAAG,CAACH,qBAAqB,GAAG,CAACC,YAAY,GAAGJ,KAAK,CAACO,KAAtB,MAAiC,IAAjC,IAAyCH,YAAY,KAAK,KAAK,CAA/D,GAAmE,KAAK,CAAxE,GAA4EA,YAAY,CAACE,QAAlH,MAAgI,IAAhI,IAAwIH,qBAAqB,KAAK,KAAK,CAAvK,GAA2KA,qBAA3K,GAAmME,GAAlN;AACA,UAAIG,QAAQ,GAAGF,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAKG,SAAjD;;AAEA,UAAID,QAAJ,EAAc;AACZF,QAAAA,QAAQ,GAAG,WAAWI,MAAX,CAAkB,GAAGA,MAAH,CAAUjB,kBAAkB,CAACK,OAAD,CAA5B,EAAuC,CAACG,KAAD,CAAvC,EAAgDU,IAAhD,CAAqD,GAArD,CAAlB,CAAX;AACD;;AAED,UAAIC,UAAU,GAAG;AACfP,QAAAA,GAAG,EAAEC,QADU;AAEfA,QAAAA,QAAQ,EAAEA;AAFK,OAAjB;;AAKA,UAAIO,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCP,QAA7C,EAAuD;AACrDI,QAAAA,UAAU,CAACI,OAAX,GAAqB,IAArB;AACD;;AAED,aAAO,aAAatB,KAAK,CAACuB,YAAN,CAAmBjB,KAAnB,EAA0BY,UAA1B,CAApB;AACD;;AAED,WAAOZ,KAAP;AACD,GAzBM,CAAP;AA0BD","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as React from 'react';\nimport toArray from \"rc-util/es/Children/toArray\";\nexport function parseChildren(children, keyPath) {\n  return toArray(children).map(function (child, index) {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      var _child$props$eventKey, _child$props;\n\n      var key = child.key;\n      var eventKey = (_child$props$eventKey = (_child$props = child.props) === null || _child$props === void 0 ? void 0 : _child$props.eventKey) !== null && _child$props$eventKey !== void 0 ? _child$props$eventKey : key;\n      var emptyKey = eventKey === null || eventKey === undefined;\n\n      if (emptyKey) {\n        eventKey = \"tmp_key-\".concat([].concat(_toConsumableArray(keyPath), [index]).join('-'));\n      }\n\n      var cloneProps = {\n        key: eventKey,\n        eventKey: eventKey\n      };\n\n      if (process.env.NODE_ENV !== 'production' && emptyKey) {\n        cloneProps.warnKey = true;\n      }\n\n      return /*#__PURE__*/React.cloneElement(child, cloneProps);\n    }\n\n    return child;\n  });\n}"]},"metadata":{},"sourceType":"module"}