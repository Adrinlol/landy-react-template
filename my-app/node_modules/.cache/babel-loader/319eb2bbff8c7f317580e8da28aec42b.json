{"ast":null,"code":"import { from, trim, charat, strlen, substr, append, assign } from './Utility.js';\nexport var line = 1;\nexport var column = 1;\nexport var length = 0;\nexport var position = 0;\nexport var character = 0;\nexport var characters = '';\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\n\nexport function node(value, root, parent, type, props, children, length) {\n  return {\n    value: value,\n    root: root,\n    parent: parent,\n    type: type,\n    props: props,\n    children: children,\n    line: line,\n    column: column,\n    length: length,\n    return: ''\n  };\n}\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\n\nexport function copy(root, props) {\n  return assign(node('', null, null, '', null, null, 0), root, {\n    length: -root.length\n  }, props);\n}\n/**\n * @return {number}\n */\n\nexport function char() {\n  return character;\n}\n/**\n * @return {number}\n */\n\nexport function prev() {\n  character = position > 0 ? charat(characters, --position) : 0;\n  if (column--, character === 10) column = 1, line--;\n  return character;\n}\n/**\n * @return {number}\n */\n\nexport function next() {\n  character = position < length ? charat(characters, position++) : 0;\n  if (column++, character === 10) column = 1, line++;\n  return character;\n}\n/**\n * @return {number}\n */\n\nexport function peek() {\n  return charat(characters, position);\n}\n/**\n * @return {number}\n */\n\nexport function caret() {\n  return position;\n}\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\n\nexport function slice(begin, end) {\n  return substr(characters, begin, end);\n}\n/**\n * @param {number} type\n * @return {number}\n */\n\nexport function token(type) {\n  switch (type) {\n    // \\0 \\t \\n \\r \\s whitespace token\n    case 0:\n    case 9:\n    case 10:\n    case 13:\n    case 32:\n      return 5;\n    // ! + , / > @ ~ isolate token\n\n    case 33:\n    case 43:\n    case 44:\n    case 47:\n    case 62:\n    case 64:\n    case 126: // ; { } breakpoint token\n\n    case 59:\n    case 123:\n    case 125:\n      return 4;\n    // : accompanied token\n\n    case 58:\n      return 3;\n    // \" ' ( [ opening delimit token\n\n    case 34:\n    case 39:\n    case 40:\n    case 91:\n      return 2;\n    // ) ] closing delimit token\n\n    case 41:\n    case 93:\n      return 1;\n  }\n\n  return 0;\n}\n/**\n * @param {string} value\n * @return {any[]}\n */\n\nexport function alloc(value) {\n  return line = column = 1, length = strlen(characters = value), position = 0, [];\n}\n/**\n * @param {any} value\n * @return {any}\n */\n\nexport function dealloc(value) {\n  return characters = '', value;\n}\n/**\n * @param {number} type\n * @return {string}\n */\n\nexport function delimit(type) {\n  return trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)));\n}\n/**\n * @param {string} value\n * @return {string[]}\n */\n\nexport function tokenize(value) {\n  return dealloc(tokenizer(alloc(value)));\n}\n/**\n * @param {number} type\n * @return {string}\n */\n\nexport function whitespace(type) {\n  while (character = peek()) if (character < 33) next();else break;\n\n  return token(type) > 2 || token(character) > 3 ? '' : ' ';\n}\n/**\n * @param {string[]} children\n * @return {string[]}\n */\n\nexport function tokenizer(children) {\n  while (next()) switch (token(character)) {\n    case 0:\n      append(identifier(position - 1), children);\n      break;\n\n    case 2:\n      append(delimit(character), children);\n      break;\n\n    default:\n      append(from(character), children);\n  }\n\n  return children;\n}\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\n\nexport function escaping(index, count) {\n  while (--count && next()) // not 0-9 A-F a-f\n  if (character < 48 || character > 102 || character > 57 && character < 65 || character > 70 && character < 97) break;\n\n  return slice(index, caret() + (count < 6 && peek() == 32 && next() == 32));\n}\n/**\n * @param {number} type\n * @return {number}\n */\n\nexport function delimiter(type) {\n  while (next()) switch (character) {\n    // ] ) \" '\n    case type:\n      return position;\n    // \" '\n\n    case 34:\n    case 39:\n      if (type !== 34 && type !== 39) delimiter(character);\n      break;\n    // (\n\n    case 40:\n      if (type === 41) delimiter(type);\n      break;\n    // \\\n\n    case 92:\n      next();\n      break;\n  }\n\n  return position;\n}\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\n\nexport function commenter(type, index) {\n  while (next()) // //\n  if (type + character === 47 + 10) break; // /*\n  else if (type + character === 42 + 42 && peek() === 47) break;\n\n  return '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next());\n}\n/**\n * @param {number} index\n * @return {string}\n */\n\nexport function identifier(index) {\n  while (!token(peek())) next();\n\n  return slice(index, position);\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/stylis/src/Tokenizer.js"],"names":["from","trim","charat","strlen","substr","append","assign","line","column","length","position","character","characters","node","value","root","parent","type","props","children","return","copy","char","prev","next","peek","caret","slice","begin","end","token","alloc","dealloc","delimit","delimiter","tokenize","tokenizer","whitespace","identifier","escaping","index","count","commenter"],"mappings":"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","sourcesContent":["import {from, trim, charat, strlen, substr, append, assign} from './Utility.js'\n\nexport var line = 1\nexport var column = 1\nexport var length = 0\nexport var position = 0\nexport var character = 0\nexport var characters = ''\n\n/**\n * @param {string} value\n * @param {object | null} root\n * @param {object | null} parent\n * @param {string} type\n * @param {string[] | string} props\n * @param {object[] | string} children\n * @param {number} length\n */\nexport function node (value, root, parent, type, props, children, length) {\n\treturn {value: value, root: root, parent: parent, type: type, props: props, children: children, line: line, column: column, length: length, return: ''}\n}\n\n/**\n * @param {object} root\n * @param {object} props\n * @return {object}\n */\nexport function copy (root, props) {\n\treturn assign(node('', null, null, '', null, null, 0), root, {length: -root.length}, props)\n}\n\n/**\n * @return {number}\n */\nexport function char () {\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function prev () {\n\tcharacter = position > 0 ? charat(characters, --position) : 0\n\n\tif (column--, character === 10)\n\t\tcolumn = 1, line--\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function next () {\n\tcharacter = position < length ? charat(characters, position++) : 0\n\n\tif (column++, character === 10)\n\t\tcolumn = 1, line++\n\n\treturn character\n}\n\n/**\n * @return {number}\n */\nexport function peek () {\n\treturn charat(characters, position)\n}\n\n/**\n * @return {number}\n */\nexport function caret () {\n\treturn position\n}\n\n/**\n * @param {number} begin\n * @param {number} end\n * @return {string}\n */\nexport function slice (begin, end) {\n\treturn substr(characters, begin, end)\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function token (type) {\n\tswitch (type) {\n\t\t// \\0 \\t \\n \\r \\s whitespace token\n\t\tcase 0: case 9: case 10: case 13: case 32:\n\t\t\treturn 5\n\t\t// ! + , / > @ ~ isolate token\n\t\tcase 33: case 43: case 44: case 47: case 62: case 64: case 126:\n\t\t// ; { } breakpoint token\n\t\tcase 59: case 123: case 125:\n\t\t\treturn 4\n\t\t// : accompanied token\n\t\tcase 58:\n\t\t\treturn 3\n\t\t// \" ' ( [ opening delimit token\n\t\tcase 34: case 39: case 40: case 91:\n\t\t\treturn 2\n\t\t// ) ] closing delimit token\n\t\tcase 41: case 93:\n\t\t\treturn 1\n\t}\n\n\treturn 0\n}\n\n/**\n * @param {string} value\n * @return {any[]}\n */\nexport function alloc (value) {\n\treturn line = column = 1, length = strlen(characters = value), position = 0, []\n}\n\n/**\n * @param {any} value\n * @return {any}\n */\nexport function dealloc (value) {\n\treturn characters = '', value\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function delimit (type) {\n\treturn trim(slice(position - 1, delimiter(type === 91 ? type + 2 : type === 40 ? type + 1 : type)))\n}\n\n/**\n * @param {string} value\n * @return {string[]}\n */\nexport function tokenize (value) {\n\treturn dealloc(tokenizer(alloc(value)))\n}\n\n/**\n * @param {number} type\n * @return {string}\n */\nexport function whitespace (type) {\n\twhile (character = peek())\n\t\tif (character < 33)\n\t\t\tnext()\n\t\telse\n\t\t\tbreak\n\n\treturn token(type) > 2 || token(character) > 3 ? '' : ' '\n}\n\n/**\n * @param {string[]} children\n * @return {string[]}\n */\nexport function tokenizer (children) {\n\twhile (next())\n\t\tswitch (token(character)) {\n\t\t\tcase 0: append(identifier(position - 1), children)\n\t\t\t\tbreak\n\t\t\tcase 2: append(delimit(character), children)\n\t\t\t\tbreak\n\t\t\tdefault: append(from(character), children)\n\t\t}\n\n\treturn children\n}\n\n/**\n * @param {number} index\n * @param {number} count\n * @return {string}\n */\nexport function escaping (index, count) {\n\twhile (--count && next())\n\t\t// not 0-9 A-F a-f\n\t\tif (character < 48 || character > 102 || (character > 57 && character < 65) || (character > 70 && character < 97))\n\t\t\tbreak\n\n\treturn slice(index, caret() + (count < 6 && peek() == 32 && next() == 32))\n}\n\n/**\n * @param {number} type\n * @return {number}\n */\nexport function delimiter (type) {\n\twhile (next())\n\t\tswitch (character) {\n\t\t\t// ] ) \" '\n\t\t\tcase type:\n\t\t\t\treturn position\n\t\t\t// \" '\n\t\t\tcase 34: case 39:\n\t\t\t\tif (type !== 34 && type !== 39)\n\t\t\t\t\tdelimiter(character)\n\t\t\t\tbreak\n\t\t\t// (\n\t\t\tcase 40:\n\t\t\t\tif (type === 41)\n\t\t\t\t\tdelimiter(type)\n\t\t\t\tbreak\n\t\t\t// \\\n\t\t\tcase 92:\n\t\t\t\tnext()\n\t\t\t\tbreak\n\t\t}\n\n\treturn position\n}\n\n/**\n * @param {number} type\n * @param {number} index\n * @return {number}\n */\nexport function commenter (type, index) {\n\twhile (next())\n\t\t// //\n\t\tif (type + character === 47 + 10)\n\t\t\tbreak\n\t\t// /*\n\t\telse if (type + character === 42 + 42 && peek() === 47)\n\t\t\tbreak\n\n\treturn '/*' + slice(index, position - 1) + '*' + from(type === 47 ? type : next())\n}\n\n/**\n * @param {number} index\n * @return {string}\n */\nexport function identifier (index) {\n\twhile (!token(peek()))\n\t\tnext()\n\n\treturn slice(index, position)\n}\n"]},"metadata":{},"sourceType":"module"}