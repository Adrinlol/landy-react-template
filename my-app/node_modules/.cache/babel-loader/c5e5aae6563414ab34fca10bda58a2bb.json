{"ast":null,"code":"import * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport ExpandedRowContext from '../context/ExpandedRowContext';\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      colSpan = _ref.colSpan,\n      isEmpty = _ref.isEmpty;\n\n  var _React$useContext = React.useContext(TableContext),\n      scrollbarSize = _React$useContext.scrollbarSize;\n\n  var _React$useContext2 = React.useContext(ExpandedRowContext),\n      fixHeader = _React$useContext2.fixHeader,\n      fixColumn = _React$useContext2.fixColumn,\n      componentWidth = _React$useContext2.componentWidth,\n      horizonScroll = _React$useContext2.horizonScroll; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\n\nexport default ExpandedRow;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-table/es/Body/ExpandedRow.js"],"names":["React","Cell","TableContext","ExpandedRowContext","ExpandedRow","_ref","prefixCls","children","Component","component","cellComponent","className","expanded","colSpan","isEmpty","_React$useContext","useContext","scrollbarSize","_React$useContext2","fixHeader","fixColumn","componentWidth","horizonScroll","useMemo","contentNode","createElement","style","width","position","left","overflow","concat","display"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,kBAAP,MAA+B,+BAA/B;;AAEA,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACzB,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACI,SAFrB;AAAA,MAGIC,aAAa,GAAGL,IAAI,CAACK,aAHzB;AAAA,MAIIC,SAAS,GAAGN,IAAI,CAACM,SAJrB;AAAA,MAKIC,QAAQ,GAAGP,IAAI,CAACO,QALpB;AAAA,MAMIC,OAAO,GAAGR,IAAI,CAACQ,OANnB;AAAA,MAOIC,OAAO,GAAGT,IAAI,CAACS,OAPnB;;AASA,MAAIC,iBAAiB,GAAGf,KAAK,CAACgB,UAAN,CAAiBd,YAAjB,CAAxB;AAAA,MACIe,aAAa,GAAGF,iBAAiB,CAACE,aADtC;;AAGA,MAAIC,kBAAkB,GAAGlB,KAAK,CAACgB,UAAN,CAAiBb,kBAAjB,CAAzB;AAAA,MACIgB,SAAS,GAAGD,kBAAkB,CAACC,SADnC;AAAA,MAEIC,SAAS,GAAGF,kBAAkB,CAACE,SAFnC;AAAA,MAGIC,cAAc,GAAGH,kBAAkB,CAACG,cAHxC;AAAA,MAIIC,aAAa,GAAGJ,kBAAkB,CAACI,aAJvC,CAbyB,CAiB6B;;;AAGtD,SAAOtB,KAAK,CAACuB,OAAN,CAAc,YAAY;AAC/B,QAAIC,WAAW,GAAGjB,QAAlB;;AAEA,QAAIO,OAAO,GAAGQ,aAAH,GAAmBF,SAA9B,EAAyC;AACvCI,MAAAA,WAAW,GAAG,aAAaxB,KAAK,CAACyB,aAAN,CAAoB,KAApB,EAA2B;AACpDC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAEN,cAAc,IAAIF,SAAS,GAAGF,aAAH,GAAmB,CAAhC,CADhB;AAELW,UAAAA,QAAQ,EAAE,QAFL;AAGLC,UAAAA,IAAI,EAAE,CAHD;AAILC,UAAAA,QAAQ,EAAE;AAJL,SAD6C;AAOpDnB,QAAAA,SAAS,EAAE,GAAGoB,MAAH,CAAUzB,SAAV,EAAqB,qBAArB;AAPyC,OAA3B,EAQxBkB,WARwB,CAA3B;AASD;;AAED,WAAO,aAAaxB,KAAK,CAACyB,aAAN,CAAoBjB,SAApB,EAA+B;AACjDG,MAAAA,SAAS,EAAEA,SADsC;AAEjDe,MAAAA,KAAK,EAAE;AACLM,QAAAA,OAAO,EAAEpB,QAAQ,GAAG,IAAH,GAAU;AADtB;AAF0C,KAA/B,EAKjB,aAAaZ,KAAK,CAACyB,aAAN,CAAoBxB,IAApB,EAA0B;AACxCQ,MAAAA,SAAS,EAAEC,aAD6B;AAExCJ,MAAAA,SAAS,EAAEA,SAF6B;AAGxCO,MAAAA,OAAO,EAAEA;AAH+B,KAA1B,EAIbW,WAJa,CALI,CAApB;AAUD,GAzBM,EAyBJ,CAACjB,QAAD,EAAWC,SAAX,EAAsBG,SAAtB,EAAiCC,QAAjC,EAA2CC,OAA3C,EAAoDC,OAApD,EAA6DG,aAA7D,EAA4EI,cAA5E,EAA4FD,SAA5F,EAAuGD,SAAvG,EAAkHG,aAAlH,CAzBI,CAAP;AA0BD;;AAED,eAAelB,WAAf","sourcesContent":["import * as React from 'react';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport ExpandedRowContext from '../context/ExpandedRowContext';\n\nfunction ExpandedRow(_ref) {\n  var prefixCls = _ref.prefixCls,\n      children = _ref.children,\n      Component = _ref.component,\n      cellComponent = _ref.cellComponent,\n      className = _ref.className,\n      expanded = _ref.expanded,\n      colSpan = _ref.colSpan,\n      isEmpty = _ref.isEmpty;\n\n  var _React$useContext = React.useContext(TableContext),\n      scrollbarSize = _React$useContext.scrollbarSize;\n\n  var _React$useContext2 = React.useContext(ExpandedRowContext),\n      fixHeader = _React$useContext2.fixHeader,\n      fixColumn = _React$useContext2.fixColumn,\n      componentWidth = _React$useContext2.componentWidth,\n      horizonScroll = _React$useContext2.horizonScroll; // Cache render node\n\n\n  return React.useMemo(function () {\n    var contentNode = children;\n\n    if (isEmpty ? horizonScroll : fixColumn) {\n      contentNode = /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          width: componentWidth - (fixHeader ? scrollbarSize : 0),\n          position: 'sticky',\n          left: 0,\n          overflow: 'hidden'\n        },\n        className: \"\".concat(prefixCls, \"-expanded-row-fixed\")\n      }, contentNode);\n    }\n\n    return /*#__PURE__*/React.createElement(Component, {\n      className: className,\n      style: {\n        display: expanded ? null : 'none'\n      }\n    }, /*#__PURE__*/React.createElement(Cell, {\n      component: cellComponent,\n      prefixCls: prefixCls,\n      colSpan: colSpan\n    }, contentNode));\n  }, [children, Component, className, expanded, colSpan, isEmpty, scrollbarSize, componentWidth, fixColumn, fixHeader, horizonScroll]);\n}\n\nexport default ExpandedRow;"]},"metadata":{},"sourceType":"module"}