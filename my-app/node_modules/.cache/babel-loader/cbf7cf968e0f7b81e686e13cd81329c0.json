{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport DeleteOutlined from \"@ant-design/icons/es/icons/DeleteOutlined\";\nimport defaultLocale from '../locale/default';\nimport Checkbox from '../checkbox';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\n\nvar ListItem = function ListItem(props) {\n  var _classNames;\n\n  var renderedText = props.renderedText,\n      renderedEl = props.renderedEl,\n      item = props.item,\n      checked = props.checked,\n      disabled = props.disabled,\n      prefixCls = props.prefixCls,\n      onClick = props.onClick,\n      onRemove = props.onRemove,\n      showRemove = props.showRemove;\n  var className = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-disabled\"), disabled || item.disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-checked\"), checked), _classNames));\n  var title;\n\n  if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n    title = String(renderedText);\n  }\n\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Transfer\",\n    defaultLocale: defaultLocale.Transfer\n  }, function (transferLocale) {\n    var liProps = {\n      className: className,\n      title: title\n    };\n    var labelNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-content-item-text\")\n    }, renderedEl); // Show remove\n\n    if (showRemove) {\n      return /*#__PURE__*/React.createElement(\"li\", liProps, labelNode, /*#__PURE__*/React.createElement(TransButton, {\n        disabled: disabled || item.disabled,\n        className: \"\".concat(prefixCls, \"-content-item-remove\"),\n        \"aria-label\": transferLocale.remove,\n        onClick: function onClick() {\n          onRemove === null || onRemove === void 0 ? void 0 : onRemove(item);\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, null)));\n    } // Default click to select\n\n\n    liProps.onClick = disabled || item.disabled ? undefined : function () {\n      return onClick(item);\n    };\n    return /*#__PURE__*/React.createElement(\"li\", liProps, /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      disabled: disabled || item.disabled\n    }), labelNode);\n  });\n};\n\nexport default /*#__PURE__*/React.memo(ListItem);","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/transfer/ListItem.js"],"names":["_defineProperty","React","classNames","DeleteOutlined","defaultLocale","Checkbox","TransButton","LocaleReceiver","ListItem","props","_classNames","renderedText","renderedEl","item","checked","disabled","prefixCls","onClick","onRemove","showRemove","className","concat","title","String","createElement","componentName","Transfer","transferLocale","liProps","labelNode","remove","undefined","memo"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport DeleteOutlined from \"@ant-design/icons/es/icons/DeleteOutlined\";\nimport defaultLocale from '../locale/default';\nimport Checkbox from '../checkbox';\nimport TransButton from '../_util/transButton';\nimport LocaleReceiver from '../locale-provider/LocaleReceiver';\n\nvar ListItem = function ListItem(props) {\n  var _classNames;\n\n  var renderedText = props.renderedText,\n      renderedEl = props.renderedEl,\n      item = props.item,\n      checked = props.checked,\n      disabled = props.disabled,\n      prefixCls = props.prefixCls,\n      onClick = props.onClick,\n      onRemove = props.onRemove,\n      showRemove = props.showRemove;\n  var className = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-disabled\"), disabled || item.disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-content-item-checked\"), checked), _classNames));\n  var title;\n\n  if (typeof renderedText === 'string' || typeof renderedText === 'number') {\n    title = String(renderedText);\n  }\n\n  return /*#__PURE__*/React.createElement(LocaleReceiver, {\n    componentName: \"Transfer\",\n    defaultLocale: defaultLocale.Transfer\n  }, function (transferLocale) {\n    var liProps = {\n      className: className,\n      title: title\n    };\n    var labelNode = /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-content-item-text\")\n    }, renderedEl); // Show remove\n\n    if (showRemove) {\n      return /*#__PURE__*/React.createElement(\"li\", liProps, labelNode, /*#__PURE__*/React.createElement(TransButton, {\n        disabled: disabled || item.disabled,\n        className: \"\".concat(prefixCls, \"-content-item-remove\"),\n        \"aria-label\": transferLocale.remove,\n        onClick: function onClick() {\n          onRemove === null || onRemove === void 0 ? void 0 : onRemove(item);\n        }\n      }, /*#__PURE__*/React.createElement(DeleteOutlined, null)));\n    } // Default click to select\n\n\n    liProps.onClick = disabled || item.disabled ? undefined : function () {\n      return onClick(item);\n    };\n    return /*#__PURE__*/React.createElement(\"li\", liProps, /*#__PURE__*/React.createElement(Checkbox, {\n      className: \"\".concat(prefixCls, \"-checkbox\"),\n      checked: checked,\n      disabled: disabled || item.disabled\n    }), labelNode);\n  });\n};\n\nexport default /*#__PURE__*/React.memo(ListItem);"]},"metadata":{},"sourceType":"module"}