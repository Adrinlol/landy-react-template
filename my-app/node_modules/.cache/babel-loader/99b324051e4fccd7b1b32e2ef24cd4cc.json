{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport CascaderContext from '../context';\nimport { useBaseProps } from 'rc-select';\n/**\n * Control the active open options path.\n */\n\nexport default (function () {\n  var _useBaseProps = useBaseProps(),\n      multiple = _useBaseProps.multiple,\n      open = _useBaseProps.open;\n\n  var _React$useContext = React.useContext(CascaderContext),\n      values = _React$useContext.values; // Record current dropdown active options\n  // This also control the open status\n\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeValueCells = _React$useState2[0],\n      setActiveValueCells = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (open && !multiple) {\n      var firstValueCells = values[0];\n      setActiveValueCells(firstValueCells || []);\n    }\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [open]);\n  return [activeValueCells, setActiveValueCells];\n});","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-cascader/es/OptionList/useActive.js"],"names":["_slicedToArray","React","CascaderContext","useBaseProps","_useBaseProps","multiple","open","_React$useContext","useContext","values","_React$useState","useState","_React$useState2","activeValueCells","setActiveValueCells","useEffect","firstValueCells"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,eAAP,MAA4B,YAA5B;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA;AACA;AACA;;AAEA,gBAAgB,YAAY;AAC1B,MAAIC,aAAa,GAAGD,YAAY,EAAhC;AAAA,MACIE,QAAQ,GAAGD,aAAa,CAACC,QAD7B;AAAA,MAEIC,IAAI,GAAGF,aAAa,CAACE,IAFzB;;AAIA,MAAIC,iBAAiB,GAAGN,KAAK,CAACO,UAAN,CAAiBN,eAAjB,CAAxB;AAAA,MACIO,MAAM,GAAGF,iBAAiB,CAACE,MAD/B,CAL0B,CAMa;AACvC;;;AAGA,MAAIC,eAAe,GAAGT,KAAK,CAACU,QAAN,CAAe,EAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAGZ,cAAc,CAACU,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,gBAAgB,GAAGD,gBAAgB,CAAC,CAAD,CAFvC;AAAA,MAGIE,mBAAmB,GAAGF,gBAAgB,CAAC,CAAD,CAH1C;;AAKAX,EAAAA,KAAK,CAACc,SAAN,CAAgB,YAAY;AAC1B,QAAIT,IAAI,IAAI,CAACD,QAAb,EAAuB;AACrB,UAAIW,eAAe,GAAGP,MAAM,CAAC,CAAD,CAA5B;AACAK,MAAAA,mBAAmB,CAACE,eAAe,IAAI,EAApB,CAAnB;AACD;AACF,GALD;AAMA;AACA,GAACV,IAAD,CAPA;AAQA,SAAO,CAACO,gBAAD,EAAmBC,mBAAnB,CAAP;AACD,CAxBD","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport CascaderContext from '../context';\nimport { useBaseProps } from 'rc-select';\n/**\n * Control the active open options path.\n */\n\nexport default (function () {\n  var _useBaseProps = useBaseProps(),\n      multiple = _useBaseProps.multiple,\n      open = _useBaseProps.open;\n\n  var _React$useContext = React.useContext(CascaderContext),\n      values = _React$useContext.values; // Record current dropdown active options\n  // This also control the open status\n\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeValueCells = _React$useState2[0],\n      setActiveValueCells = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (open && !multiple) {\n      var firstValueCells = values[0];\n      setActiveValueCells(firstValueCells || []);\n    }\n  },\n  /* eslint-disable react-hooks/exhaustive-deps */\n  [open]);\n  return [activeValueCells, setActiveValueCells];\n});"]},"metadata":{},"sourceType":"module"}