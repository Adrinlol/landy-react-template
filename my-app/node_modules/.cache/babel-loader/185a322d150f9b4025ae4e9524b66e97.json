{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport copy from 'copy-to-clipboard';\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport ResizeObserver from 'rc-resize-observer';\nimport { ConfigContext } from '../../config-provider';\nimport { useLocaleReceiver } from '../../locale-provider/LocaleReceiver';\nimport TransButton from '../../_util/transButton';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport Tooltip from '../../tooltip';\nimport Typography from '../Typography';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard,\n      italic = _ref.italic;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  wrap(italic, 'i');\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nfunction toList(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      type = props.type,\n      disabled = props.disabled,\n      children = props.children,\n      ellipsis = props.ellipsis,\n      editable = props.editable,\n      copyable = props.copyable,\n      component = props.component,\n      title = props.title,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var textLocale = useLocaleReceiver('Text')[0]; // Force TS get this\n\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  var _useMergedConfig = useMergedConfig(editable),\n      _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n      enableEdit = _useMergedConfig2[0],\n      editConfig = _useMergedConfig2[1];\n\n  var _useMergedState = useMergedState(false, {\n    value: editConfig.editing\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n\n  var _editConfig$triggerTy = editConfig.triggerType,\n      triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(function () {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  var onEditClick = function onEditClick(e) {\n    e.preventDefault();\n    triggerEdit(true);\n  };\n\n  var onEditChange = function onEditChange(value) {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  var onEditCancel = function onEditCancel() {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  var _useMergedConfig3 = useMergedConfig(copyable),\n      _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n      enableCopy = _useMergedConfig4[0],\n      copyConfig = _useMergedConfig4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      copied = _React$useState2[0],\n      setCopied = _React$useState2[1];\n\n  var copyIdRef = React.useRef();\n\n  var cleanCopyId = function cleanCopyId() {\n    clearTimeout(copyIdRef.current);\n  };\n\n  var onCopyClick = function onCopyClick(e) {\n    var _a;\n\n    e.preventDefault();\n\n    if (copyConfig.text === undefined) {\n      copyConfig.text = String(children);\n    }\n\n    copy(copyConfig.text || '');\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig);\n  };\n\n  React.useEffect(function () {\n    return cleanCopyId;\n  }, []); // ========================== Ellipsis ==========================\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLineClampSupport = _React$useState4[0],\n      setIsLineClampSupport = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isTextOverflowSupport = _React$useState6[0],\n      setIsTextOverflowSupport = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      expanded = _React$useState8[0],\n      setExpanded = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isJsEllipsis = _React$useState10[0],\n      setIsJsEllipsis = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      isNativeEllipsis = _React$useState12[0],\n      setIsNativeEllipsis = _React$useState12[1];\n\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n    expandable: false\n  }),\n      _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n      enableEllipsis = _useMergedConfig6[0],\n      ellipsisConfig = _useMergedConfig6[1];\n\n  var mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n      rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (// Disable ellipsis\n      !mergedEnableEllipsis || // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  React.useLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var cssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  var onExpandClick = function onExpandClick(e) {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      ellipsisWidth = _React$useState14[0],\n      setEllipsisWidth = _React$useState14[1];\n\n  var onResize = function onResize(_ref2) {\n    var offsetWidth = _ref2.offsetWidth;\n    setEllipsisWidth(offsetWidth);\n  }; // >>>>> JS Ellipsis\n\n\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children]); // ========================== Tooltip ===========================\n\n  var tooltipTitle = ellipsisConfig.tooltip === true ? children : ellipsisConfig.tooltip;\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(_typeof(val));\n    };\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipTitle)) {\n      return tooltipTitle;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipTitle, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n        symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    var expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-expand\"),\n      onClick: onExpandClick,\n      \"aria-label\": textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n        tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || textLocale.edit;\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) return;\n    var tooltips = copyConfig.tooltips,\n        icon = copyConfig.icon;\n    var tooltipNodes = toList(tooltips);\n    var iconNodes = toList(icon);\n    var copyTitle = copied ? getNode(tooltipNodes[1], textLocale.copied) : getNode(tooltipNodes[0], textLocale.copy);\n    var systemStr = copied ? textLocale.copied : textLocale.copy;\n    var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n\n  var renderOperations = function renderOperations(renderExpanded) {\n    return [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  };\n\n  var renderEllipsis = function renderEllipsis(needEllipsis) {\n    return [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  };\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      title: tooltipTitle,\n      enabledEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, _extends({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      style: _extends(_extends({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : null,\n      \"aria-label\": topAriaLabel,\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      onEllipsis: onJsEllipsis\n    }, function (node, needEllipsis) {\n      var renderNode = node;\n\n      if (node.length && needEllipsis && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/typography/Base/index.js"],"names":["_extends","_defineProperty","_typeof","_slicedToArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","useMergedState","toArray","copy","omit","composeRef","EditOutlined","CheckOutlined","CopyOutlined","ResizeObserver","ConfigContext","useLocaleReceiver","TransButton","isStyleSupport","Tooltip","Typography","Editable","useMergedConfig","useUpdatedEffect","Ellipsis","EllipsisTooltip","wrapperDecorations","_ref","content","mark","code","underline","del","strong","keyboard","italic","currentContent","wrap","needed","tag","createElement","getNode","dom","defaultNode","needDom","undefined","toList","val","Array","isArray","ELLIPSIS_STR","Base","forwardRef","props","ref","customizePrefixCls","prefixCls","className","style","type","disabled","children","ellipsis","editable","copyable","component","title","restProps","_React$useContext","useContext","getPrefixCls","direction","textLocale","typographyRef","useRef","editIconRef","textProps","_useMergedConfig","_useMergedConfig2","enableEdit","editConfig","_useMergedState","value","editing","_useMergedState2","setEditing","_editConfig$triggerTy","triggerType","triggerEdit","edit","_a","onStart","current","focus","onEditClick","preventDefault","onEditChange","onChange","onEditCancel","onCancel","_useMergedConfig3","_useMergedConfig4","enableCopy","copyConfig","_React$useState","useState","_React$useState2","copied","setCopied","copyIdRef","cleanCopyId","clearTimeout","onCopyClick","text","String","setTimeout","onCopy","useEffect","_React$useState3","_React$useState4","isLineClampSupport","setIsLineClampSupport","_React$useState5","_React$useState6","isTextOverflowSupport","setIsTextOverflowSupport","_React$useState7","_React$useState8","expanded","setExpanded","_React$useState9","_React$useState10","isJsEllipsis","setIsJsEllipsis","_React$useState11","_React$useState12","isNativeEllipsis","setIsNativeEllipsis","_useMergedConfig5","expandable","_useMergedConfig6","enableEllipsis","ellipsisConfig","mergedEnableEllipsis","_ellipsisConfig$rows","rows","needMeasureEllipsis","useMemo","suffix","onEllipsis","useLayoutEffect","cssEllipsis","isMergedEllipsis","cssTextOverflow","cssLineClamp","onExpandClick","onExpand","_React$useState13","_React$useState14","ellipsisWidth","setEllipsisWidth","onResize","_ref2","offsetWidth","onJsEllipsis","jsEllipsis","textEle","currentEllipsis","scrollWidth","tooltipTitle","tooltip","topAriaLabel","isValid","includes","onSave","onEnd","maxLength","autoSize","enterIcon","renderExpand","symbol","expandContent","expand","key","concat","onClick","renderEdit","icon","editTitle","ariaLabel","role","renderCopy","tooltips","tooltipNodes","iconNodes","copyTitle","systemStr","renderOperations","renderExpanded","renderEllipsis","needEllipsis","resizeRef","_classNames","enabledEllipsis","isEllipsis","WebkitLineClamp","enabledMeasure","width","node","renderNode","wrappedContext","Fragment"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport toArray from \"rc-util/es/Children/toArray\";\nimport copy from 'copy-to-clipboard';\nimport omit from \"rc-util/es/omit\";\nimport { composeRef } from \"rc-util/es/ref\";\nimport EditOutlined from \"@ant-design/icons/es/icons/EditOutlined\";\nimport CheckOutlined from \"@ant-design/icons/es/icons/CheckOutlined\";\nimport CopyOutlined from \"@ant-design/icons/es/icons/CopyOutlined\";\nimport ResizeObserver from 'rc-resize-observer';\nimport { ConfigContext } from '../../config-provider';\nimport { useLocaleReceiver } from '../../locale-provider/LocaleReceiver';\nimport TransButton from '../../_util/transButton';\nimport { isStyleSupport } from '../../_util/styleChecker';\nimport Tooltip from '../../tooltip';\nimport Typography from '../Typography';\nimport Editable from '../Editable';\nimport useMergedConfig from '../hooks/useMergedConfig';\nimport useUpdatedEffect from '../hooks/useUpdatedEffect';\nimport Ellipsis from './Ellipsis';\nimport EllipsisTooltip from './EllipsisTooltip';\n\nfunction wrapperDecorations(_ref, content) {\n  var mark = _ref.mark,\n      code = _ref.code,\n      underline = _ref.underline,\n      del = _ref[\"delete\"],\n      strong = _ref.strong,\n      keyboard = _ref.keyboard,\n      italic = _ref.italic;\n  var currentContent = content;\n\n  function wrap(needed, tag) {\n    if (!needed) return;\n    currentContent = /*#__PURE__*/React.createElement(tag, {}, currentContent);\n  }\n\n  wrap(strong, 'strong');\n  wrap(underline, 'u');\n  wrap(del, 'del');\n  wrap(code, 'code');\n  wrap(mark, 'mark');\n  wrap(keyboard, 'kbd');\n  wrap(italic, 'i');\n  return currentContent;\n}\n\nfunction getNode(dom, defaultNode, needDom) {\n  if (dom === true || dom === undefined) {\n    return defaultNode;\n  }\n\n  return dom || needDom && defaultNode;\n}\n\nfunction toList(val) {\n  return Array.isArray(val) ? val : [val];\n}\n\nvar ELLIPSIS_STR = '...';\nvar Base = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      style = props.style,\n      type = props.type,\n      disabled = props.disabled,\n      children = props.children,\n      ellipsis = props.ellipsis,\n      editable = props.editable,\n      copyable = props.copyable,\n      component = props.component,\n      title = props.title,\n      restProps = __rest(props, [\"prefixCls\", \"className\", \"style\", \"type\", \"disabled\", \"children\", \"ellipsis\", \"editable\", \"copyable\", \"component\", \"title\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var textLocale = useLocaleReceiver('Text')[0]; // Force TS get this\n\n  var typographyRef = React.useRef(null);\n  var editIconRef = React.useRef(null); // ============================ MISC ============================\n\n  var prefixCls = getPrefixCls('typography', customizePrefixCls);\n  var textProps = omit(restProps, ['mark', 'code', 'delete', 'underline', 'strong', 'keyboard', 'italic']); // ========================== Editable ==========================\n\n  var _useMergedConfig = useMergedConfig(editable),\n      _useMergedConfig2 = _slicedToArray(_useMergedConfig, 2),\n      enableEdit = _useMergedConfig2[0],\n      editConfig = _useMergedConfig2[1];\n\n  var _useMergedState = useMergedState(false, {\n    value: editConfig.editing\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      editing = _useMergedState2[0],\n      setEditing = _useMergedState2[1];\n\n  var _editConfig$triggerTy = editConfig.triggerType,\n      triggerType = _editConfig$triggerTy === void 0 ? ['icon'] : _editConfig$triggerTy;\n\n  var triggerEdit = function triggerEdit(edit) {\n    var _a;\n\n    if (edit) {\n      (_a = editConfig.onStart) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    }\n\n    setEditing(edit);\n  }; // Focus edit icon when back\n\n\n  useUpdatedEffect(function () {\n    var _a;\n\n    if (!editing) {\n      (_a = editIconRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n  }, [editing]);\n\n  var onEditClick = function onEditClick(e) {\n    e.preventDefault();\n    triggerEdit(true);\n  };\n\n  var onEditChange = function onEditChange(value) {\n    var _a;\n\n    (_a = editConfig.onChange) === null || _a === void 0 ? void 0 : _a.call(editConfig, value);\n    triggerEdit(false);\n  };\n\n  var onEditCancel = function onEditCancel() {\n    var _a;\n\n    (_a = editConfig.onCancel) === null || _a === void 0 ? void 0 : _a.call(editConfig);\n    triggerEdit(false);\n  }; // ========================== Copyable ==========================\n\n\n  var _useMergedConfig3 = useMergedConfig(copyable),\n      _useMergedConfig4 = _slicedToArray(_useMergedConfig3, 2),\n      enableCopy = _useMergedConfig4[0],\n      copyConfig = _useMergedConfig4[1];\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      copied = _React$useState2[0],\n      setCopied = _React$useState2[1];\n\n  var copyIdRef = React.useRef();\n\n  var cleanCopyId = function cleanCopyId() {\n    clearTimeout(copyIdRef.current);\n  };\n\n  var onCopyClick = function onCopyClick(e) {\n    var _a;\n\n    e.preventDefault();\n\n    if (copyConfig.text === undefined) {\n      copyConfig.text = String(children);\n    }\n\n    copy(copyConfig.text || '');\n    setCopied(true); // Trigger tips update\n\n    cleanCopyId();\n    copyIdRef.current = setTimeout(function () {\n      setCopied(false);\n    }, 3000);\n    (_a = copyConfig.onCopy) === null || _a === void 0 ? void 0 : _a.call(copyConfig);\n  };\n\n  React.useEffect(function () {\n    return cleanCopyId;\n  }, []); // ========================== Ellipsis ==========================\n\n  var _React$useState3 = React.useState(false),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      isLineClampSupport = _React$useState4[0],\n      setIsLineClampSupport = _React$useState4[1];\n\n  var _React$useState5 = React.useState(false),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isTextOverflowSupport = _React$useState6[0],\n      setIsTextOverflowSupport = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      expanded = _React$useState8[0],\n      setExpanded = _React$useState8[1];\n\n  var _React$useState9 = React.useState(false),\n      _React$useState10 = _slicedToArray(_React$useState9, 2),\n      isJsEllipsis = _React$useState10[0],\n      setIsJsEllipsis = _React$useState10[1];\n\n  var _React$useState11 = React.useState(false),\n      _React$useState12 = _slicedToArray(_React$useState11, 2),\n      isNativeEllipsis = _React$useState12[0],\n      setIsNativeEllipsis = _React$useState12[1];\n\n  var _useMergedConfig5 = useMergedConfig(ellipsis, {\n    expandable: false\n  }),\n      _useMergedConfig6 = _slicedToArray(_useMergedConfig5, 2),\n      enableEllipsis = _useMergedConfig6[0],\n      ellipsisConfig = _useMergedConfig6[1];\n\n  var mergedEnableEllipsis = enableEllipsis && !expanded; // Shared prop to reduce bundle size\n\n  var _ellipsisConfig$rows = ellipsisConfig.rows,\n      rows = _ellipsisConfig$rows === void 0 ? 1 : _ellipsisConfig$rows;\n  var needMeasureEllipsis = React.useMemo(function () {\n    return (// Disable ellipsis\n      !mergedEnableEllipsis || // Provide suffix\n      ellipsisConfig.suffix !== undefined || ellipsisConfig.onEllipsis || // Can't use css ellipsis since we need to provide the place for button\n      ellipsisConfig.expandable || enableEdit || enableCopy\n    );\n  }, [mergedEnableEllipsis, ellipsisConfig, enableEdit, enableCopy]);\n  React.useLayoutEffect(function () {\n    if (enableEllipsis && !needMeasureEllipsis) {\n      setIsLineClampSupport(isStyleSupport('webkitLineClamp'));\n      setIsTextOverflowSupport(isStyleSupport('textOverflow'));\n    }\n  }, [needMeasureEllipsis, enableEllipsis]);\n  var cssEllipsis = React.useMemo(function () {\n    if (needMeasureEllipsis) {\n      return false;\n    }\n\n    if (rows === 1) {\n      return isTextOverflowSupport;\n    }\n\n    return isLineClampSupport;\n  }, [needMeasureEllipsis, isTextOverflowSupport, isLineClampSupport]);\n  var isMergedEllipsis = mergedEnableEllipsis && (cssEllipsis ? isNativeEllipsis : isJsEllipsis);\n  var cssTextOverflow = mergedEnableEllipsis && rows === 1 && cssEllipsis;\n  var cssLineClamp = mergedEnableEllipsis && rows > 1 && cssEllipsis; // >>>>> Expand\n\n  var onExpandClick = function onExpandClick(e) {\n    var _a;\n\n    setExpanded(true);\n    (_a = ellipsisConfig.onExpand) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, e);\n  };\n\n  var _React$useState13 = React.useState(0),\n      _React$useState14 = _slicedToArray(_React$useState13, 2),\n      ellipsisWidth = _React$useState14[0],\n      setEllipsisWidth = _React$useState14[1];\n\n  var onResize = function onResize(_ref2) {\n    var offsetWidth = _ref2.offsetWidth;\n    setEllipsisWidth(offsetWidth);\n  }; // >>>>> JS Ellipsis\n\n\n  var onJsEllipsis = function onJsEllipsis(jsEllipsis) {\n    var _a;\n\n    setIsJsEllipsis(jsEllipsis); // Trigger if changed\n\n    if (isJsEllipsis !== jsEllipsis) {\n      (_a = ellipsisConfig.onEllipsis) === null || _a === void 0 ? void 0 : _a.call(ellipsisConfig, jsEllipsis);\n    }\n  }; // >>>>> Native ellipsis\n\n\n  React.useEffect(function () {\n    var textEle = typographyRef.current;\n\n    if (enableEllipsis && cssEllipsis && textEle) {\n      var currentEllipsis = textEle.offsetWidth < textEle.scrollWidth;\n\n      if (isNativeEllipsis !== currentEllipsis) {\n        setIsNativeEllipsis(currentEllipsis);\n      }\n    }\n  }, [enableEllipsis, cssEllipsis, children]); // ========================== Tooltip ===========================\n\n  var tooltipTitle = ellipsisConfig.tooltip === true ? children : ellipsisConfig.tooltip;\n  var topAriaLabel = React.useMemo(function () {\n    var isValid = function isValid(val) {\n      return ['string', 'number'].includes(_typeof(val));\n    };\n\n    if (!enableEllipsis || cssEllipsis) {\n      return undefined;\n    }\n\n    if (isValid(children)) {\n      return children;\n    }\n\n    if (isValid(title)) {\n      return title;\n    }\n\n    if (isValid(tooltipTitle)) {\n      return tooltipTitle;\n    }\n\n    return undefined;\n  }, [enableEllipsis, cssEllipsis, title, tooltipTitle, isMergedEllipsis]); // =========================== Render ===========================\n  // >>>>>>>>>>> Editing input\n\n  if (editing) {\n    return /*#__PURE__*/React.createElement(Editable, {\n      value: typeof children === 'string' ? children : '',\n      onSave: onEditChange,\n      onCancel: onEditCancel,\n      onEnd: editConfig.onEnd,\n      prefixCls: prefixCls,\n      className: className,\n      style: style,\n      direction: direction,\n      maxLength: editConfig.maxLength,\n      autoSize: editConfig.autoSize,\n      enterIcon: editConfig.enterIcon\n    });\n  } // >>>>>>>>>>> Typography\n  // Expand\n\n\n  var renderExpand = function renderExpand() {\n    var expandable = ellipsisConfig.expandable,\n        symbol = ellipsisConfig.symbol;\n    if (!expandable) return null;\n    var expandContent;\n\n    if (symbol) {\n      expandContent = symbol;\n    } else {\n      expandContent = textLocale.expand;\n    }\n\n    return /*#__PURE__*/React.createElement(\"a\", {\n      key: \"expand\",\n      className: \"\".concat(prefixCls, \"-expand\"),\n      onClick: onExpandClick,\n      \"aria-label\": textLocale.expand\n    }, expandContent);\n  }; // Edit\n\n\n  var renderEdit = function renderEdit() {\n    if (!enableEdit) return;\n    var icon = editConfig.icon,\n        tooltip = editConfig.tooltip;\n    var editTitle = toArray(tooltip)[0] || textLocale.edit;\n    var ariaLabel = typeof editTitle === 'string' ? editTitle : '';\n    return triggerType.includes('icon') ? /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"edit\",\n      title: tooltip === false ? '' : editTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      ref: editIconRef,\n      className: \"\".concat(prefixCls, \"-edit\"),\n      onClick: onEditClick,\n      \"aria-label\": ariaLabel\n    }, icon || /*#__PURE__*/React.createElement(EditOutlined, {\n      role: \"button\"\n    }))) : null;\n  }; // Copy\n\n\n  var renderCopy = function renderCopy() {\n    if (!enableCopy) return;\n    var tooltips = copyConfig.tooltips,\n        icon = copyConfig.icon;\n    var tooltipNodes = toList(tooltips);\n    var iconNodes = toList(icon);\n    var copyTitle = copied ? getNode(tooltipNodes[1], textLocale.copied) : getNode(tooltipNodes[0], textLocale.copy);\n    var systemStr = copied ? textLocale.copied : textLocale.copy;\n    var ariaLabel = typeof copyTitle === 'string' ? copyTitle : systemStr;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: \"copy\",\n      title: copyTitle\n    }, /*#__PURE__*/React.createElement(TransButton, {\n      className: classNames(\"\".concat(prefixCls, \"-copy\"), copied && \"\".concat(prefixCls, \"-copy-success\")),\n      onClick: onCopyClick,\n      \"aria-label\": ariaLabel\n    }, copied ? getNode(iconNodes[1], /*#__PURE__*/React.createElement(CheckOutlined, null), true) : getNode(iconNodes[0], /*#__PURE__*/React.createElement(CopyOutlined, null), true)));\n  };\n\n  var renderOperations = function renderOperations(renderExpanded) {\n    return [renderExpanded && renderExpand(), renderEdit(), renderCopy()];\n  };\n\n  var renderEllipsis = function renderEllipsis(needEllipsis) {\n    return [needEllipsis && /*#__PURE__*/React.createElement(\"span\", {\n      \"aria-hidden\": true,\n      key: \"ellipsis\"\n    }, ELLIPSIS_STR), ellipsisConfig.suffix, renderOperations(needEllipsis)];\n  };\n\n  return /*#__PURE__*/React.createElement(ResizeObserver, {\n    onResize: onResize,\n    disabled: !mergedEnableEllipsis || cssEllipsis\n  }, function (resizeRef) {\n    var _classNames;\n\n    return /*#__PURE__*/React.createElement(EllipsisTooltip, {\n      title: tooltipTitle,\n      enabledEllipsis: mergedEnableEllipsis,\n      isEllipsis: isMergedEllipsis\n    }, /*#__PURE__*/React.createElement(Typography, _extends({\n      className: classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(type), type), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis\"), enableEllipsis), _defineProperty(_classNames, \"\".concat(prefixCls, \"-single-line\"), mergedEnableEllipsis && rows === 1), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-single-line\"), cssTextOverflow), _defineProperty(_classNames, \"\".concat(prefixCls, \"-ellipsis-multiple-line\"), cssLineClamp), _classNames), className),\n      style: _extends(_extends({}, style), {\n        WebkitLineClamp: cssLineClamp ? rows : undefined\n      }),\n      component: component,\n      ref: composeRef(resizeRef, typographyRef, ref),\n      direction: direction,\n      onClick: triggerType.includes('text') ? onEditClick : null,\n      \"aria-label\": topAriaLabel,\n      title: title\n    }, textProps), /*#__PURE__*/React.createElement(Ellipsis, {\n      enabledMeasure: mergedEnableEllipsis && !cssEllipsis,\n      text: children,\n      rows: rows,\n      width: ellipsisWidth,\n      onEllipsis: onJsEllipsis\n    }, function (node, needEllipsis) {\n      var renderNode = node;\n\n      if (node.length && needEllipsis && topAriaLabel) {\n        renderNode = /*#__PURE__*/React.createElement(\"span\", {\n          key: \"show-content\",\n          \"aria-hidden\": true\n        }, renderNode);\n      }\n\n      var wrappedContext = wrapperDecorations(props, /*#__PURE__*/React.createElement(React.Fragment, null, renderNode, renderEllipsis(needEllipsis)));\n      return wrappedContext;\n    })));\n  });\n});\nexport default Base;"]},"metadata":{},"sourceType":"module"}