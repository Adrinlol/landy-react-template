{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SummaryContext } from '.';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nexport default function SummaryCell(_ref) {\n  var className = _ref.className,\n      index = _ref.index,\n      children = _ref.children,\n      _ref$colSpan = _ref.colSpan,\n      colSpan = _ref$colSpan === void 0 ? 1 : _ref$colSpan,\n      rowSpan = _ref.rowSpan,\n      align = _ref.align;\n\n  var _React$useContext = React.useContext(TableContext),\n      prefixCls = _React$useContext.prefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useContext2 = React.useContext(SummaryContext),\n      scrollColumnIndex = _React$useContext2.scrollColumnIndex,\n      stickyOffsets = _React$useContext2.stickyOffsets,\n      flattenColumns = _React$useContext2.flattenColumns;\n\n  var lastIndex = index + colSpan - 1;\n  var mergedColSpan = lastIndex + 1 === scrollColumnIndex ? colSpan + 1 : colSpan;\n  var fixedInfo = getCellFixedInfo(index, index + mergedColSpan - 1, flattenColumns, stickyOffsets, direction);\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: className,\n    index: index,\n    component: \"td\",\n    prefixCls: prefixCls,\n    record: null,\n    dataIndex: null,\n    align: align,\n    colSpan: mergedColSpan,\n    rowSpan: rowSpan,\n    render: function render() {\n      return children;\n    }\n  }, fixedInfo));\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-table/es/Footer/Cell.js"],"names":["_extends","React","SummaryContext","Cell","TableContext","getCellFixedInfo","SummaryCell","_ref","className","index","children","_ref$colSpan","colSpan","rowSpan","align","_React$useContext","useContext","prefixCls","direction","_React$useContext2","scrollColumnIndex","stickyOffsets","flattenColumns","lastIndex","mergedColSpan","fixedInfo","createElement","component","record","dataIndex","render"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,cAAT,QAA+B,GAA/B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AACA,eAAe,SAASC,WAAT,CAAqBC,IAArB,EAA2B;AACxC,MAAIC,SAAS,GAAGD,IAAI,CAACC,SAArB;AAAA,MACIC,KAAK,GAAGF,IAAI,CAACE,KADjB;AAAA,MAEIC,QAAQ,GAAGH,IAAI,CAACG,QAFpB;AAAA,MAGIC,YAAY,GAAGJ,IAAI,CAACK,OAHxB;AAAA,MAIIA,OAAO,GAAGD,YAAY,KAAK,KAAK,CAAtB,GAA0B,CAA1B,GAA8BA,YAJ5C;AAAA,MAKIE,OAAO,GAAGN,IAAI,CAACM,OALnB;AAAA,MAMIC,KAAK,GAAGP,IAAI,CAACO,KANjB;;AAQA,MAAIC,iBAAiB,GAAGd,KAAK,CAACe,UAAN,CAAiBZ,YAAjB,CAAxB;AAAA,MACIa,SAAS,GAAGF,iBAAiB,CAACE,SADlC;AAAA,MAEIC,SAAS,GAAGH,iBAAiB,CAACG,SAFlC;;AAIA,MAAIC,kBAAkB,GAAGlB,KAAK,CAACe,UAAN,CAAiBd,cAAjB,CAAzB;AAAA,MACIkB,iBAAiB,GAAGD,kBAAkB,CAACC,iBAD3C;AAAA,MAEIC,aAAa,GAAGF,kBAAkB,CAACE,aAFvC;AAAA,MAGIC,cAAc,GAAGH,kBAAkB,CAACG,cAHxC;;AAKA,MAAIC,SAAS,GAAGd,KAAK,GAAGG,OAAR,GAAkB,CAAlC;AACA,MAAIY,aAAa,GAAGD,SAAS,GAAG,CAAZ,KAAkBH,iBAAlB,GAAsCR,OAAO,GAAG,CAAhD,GAAoDA,OAAxE;AACA,MAAIa,SAAS,GAAGpB,gBAAgB,CAACI,KAAD,EAAQA,KAAK,GAAGe,aAAR,GAAwB,CAAhC,EAAmCF,cAAnC,EAAmDD,aAAnD,EAAkEH,SAAlE,CAAhC;AACA,SAAO,aAAajB,KAAK,CAACyB,aAAN,CAAoBvB,IAApB,EAA0BH,QAAQ,CAAC;AACrDQ,IAAAA,SAAS,EAAEA,SAD0C;AAErDC,IAAAA,KAAK,EAAEA,KAF8C;AAGrDkB,IAAAA,SAAS,EAAE,IAH0C;AAIrDV,IAAAA,SAAS,EAAEA,SAJ0C;AAKrDW,IAAAA,MAAM,EAAE,IAL6C;AAMrDC,IAAAA,SAAS,EAAE,IAN0C;AAOrDf,IAAAA,KAAK,EAAEA,KAP8C;AAQrDF,IAAAA,OAAO,EAAEY,aAR4C;AASrDX,IAAAA,OAAO,EAAEA,OAT4C;AAUrDiB,IAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,aAAOpB,QAAP;AACD;AAZoD,GAAD,EAanDe,SAbmD,CAAlC,CAApB;AAcD","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SummaryContext } from '.';\nimport Cell from '../Cell';\nimport TableContext from '../context/TableContext';\nimport { getCellFixedInfo } from '../utils/fixUtil';\nexport default function SummaryCell(_ref) {\n  var className = _ref.className,\n      index = _ref.index,\n      children = _ref.children,\n      _ref$colSpan = _ref.colSpan,\n      colSpan = _ref$colSpan === void 0 ? 1 : _ref$colSpan,\n      rowSpan = _ref.rowSpan,\n      align = _ref.align;\n\n  var _React$useContext = React.useContext(TableContext),\n      prefixCls = _React$useContext.prefixCls,\n      direction = _React$useContext.direction;\n\n  var _React$useContext2 = React.useContext(SummaryContext),\n      scrollColumnIndex = _React$useContext2.scrollColumnIndex,\n      stickyOffsets = _React$useContext2.stickyOffsets,\n      flattenColumns = _React$useContext2.flattenColumns;\n\n  var lastIndex = index + colSpan - 1;\n  var mergedColSpan = lastIndex + 1 === scrollColumnIndex ? colSpan + 1 : colSpan;\n  var fixedInfo = getCellFixedInfo(index, index + mergedColSpan - 1, flattenColumns, stickyOffsets, direction);\n  return /*#__PURE__*/React.createElement(Cell, _extends({\n    className: className,\n    index: index,\n    component: \"td\",\n    prefixCls: prefixCls,\n    record: null,\n    dataIndex: null,\n    align: align,\n    colSpan: mergedColSpan,\n    rowSpan: rowSpan,\n    render: function render() {\n      return children;\n    }\n  }, fixedInfo));\n}"]},"metadata":{},"sourceType":"module"}