{"ast":null,"code":"\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/css-loader/dist/runtime/getUrl.js"],"names":["module","exports","url","options","String","__esModule","default","test","slice","hash","needQuotes","concat","replace"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,GAAV,EAAeC,OAAf,EAAwB;AACvC,MAAI,CAACA,OAAL,EAAc;AACZA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAI,CAACD,GAAL,EAAU;AACR,WAAOA,GAAP;AACD;;AAEDA,EAAAA,GAAG,GAAGE,MAAM,CAACF,GAAG,CAACG,UAAJ,GAAiBH,GAAG,CAACI,OAArB,GAA+BJ,GAAhC,CAAZ,CATuC,CASW;;AAElD,MAAI,eAAeK,IAAf,CAAoBL,GAApB,CAAJ,EAA8B;AAC5BA,IAAAA,GAAG,GAAGA,GAAG,CAACM,KAAJ,CAAU,CAAV,EAAa,CAAC,CAAd,CAAN;AACD;;AAED,MAAIL,OAAO,CAACM,IAAZ,EAAkB;AAChBP,IAAAA,GAAG,IAAIC,OAAO,CAACM,IAAf;AACD,GAjBsC,CAiBrC;AACF;;;AAGA,MAAI,oBAAoBF,IAApB,CAAyBL,GAAzB,KAAiCC,OAAO,CAACO,UAA7C,EAAyD;AACvD,WAAO,KAAKC,MAAL,CAAYT,GAAG,CAACU,OAAJ,CAAY,IAAZ,EAAkB,KAAlB,EAAyBA,OAAzB,CAAiC,KAAjC,EAAwC,KAAxC,CAAZ,EAA4D,IAA5D,CAAP;AACD;;AAED,SAAOV,GAAP;AACD,CA1BD","sourcesContent":["\"use strict\";\n\nmodule.exports = function (url, options) {\n  if (!options) {\n    options = {};\n  }\n\n  if (!url) {\n    return url;\n  }\n\n  url = String(url.__esModule ? url.default : url); // If url is already wrapped in quotes, remove them\n\n  if (/^['\"].*['\"]$/.test(url)) {\n    url = url.slice(1, -1);\n  }\n\n  if (options.hash) {\n    url += options.hash;\n  } // Should url be wrapped?\n  // See https://drafts.csswg.org/css-values-3/#urls\n\n\n  if (/[\"'() \\t\\n]|(%20)/.test(url) || options.needQuotes) {\n    return \"\\\"\".concat(url.replace(/\"/g, '\\\\\"').replace(/\\n/g, \"\\\\n\"), \"\\\"\");\n  }\n\n  return url;\n};"]},"metadata":{},"sourceType":"script"}