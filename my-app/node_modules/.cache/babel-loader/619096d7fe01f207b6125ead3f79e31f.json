{"ast":null,"code":"var isBrowser = \"object\" !== 'undefined';\n\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\n\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/@emotion/utils/dist/emotion-utils.browser.esm.js"],"names":["isBrowser","getRegisteredStyles","registered","registeredStyles","classNames","rawClassName","split","forEach","className","undefined","push","insertStyles","cache","serialized","isStringTag","key","name","styles","inserted","current","maybeStyles","insert","sheet","next"],"mappings":"AAAA,IAAIA,SAAS,GAAG,aAAa,WAA7B;;AACA,SAASC,mBAAT,CAA6BC,UAA7B,EAAyCC,gBAAzC,EAA2DC,UAA3D,EAAuE;AACrE,MAAIC,YAAY,GAAG,EAAnB;AACAD,EAAAA,UAAU,CAACE,KAAX,CAAiB,GAAjB,EAAsBC,OAAtB,CAA8B,UAAUC,SAAV,EAAqB;AACjD,QAAIN,UAAU,CAACM,SAAD,CAAV,KAA0BC,SAA9B,EAAyC;AACvCN,MAAAA,gBAAgB,CAACO,IAAjB,CAAsBR,UAAU,CAACM,SAAD,CAAV,GAAwB,GAA9C;AACD,KAFD,MAEO;AACLH,MAAAA,YAAY,IAAIG,SAAS,GAAG,GAA5B;AACD;AACF,GAND;AAOA,SAAOH,YAAP;AACD;;AACD,IAAIM,YAAY,GAAG,SAASA,YAAT,CAAsBC,KAAtB,EAA6BC,UAA7B,EAAyCC,WAAzC,EAAsD;AACvE,MAAIN,SAAS,GAAGI,KAAK,CAACG,GAAN,GAAY,GAAZ,GAAkBF,UAAU,CAACG,IAA7C;;AAEA,OAAK;AACL;AACA;AACA;AACA;AACA,GAACF,WAAW,KAAK,KAAhB,IAAyB;AAC1B;AACA;AACA;AACAd,EAAAA,SAAS,KAAK,KAJd,KAIyBY,KAAK,CAACV,UAAN,CAAiBM,SAAjB,MAAgCC,SATzD,EASoE;AAClEG,IAAAA,KAAK,CAACV,UAAN,CAAiBM,SAAjB,IAA8BK,UAAU,CAACI,MAAzC;AACD;;AAED,MAAIL,KAAK,CAACM,QAAN,CAAeL,UAAU,CAACG,IAA1B,MAAoCP,SAAxC,EAAmD;AACjD,QAAIU,OAAO,GAAGN,UAAd;;AAEA,OAAG;AACD,UAAIO,WAAW,GAAGR,KAAK,CAACS,MAAN,CAAaR,UAAU,KAAKM,OAAf,GAAyB,MAAMX,SAA/B,GAA2C,EAAxD,EAA4DW,OAA5D,EAAqEP,KAAK,CAACU,KAA3E,EAAkF,IAAlF,CAAlB;AAEAH,MAAAA,OAAO,GAAGA,OAAO,CAACI,IAAlB;AACD,KAJD,QAISJ,OAAO,KAAKV,SAJrB;AAKD;AACF,CAzBD;;AA2BA,SAASR,mBAAT,EAA8BU,YAA9B","sourcesContent":["var isBrowser = \"object\" !== 'undefined';\nfunction getRegisteredStyles(registered, registeredStyles, classNames) {\n  var rawClassName = '';\n  classNames.split(' ').forEach(function (className) {\n    if (registered[className] !== undefined) {\n      registeredStyles.push(registered[className] + \";\");\n    } else {\n      rawClassName += className + \" \";\n    }\n  });\n  return rawClassName;\n}\nvar insertStyles = function insertStyles(cache, serialized, isStringTag) {\n  var className = cache.key + \"-\" + serialized.name;\n\n  if ( // we only need to add the styles to the registered cache if the\n  // class name could be used further down\n  // the tree but if it's a string tag, we know it won't\n  // so we don't have to add it to registered cache.\n  // this improves memory usage since we can avoid storing the whole style string\n  (isStringTag === false || // we need to always store it if we're in compat mode and\n  // in node since emotion-server relies on whether a style is in\n  // the registered cache to know whether a style is global or not\n  // also, note that this check will be dead code eliminated in the browser\n  isBrowser === false ) && cache.registered[className] === undefined) {\n    cache.registered[className] = serialized.styles;\n  }\n\n  if (cache.inserted[serialized.name] === undefined) {\n    var current = serialized;\n\n    do {\n      var maybeStyles = cache.insert(serialized === current ? \".\" + className : '', current, cache.sheet, true);\n\n      current = current.next;\n    } while (current !== undefined);\n  }\n};\n\nexport { getRegisteredStyles, insertStyles };\n"]},"metadata":{},"sourceType":"module"}