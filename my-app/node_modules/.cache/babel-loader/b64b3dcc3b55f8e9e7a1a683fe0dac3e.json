{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar bind = require('./helpers/bind');\n\nvar Axios = require('./core/Axios');\n\nvar mergeConfig = require('./core/mergeConfig');\n\nvar defaults = require('./defaults');\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\n\n\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context); // Copy axios.prototype to instance\n\n  utils.extend(instance, Axios.prototype, context); // Copy context to instance\n\n  utils.extend(instance, context);\n  return instance;\n} // Create the default instance to be exported\n\n\nvar axios = createInstance(defaults); // Expose Axios class to allow class inheritance\n\naxios.Axios = Axios; // Factory for creating new instances\n\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n}; // Expose Cancel & CancelToken\n\n\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel'); // Expose all/spread\n\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = require('./helpers/spread'); // Expose isAxiosError\n\naxios.isAxiosError = require('./helpers/isAxiosError');\nmodule.exports = axios; // Allow use of default import syntax in TypeScript\n\nmodule.exports.default = axios;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/axios/lib/axios.js"],"names":["utils","require","bind","Axios","mergeConfig","defaults","createInstance","defaultConfig","context","instance","prototype","request","extend","axios","create","instanceConfig","Cancel","CancelToken","isCancel","all","promises","Promise","spread","isAxiosError","module","exports","default"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,gBAAD,CAAlB;;AACA,IAAIE,KAAK,GAAGF,OAAO,CAAC,cAAD,CAAnB;;AACA,IAAIG,WAAW,GAAGH,OAAO,CAAC,oBAAD,CAAzB;;AACA,IAAII,QAAQ,GAAGJ,OAAO,CAAC,YAAD,CAAtB;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASK,cAAT,CAAwBC,aAAxB,EAAuC;AACrC,MAAIC,OAAO,GAAG,IAAIL,KAAJ,CAAUI,aAAV,CAAd;AACA,MAAIE,QAAQ,GAAGP,IAAI,CAACC,KAAK,CAACO,SAAN,CAAgBC,OAAjB,EAA0BH,OAA1B,CAAnB,CAFqC,CAIrC;;AACAR,EAAAA,KAAK,CAACY,MAAN,CAAaH,QAAb,EAAuBN,KAAK,CAACO,SAA7B,EAAwCF,OAAxC,EALqC,CAOrC;;AACAR,EAAAA,KAAK,CAACY,MAAN,CAAaH,QAAb,EAAuBD,OAAvB;AAEA,SAAOC,QAAP;AACD,C,CAED;;;AACA,IAAII,KAAK,GAAGP,cAAc,CAACD,QAAD,CAA1B,C,CAEA;;AACAQ,KAAK,CAACV,KAAN,GAAcA,KAAd,C,CAEA;;AACAU,KAAK,CAACC,MAAN,GAAe,SAASA,MAAT,CAAgBC,cAAhB,EAAgC;AAC7C,SAAOT,cAAc,CAACF,WAAW,CAACS,KAAK,CAACR,QAAP,EAAiBU,cAAjB,CAAZ,CAArB;AACD,CAFD,C,CAIA;;;AACAF,KAAK,CAACG,MAAN,GAAef,OAAO,CAAC,iBAAD,CAAtB;AACAY,KAAK,CAACI,WAAN,GAAoBhB,OAAO,CAAC,sBAAD,CAA3B;AACAY,KAAK,CAACK,QAAN,GAAiBjB,OAAO,CAAC,mBAAD,CAAxB,C,CAEA;;AACAY,KAAK,CAACM,GAAN,GAAY,SAASA,GAAT,CAAaC,QAAb,EAAuB;AACjC,SAAOC,OAAO,CAACF,GAAR,CAAYC,QAAZ,CAAP;AACD,CAFD;;AAGAP,KAAK,CAACS,MAAN,GAAerB,OAAO,CAAC,kBAAD,CAAtB,C,CAEA;;AACAY,KAAK,CAACU,YAAN,GAAqBtB,OAAO,CAAC,wBAAD,CAA5B;AAEAuB,MAAM,CAACC,OAAP,GAAiBZ,KAAjB,C,CAEA;;AACAW,MAAM,CAACC,OAAP,CAAeC,OAAf,GAAyBb,KAAzB","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n"]},"metadata":{},"sourceType":"script"}