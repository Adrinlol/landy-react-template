{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from './Cell';\nimport { DescriptionsContext } from '.';\n\nfunction renderCells(items, _ref, _ref2) {\n  var colon = _ref.colon,\n      prefixCls = _ref.prefixCls,\n      bordered = _ref.bordered;\n  var component = _ref2.component,\n      type = _ref2.type,\n      showLabel = _ref2.showLabel,\n      showContent = _ref2.showContent,\n      rootLabelStyle = _ref2.labelStyle,\n      rootContentStyle = _ref2.contentStyle;\n  return items.map(function (_ref3, index) {\n    var _ref3$props = _ref3.props,\n        label = _ref3$props.label,\n        children = _ref3$props.children,\n        _ref3$props$prefixCls = _ref3$props.prefixCls,\n        itemPrefixCls = _ref3$props$prefixCls === void 0 ? prefixCls : _ref3$props$prefixCls,\n        className = _ref3$props.className,\n        style = _ref3$props.style,\n        labelStyle = _ref3$props.labelStyle,\n        contentStyle = _ref3$props.contentStyle,\n        _ref3$props$span = _ref3$props.span,\n        span = _ref3$props$span === void 0 ? 1 : _ref3$props$span,\n        key = _ref3.key;\n\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: \"\".concat(type, \"-\").concat(key || index),\n        className: className,\n        style: style,\n        labelStyle: _extends(_extends({}, rootLabelStyle), labelStyle),\n        contentStyle: _extends(_extends({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: \"label-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: \"content-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\n\nvar Row = function Row(props) {\n  var descContext = React.useContext(DescriptionsContext);\n  var prefixCls = props.prefixCls,\n      vertical = props.vertical,\n      row = props.row,\n      index = props.index,\n      bordered = props.bordered;\n\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"label-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"content-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: \"\".concat(prefixCls, \"-row\")\n  }, renderCells(row, props, _extends({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\n\nexport default Row;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/descriptions/Row.js"],"names":["_extends","React","Cell","DescriptionsContext","renderCells","items","_ref","_ref2","colon","prefixCls","bordered","component","type","showLabel","showContent","rootLabelStyle","labelStyle","rootContentStyle","contentStyle","map","_ref3","index","_ref3$props","props","label","children","_ref3$props$prefixCls","itemPrefixCls","className","style","_ref3$props$span","span","key","createElement","concat","content","Row","descContext","useContext","vertical","row","Fragment"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport Cell from './Cell';\nimport { DescriptionsContext } from '.';\n\nfunction renderCells(items, _ref, _ref2) {\n  var colon = _ref.colon,\n      prefixCls = _ref.prefixCls,\n      bordered = _ref.bordered;\n  var component = _ref2.component,\n      type = _ref2.type,\n      showLabel = _ref2.showLabel,\n      showContent = _ref2.showContent,\n      rootLabelStyle = _ref2.labelStyle,\n      rootContentStyle = _ref2.contentStyle;\n  return items.map(function (_ref3, index) {\n    var _ref3$props = _ref3.props,\n        label = _ref3$props.label,\n        children = _ref3$props.children,\n        _ref3$props$prefixCls = _ref3$props.prefixCls,\n        itemPrefixCls = _ref3$props$prefixCls === void 0 ? prefixCls : _ref3$props$prefixCls,\n        className = _ref3$props.className,\n        style = _ref3$props.style,\n        labelStyle = _ref3$props.labelStyle,\n        contentStyle = _ref3$props.contentStyle,\n        _ref3$props$span = _ref3$props.span,\n        span = _ref3$props$span === void 0 ? 1 : _ref3$props$span,\n        key = _ref3.key;\n\n    if (typeof component === 'string') {\n      return /*#__PURE__*/React.createElement(Cell, {\n        key: \"\".concat(type, \"-\").concat(key || index),\n        className: className,\n        style: style,\n        labelStyle: _extends(_extends({}, rootLabelStyle), labelStyle),\n        contentStyle: _extends(_extends({}, rootContentStyle), contentStyle),\n        span: span,\n        colon: colon,\n        component: component,\n        itemPrefixCls: itemPrefixCls,\n        bordered: bordered,\n        label: showLabel ? label : null,\n        content: showContent ? children : null\n      });\n    }\n\n    return [/*#__PURE__*/React.createElement(Cell, {\n      key: \"label-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootLabelStyle), style), labelStyle),\n      span: 1,\n      colon: colon,\n      component: component[0],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      label: label\n    }), /*#__PURE__*/React.createElement(Cell, {\n      key: \"content-\".concat(key || index),\n      className: className,\n      style: _extends(_extends(_extends({}, rootContentStyle), style), contentStyle),\n      span: span * 2 - 1,\n      component: component[1],\n      itemPrefixCls: itemPrefixCls,\n      bordered: bordered,\n      content: children\n    })];\n  });\n}\n\nvar Row = function Row(props) {\n  var descContext = React.useContext(DescriptionsContext);\n  var prefixCls = props.prefixCls,\n      vertical = props.vertical,\n      row = props.row,\n      index = props.index,\n      bordered = props.bordered;\n\n  if (vertical) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"label-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'th',\n      type: 'label',\n      showLabel: true\n    }, descContext))), /*#__PURE__*/React.createElement(\"tr\", {\n      key: \"content-\".concat(index),\n      className: \"\".concat(prefixCls, \"-row\")\n    }, renderCells(row, props, _extends({\n      component: 'td',\n      type: 'content',\n      showContent: true\n    }, descContext))));\n  }\n\n  return /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    className: \"\".concat(prefixCls, \"-row\")\n  }, renderCells(row, props, _extends({\n    component: bordered ? ['th', 'td'] : 'td',\n    type: 'item',\n    showLabel: true,\n    showContent: true\n  }, descContext)));\n};\n\nexport default Row;"]},"metadata":{},"sourceType":"module"}