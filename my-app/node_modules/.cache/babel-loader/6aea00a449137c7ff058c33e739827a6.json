{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport getIcons from '../select/utils/iconUtil';\nimport renderSwitcherIcon from '../tree/utils/iconUtil';\nimport SizeContext from '../config-provider/SizeContext';\nimport { getTransitionName } from '../_util/motion';\n\nvar InternalTreeSelect = function InternalTreeSelect(_a, ref) {\n  var _classNames2;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      _a$bordered = _a.bordered,\n      bordered = _a$bordered === void 0 ? true : _a$bordered,\n      className = _a.className,\n      treeCheckable = _a.treeCheckable,\n      multiple = _a.multiple,\n      _a$listHeight = _a.listHeight,\n      listHeight = _a$listHeight === void 0 ? 256 : _a$listHeight,\n      _a$listItemHeight = _a.listItemHeight,\n      listItemHeight = _a$listItemHeight === void 0 ? 26 : _a$listItemHeight,\n      notFoundContent = _a.notFoundContent,\n      _switcherIcon = _a.switcherIcon,\n      treeLine = _a.treeLine,\n      getPopupContainer = _a.getPopupContainer,\n      dropdownClassName = _a.dropdownClassName,\n      _a$treeIcon = _a.treeIcon,\n      treeIcon = _a$treeIcon === void 0 ? false : _a$treeIcon,\n      transitionName = _a.transitionName,\n      _a$choiceTransitionNa = _a.choiceTransitionName,\n      choiceTransitionName = _a$choiceTransitionNa === void 0 ? '' : _a$choiceTransitionNa,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"bordered\", \"className\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getContextPopupContainer = _React$useContext.getPopupContainer,\n      getPrefixCls = _React$useContext.getPrefixCls,\n      renderEmpty = _React$useContext.renderEmpty,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual,\n      dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth;\n\n  var size = React.useContext(SizeContext);\n  devWarning(multiple !== false || !treeCheckable, 'TreeSelect', '`multiple` will always be `true` when `treeCheckable` is true');\n  var prefixCls = getPrefixCls('select', customizePrefixCls);\n  var treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  var treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  var mergedDropdownClassName = classNames(dropdownClassName, \"\".concat(treeSelectPrefixCls, \"-dropdown\"), _defineProperty({}, \"\".concat(treeSelectPrefixCls, \"-dropdown-rtl\"), direction === 'rtl'));\n  var isMultiple = !!(treeCheckable || multiple); // ===================== Icons =====================\n\n  var _getIcons = getIcons(_extends(_extends({}, props), {\n    multiple: isMultiple,\n    prefixCls: prefixCls\n  })),\n      suffixIcon = _getIcons.suffixIcon,\n      removeIcon = _getIcons.removeIcon,\n      clearIcon = _getIcons.clearIcon; // ===================== Empty =====================\n\n\n  var mergedNotFound;\n\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = renderEmpty('Select');\n  } // ==================== Render =====================\n\n\n  var selectProps = omit(props, ['suffixIcon', 'itemIcon', 'removeIcon', 'clearIcon', 'switcherIcon']);\n  var mergedSize = customizeSize || size;\n  var mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-lg\"), mergedSize === 'large'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-sm\"), mergedSize === 'small'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-borderless\"), !bordered), _classNames2), className);\n  var rootPrefixCls = getPrefixCls();\n  return /*#__PURE__*/React.createElement(RcTreeSelect, _extends({\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n  }, selectProps, {\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-tree-checkbox-inner\")\n    }) : treeCheckable,\n    treeLine: !!treeLine,\n    inputIcon: suffixIcon,\n    multiple: multiple,\n    removeIcon: removeIcon,\n    clearIcon: clearIcon,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(treePrefixCls, _switcherIcon, treeLine, nodeProps);\n    },\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName)\n  }));\n};\n\nvar TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nvar TreeSelect = TreeSelectRef;\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nexport { TreeNode };\nexport default TreeSelect;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/tree-select/index.js"],"names":["_extends","_defineProperty","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","RcTreeSelect","TreeNode","SHOW_ALL","SHOW_PARENT","SHOW_CHILD","classNames","omit","ConfigContext","devWarning","getIcons","renderSwitcherIcon","SizeContext","getTransitionName","InternalTreeSelect","_a","ref","_classNames2","customizePrefixCls","prefixCls","customizeSize","size","_a$bordered","bordered","className","treeCheckable","multiple","_a$listHeight","listHeight","_a$listItemHeight","listItemHeight","notFoundContent","_switcherIcon","switcherIcon","treeLine","getPopupContainer","dropdownClassName","_a$treeIcon","treeIcon","transitionName","_a$choiceTransitionNa","choiceTransitionName","props","_React$useContext","useContext","getContextPopupContainer","getPrefixCls","renderEmpty","direction","virtual","dropdownMatchSelectWidth","treePrefixCls","treeSelectPrefixCls","mergedDropdownClassName","concat","isMultiple","_getIcons","suffixIcon","removeIcon","clearIcon","mergedNotFound","undefined","selectProps","mergedSize","mergedClassName","rootPrefixCls","createElement","inputIcon","nodeProps","showTreeIcon","treeMotion","TreeSelectRef","forwardRef","TreeSelect"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport RcTreeSelect, { TreeNode, SHOW_ALL, SHOW_PARENT, SHOW_CHILD } from 'rc-tree-select';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport { ConfigContext } from '../config-provider';\nimport devWarning from '../_util/devWarning';\nimport getIcons from '../select/utils/iconUtil';\nimport renderSwitcherIcon from '../tree/utils/iconUtil';\nimport SizeContext from '../config-provider/SizeContext';\nimport { getTransitionName } from '../_util/motion';\n\nvar InternalTreeSelect = function InternalTreeSelect(_a, ref) {\n  var _classNames2;\n\n  var customizePrefixCls = _a.prefixCls,\n      customizeSize = _a.size,\n      _a$bordered = _a.bordered,\n      bordered = _a$bordered === void 0 ? true : _a$bordered,\n      className = _a.className,\n      treeCheckable = _a.treeCheckable,\n      multiple = _a.multiple,\n      _a$listHeight = _a.listHeight,\n      listHeight = _a$listHeight === void 0 ? 256 : _a$listHeight,\n      _a$listItemHeight = _a.listItemHeight,\n      listItemHeight = _a$listItemHeight === void 0 ? 26 : _a$listItemHeight,\n      notFoundContent = _a.notFoundContent,\n      _switcherIcon = _a.switcherIcon,\n      treeLine = _a.treeLine,\n      getPopupContainer = _a.getPopupContainer,\n      dropdownClassName = _a.dropdownClassName,\n      _a$treeIcon = _a.treeIcon,\n      treeIcon = _a$treeIcon === void 0 ? false : _a$treeIcon,\n      transitionName = _a.transitionName,\n      _a$choiceTransitionNa = _a.choiceTransitionName,\n      choiceTransitionName = _a$choiceTransitionNa === void 0 ? '' : _a$choiceTransitionNa,\n      props = __rest(_a, [\"prefixCls\", \"size\", \"bordered\", \"className\", \"treeCheckable\", \"multiple\", \"listHeight\", \"listItemHeight\", \"notFoundContent\", \"switcherIcon\", \"treeLine\", \"getPopupContainer\", \"dropdownClassName\", \"treeIcon\", \"transitionName\", \"choiceTransitionName\"]);\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getContextPopupContainer = _React$useContext.getPopupContainer,\n      getPrefixCls = _React$useContext.getPrefixCls,\n      renderEmpty = _React$useContext.renderEmpty,\n      direction = _React$useContext.direction,\n      virtual = _React$useContext.virtual,\n      dropdownMatchSelectWidth = _React$useContext.dropdownMatchSelectWidth;\n\n  var size = React.useContext(SizeContext);\n  devWarning(multiple !== false || !treeCheckable, 'TreeSelect', '`multiple` will always be `true` when `treeCheckable` is true');\n  var prefixCls = getPrefixCls('select', customizePrefixCls);\n  var treePrefixCls = getPrefixCls('select-tree', customizePrefixCls);\n  var treeSelectPrefixCls = getPrefixCls('tree-select', customizePrefixCls);\n  var mergedDropdownClassName = classNames(dropdownClassName, \"\".concat(treeSelectPrefixCls, \"-dropdown\"), _defineProperty({}, \"\".concat(treeSelectPrefixCls, \"-dropdown-rtl\"), direction === 'rtl'));\n  var isMultiple = !!(treeCheckable || multiple); // ===================== Icons =====================\n\n  var _getIcons = getIcons(_extends(_extends({}, props), {\n    multiple: isMultiple,\n    prefixCls: prefixCls\n  })),\n      suffixIcon = _getIcons.suffixIcon,\n      removeIcon = _getIcons.removeIcon,\n      clearIcon = _getIcons.clearIcon; // ===================== Empty =====================\n\n\n  var mergedNotFound;\n\n  if (notFoundContent !== undefined) {\n    mergedNotFound = notFoundContent;\n  } else {\n    mergedNotFound = renderEmpty('Select');\n  } // ==================== Render =====================\n\n\n  var selectProps = omit(props, ['suffixIcon', 'itemIcon', 'removeIcon', 'clearIcon', 'switcherIcon']);\n  var mergedSize = customizeSize || size;\n  var mergedClassName = classNames(!customizePrefixCls && treeSelectPrefixCls, (_classNames2 = {}, _defineProperty(_classNames2, \"\".concat(prefixCls, \"-lg\"), mergedSize === 'large'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-sm\"), mergedSize === 'small'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _defineProperty(_classNames2, \"\".concat(prefixCls, \"-borderless\"), !bordered), _classNames2), className);\n  var rootPrefixCls = getPrefixCls();\n  return /*#__PURE__*/React.createElement(RcTreeSelect, _extends({\n    virtual: virtual,\n    dropdownMatchSelectWidth: dropdownMatchSelectWidth\n  }, selectProps, {\n    ref: ref,\n    prefixCls: prefixCls,\n    className: mergedClassName,\n    listHeight: listHeight,\n    listItemHeight: listItemHeight,\n    treeCheckable: treeCheckable ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-tree-checkbox-inner\")\n    }) : treeCheckable,\n    treeLine: !!treeLine,\n    inputIcon: suffixIcon,\n    multiple: multiple,\n    removeIcon: removeIcon,\n    clearIcon: clearIcon,\n    switcherIcon: function switcherIcon(nodeProps) {\n      return renderSwitcherIcon(treePrefixCls, _switcherIcon, treeLine, nodeProps);\n    },\n    showTreeIcon: treeIcon,\n    notFoundContent: mergedNotFound,\n    getPopupContainer: getPopupContainer || getContextPopupContainer,\n    treeMotion: null,\n    dropdownClassName: mergedDropdownClassName,\n    choiceTransitionName: getTransitionName(rootPrefixCls, '', choiceTransitionName),\n    transitionName: getTransitionName(rootPrefixCls, 'slide-up', transitionName)\n  }));\n};\n\nvar TreeSelectRef = /*#__PURE__*/React.forwardRef(InternalTreeSelect);\nvar TreeSelect = TreeSelectRef;\nTreeSelect.TreeNode = TreeNode;\nTreeSelect.SHOW_ALL = SHOW_ALL;\nTreeSelect.SHOW_PARENT = SHOW_PARENT;\nTreeSelect.SHOW_CHILD = SHOW_CHILD;\nexport { TreeNode };\nexport default TreeSelect;"]},"metadata":{},"sourceType":"module"}