{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport Notice from './Notice';\nexport default function useNotification(notificationInstance) {\n  var createdRef = React.useRef({});\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      elements = _React$useState2[0],\n      setElements = _React$useState2[1];\n\n  function notify(noticeProps) {\n    var firstMount = true;\n    notificationInstance.add(noticeProps, function (div, props) {\n      var key = props.key;\n\n      if (div && (!createdRef.current[key] || firstMount)) {\n        var noticeEle = /*#__PURE__*/React.createElement(Notice, _extends({}, props, {\n          holder: div\n        }));\n        createdRef.current[key] = noticeEle;\n        setElements(function (originElements) {\n          var index = originElements.findIndex(function (ele) {\n            return ele.key === props.key;\n          });\n\n          if (index === -1) {\n            return [].concat(_toConsumableArray(originElements), [noticeEle]);\n          }\n\n          var cloneList = _toConsumableArray(originElements);\n\n          cloneList[index] = noticeEle;\n          return cloneList;\n        });\n      }\n\n      firstMount = false;\n    });\n  }\n\n  return [notify, /*#__PURE__*/React.createElement(React.Fragment, null, elements)];\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-notification/es/useNotification.js"],"names":["_toConsumableArray","_extends","_slicedToArray","React","Notice","useNotification","notificationInstance","createdRef","useRef","_React$useState","useState","_React$useState2","elements","setElements","notify","noticeProps","firstMount","add","div","props","key","current","noticeEle","createElement","holder","originElements","index","findIndex","ele","concat","cloneList","Fragment"],"mappings":"AAAA,OAAOA,kBAAP,MAA+B,8CAA/B;AACA,OAAOC,QAAP,MAAqB,oCAArB;AACA,OAAOC,cAAP,MAA2B,0CAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,eAAe,SAASC,eAAT,CAAyBC,oBAAzB,EAA+C;AAC5D,MAAIC,UAAU,GAAGJ,KAAK,CAACK,MAAN,CAAa,EAAb,CAAjB;;AAEA,MAAIC,eAAe,GAAGN,KAAK,CAACO,QAAN,CAAe,EAAf,CAAtB;AAAA,MACIC,gBAAgB,GAAGT,cAAc,CAACO,eAAD,EAAkB,CAAlB,CADrC;AAAA,MAEIG,QAAQ,GAAGD,gBAAgB,CAAC,CAAD,CAF/B;AAAA,MAGIE,WAAW,GAAGF,gBAAgB,CAAC,CAAD,CAHlC;;AAKA,WAASG,MAAT,CAAgBC,WAAhB,EAA6B;AAC3B,QAAIC,UAAU,GAAG,IAAjB;AACAV,IAAAA,oBAAoB,CAACW,GAArB,CAAyBF,WAAzB,EAAsC,UAAUG,GAAV,EAAeC,KAAf,EAAsB;AAC1D,UAAIC,GAAG,GAAGD,KAAK,CAACC,GAAhB;;AAEA,UAAIF,GAAG,KAAK,CAACX,UAAU,CAACc,OAAX,CAAmBD,GAAnB,CAAD,IAA4BJ,UAAjC,CAAP,EAAqD;AACnD,YAAIM,SAAS,GAAG,aAAanB,KAAK,CAACoB,aAAN,CAAoBnB,MAApB,EAA4BH,QAAQ,CAAC,EAAD,EAAKkB,KAAL,EAAY;AAC3EK,UAAAA,MAAM,EAAEN;AADmE,SAAZ,CAApC,CAA7B;AAGAX,QAAAA,UAAU,CAACc,OAAX,CAAmBD,GAAnB,IAA0BE,SAA1B;AACAT,QAAAA,WAAW,CAAC,UAAUY,cAAV,EAA0B;AACpC,cAAIC,KAAK,GAAGD,cAAc,CAACE,SAAf,CAAyB,UAAUC,GAAV,EAAe;AAClD,mBAAOA,GAAG,CAACR,GAAJ,KAAYD,KAAK,CAACC,GAAzB;AACD,WAFW,CAAZ;;AAIA,cAAIM,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChB,mBAAO,GAAGG,MAAH,CAAU7B,kBAAkB,CAACyB,cAAD,CAA5B,EAA8C,CAACH,SAAD,CAA9C,CAAP;AACD;;AAED,cAAIQ,SAAS,GAAG9B,kBAAkB,CAACyB,cAAD,CAAlC;;AAEAK,UAAAA,SAAS,CAACJ,KAAD,CAAT,GAAmBJ,SAAnB;AACA,iBAAOQ,SAAP;AACD,SAbU,CAAX;AAcD;;AAEDd,MAAAA,UAAU,GAAG,KAAb;AACD,KAzBD;AA0BD;;AAED,SAAO,CAACF,MAAD,EAAS,aAAaX,KAAK,CAACoB,aAAN,CAAoBpB,KAAK,CAAC4B,QAA1B,EAAoC,IAApC,EAA0CnB,QAA1C,CAAtB,CAAP;AACD","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nimport Notice from './Notice';\nexport default function useNotification(notificationInstance) {\n  var createdRef = React.useRef({});\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      elements = _React$useState2[0],\n      setElements = _React$useState2[1];\n\n  function notify(noticeProps) {\n    var firstMount = true;\n    notificationInstance.add(noticeProps, function (div, props) {\n      var key = props.key;\n\n      if (div && (!createdRef.current[key] || firstMount)) {\n        var noticeEle = /*#__PURE__*/React.createElement(Notice, _extends({}, props, {\n          holder: div\n        }));\n        createdRef.current[key] = noticeEle;\n        setElements(function (originElements) {\n          var index = originElements.findIndex(function (ele) {\n            return ele.key === props.key;\n          });\n\n          if (index === -1) {\n            return [].concat(_toConsumableArray(originElements), [noticeEle]);\n          }\n\n          var cloneList = _toConsumableArray(originElements);\n\n          cloneList[index] = noticeEle;\n          return cloneList;\n        });\n      }\n\n      firstMount = false;\n    });\n  }\n\n  return [notify, /*#__PURE__*/React.createElement(React.Fragment, null, elements)];\n}"]},"metadata":{},"sourceType":"module"}