{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent } from \"rc-tree/es/util\";\nimport { convertDataToEntities, convertTreeToData } from \"rc-tree/es/utils/treeUtil\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport FolderOpenOutlined from \"@ant-design/icons/es/icons/FolderOpenOutlined\";\nimport FolderOutlined from \"@ant-design/icons/es/icons/FolderOutlined\";\nimport { ConfigContext } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, convertDirectoryKeysToNodes } from './utils/dictUtil';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return /*#__PURE__*/React.createElement(FileOutlined, null);\n  }\n\n  return expanded ? /*#__PURE__*/React.createElement(FolderOpenOutlined, null) : /*#__PURE__*/React.createElement(FolderOutlined, null);\n}\n\nfunction getTreeData(_ref) {\n  var treeData = _ref.treeData,\n      children = _ref.children;\n  return treeData || convertTreeToData(children);\n}\n\nvar DirectoryTree = function DirectoryTree(_a, ref) {\n  var defaultExpandAll = _a.defaultExpandAll,\n      defaultExpandParent = _a.defaultExpandParent,\n      defaultExpandedKeys = _a.defaultExpandedKeys,\n      props = __rest(_a, [\"defaultExpandAll\", \"defaultExpandParent\", \"defaultExpandedKeys\"]); // Shift click usage\n\n\n  var lastSelectedKey = React.useRef();\n  var cachedSelectedKeys = React.useRef();\n  var treeRef = /*#__PURE__*/React.createRef();\n  React.useImperativeHandle(ref, function () {\n    return treeRef.current;\n  });\n\n  var getInitExpandedKeys = function getInitExpandedKeys() {\n    var _convertDataToEntitie = convertDataToEntities(getTreeData(props)),\n        keyEntities = _convertDataToEntitie.keyEntities;\n\n    var initExpandedKeys; // Expanded keys\n\n    if (defaultExpandAll) {\n      initExpandedKeys = Object.keys(keyEntities);\n    } else if (defaultExpandParent) {\n      initExpandedKeys = conductExpandParent(props.expandedKeys || defaultExpandedKeys || [], keyEntities);\n    } else {\n      initExpandedKeys = props.expandedKeys || defaultExpandedKeys;\n    }\n\n    return initExpandedKeys;\n  };\n\n  var _React$useState = React.useState(props.selectedKeys || props.defaultSelectedKeys || []),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedKeys = _React$useState2[0],\n      setSelectedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(getInitExpandedKeys()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expandedKeys = _React$useState4[0],\n      setExpandedKeys = _React$useState4[1];\n\n  React.useEffect(function () {\n    if ('selectedKeys' in props) {\n      setSelectedKeys(props.selectedKeys);\n    }\n  }, [props.selectedKeys]);\n  React.useEffect(function () {\n    if ('expandedKeys' in props) {\n      setExpandedKeys(props.expandedKeys);\n    }\n  }, [props.expandedKeys]);\n\n  var expandFolderNode = function expandFolderNode(event, node) {\n    var isLeaf = node.isLeaf;\n\n    if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n      return;\n    } // Call internal rc-tree expand function\n    // https://github.com/ant-design/ant-design/issues/12567\n\n\n    treeRef.current.onNodeExpand(event, node);\n  };\n\n  var onDebounceExpand = debounce(expandFolderNode, 200, {\n    leading: true\n  });\n\n  var onExpand = function onExpand(keys, info) {\n    var _a;\n\n    if (!('expandedKeys' in props)) {\n      setExpandedKeys(keys);\n    } // Call origin function\n\n\n    return (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, info);\n  };\n\n  var onClick = function onClick(event, node) {\n    var _a;\n\n    var expandAction = props.expandAction; // Expand the tree\n\n    if (expandAction === 'click') {\n      onDebounceExpand(event, node);\n    }\n\n    (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, event, node);\n  };\n\n  var onDoubleClick = function onDoubleClick(event, node) {\n    var _a;\n\n    var expandAction = props.expandAction; // Expand the tree\n\n    if (expandAction === 'doubleClick') {\n      onDebounceExpand(event, node);\n    }\n\n    (_a = props.onDoubleClick) === null || _a === void 0 ? void 0 : _a.call(props, event, node);\n  };\n\n  var onSelect = function onSelect(keys, event) {\n    var _a;\n\n    var multiple = props.multiple;\n    var node = event.node,\n        nativeEvent = event.nativeEvent;\n    var _node$key = node.key,\n        key = _node$key === void 0 ? '' : _node$key;\n    var treeData = getTreeData(props); // const newState: DirectoryTreeState = {};\n    // We need wrap this event since some value is not same\n\n    var newEvent = _extends(_extends({}, event), {\n      selected: true\n    }); // Windows / Mac single pick\n\n\n    var ctrlPick = (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.ctrlKey) || (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.metaKey);\n    var shiftPick = nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.shiftKey; // Generate new selected keys\n\n    var newSelectedKeys;\n\n    if (multiple && ctrlPick) {\n      // Control click\n      newSelectedKeys = keys;\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else if (multiple && shiftPick) {\n      // Shift click\n      newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(cachedSelectedKeys.current || []), _toConsumableArray(calcRangeKeys({\n        treeData: treeData,\n        expandedKeys: expandedKeys,\n        startKey: key,\n        endKey: lastSelectedKey.current\n      })))));\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else {\n      // Single click\n      newSelectedKeys = [key];\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    }\n\n    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, newSelectedKeys, newEvent);\n\n    if (!('selectedKeys' in props)) {\n      setSelectedKeys(newSelectedKeys);\n    }\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      otherProps = __rest(props, [\"prefixCls\", \"className\"]);\n\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), _defineProperty({}, \"\".concat(prefixCls, \"-directory-rtl\"), direction === 'rtl'), className);\n  return /*#__PURE__*/React.createElement(Tree, _extends({\n    icon: getIcon,\n    ref: treeRef,\n    blockNode: true\n  }, otherProps, {\n    prefixCls: prefixCls,\n    className: connectClassName,\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    onSelect: onSelect,\n    onClick: onClick,\n    onDoubleClick: onDoubleClick,\n    onExpand: onExpand\n  }));\n};\n\nvar ForwardDirectoryTree = /*#__PURE__*/React.forwardRef(DirectoryTree);\nForwardDirectoryTree.displayName = 'DirectoryTree';\nForwardDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\nexport default ForwardDirectoryTree;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/tree/DirectoryTree.js"],"names":["_defineProperty","_toConsumableArray","_extends","_slicedToArray","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","React","classNames","debounce","conductExpandParent","convertDataToEntities","convertTreeToData","FileOutlined","FolderOpenOutlined","FolderOutlined","ConfigContext","Tree","calcRangeKeys","convertDirectoryKeysToNodes","getIcon","props","isLeaf","expanded","createElement","getTreeData","_ref","treeData","children","DirectoryTree","_a","ref","defaultExpandAll","defaultExpandParent","defaultExpandedKeys","lastSelectedKey","useRef","cachedSelectedKeys","treeRef","createRef","useImperativeHandle","current","getInitExpandedKeys","_convertDataToEntitie","keyEntities","initExpandedKeys","keys","expandedKeys","_React$useState","useState","selectedKeys","defaultSelectedKeys","_React$useState2","setSelectedKeys","_React$useState3","_React$useState4","setExpandedKeys","useEffect","expandFolderNode","event","node","shiftKey","metaKey","ctrlKey","onNodeExpand","onDebounceExpand","leading","onExpand","info","onClick","expandAction","onDoubleClick","onSelect","multiple","nativeEvent","_node$key","key","newEvent","selected","ctrlPick","shiftPick","newSelectedKeys","selectedNodes","Array","from","Set","concat","startKey","endKey","_React$useContext","useContext","getPrefixCls","direction","customizePrefixCls","prefixCls","className","otherProps","connectClassName","icon","blockNode","ForwardDirectoryTree","forwardRef","displayName","defaultProps","showIcon"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport debounce from 'lodash/debounce';\nimport { conductExpandParent } from \"rc-tree/es/util\";\nimport { convertDataToEntities, convertTreeToData } from \"rc-tree/es/utils/treeUtil\";\nimport FileOutlined from \"@ant-design/icons/es/icons/FileOutlined\";\nimport FolderOpenOutlined from \"@ant-design/icons/es/icons/FolderOpenOutlined\";\nimport FolderOutlined from \"@ant-design/icons/es/icons/FolderOutlined\";\nimport { ConfigContext } from '../config-provider';\nimport Tree from './Tree';\nimport { calcRangeKeys, convertDirectoryKeysToNodes } from './utils/dictUtil';\n\nfunction getIcon(props) {\n  var isLeaf = props.isLeaf,\n      expanded = props.expanded;\n\n  if (isLeaf) {\n    return /*#__PURE__*/React.createElement(FileOutlined, null);\n  }\n\n  return expanded ? /*#__PURE__*/React.createElement(FolderOpenOutlined, null) : /*#__PURE__*/React.createElement(FolderOutlined, null);\n}\n\nfunction getTreeData(_ref) {\n  var treeData = _ref.treeData,\n      children = _ref.children;\n  return treeData || convertTreeToData(children);\n}\n\nvar DirectoryTree = function DirectoryTree(_a, ref) {\n  var defaultExpandAll = _a.defaultExpandAll,\n      defaultExpandParent = _a.defaultExpandParent,\n      defaultExpandedKeys = _a.defaultExpandedKeys,\n      props = __rest(_a, [\"defaultExpandAll\", \"defaultExpandParent\", \"defaultExpandedKeys\"]); // Shift click usage\n\n\n  var lastSelectedKey = React.useRef();\n  var cachedSelectedKeys = React.useRef();\n  var treeRef = /*#__PURE__*/React.createRef();\n  React.useImperativeHandle(ref, function () {\n    return treeRef.current;\n  });\n\n  var getInitExpandedKeys = function getInitExpandedKeys() {\n    var _convertDataToEntitie = convertDataToEntities(getTreeData(props)),\n        keyEntities = _convertDataToEntitie.keyEntities;\n\n    var initExpandedKeys; // Expanded keys\n\n    if (defaultExpandAll) {\n      initExpandedKeys = Object.keys(keyEntities);\n    } else if (defaultExpandParent) {\n      initExpandedKeys = conductExpandParent(props.expandedKeys || defaultExpandedKeys || [], keyEntities);\n    } else {\n      initExpandedKeys = props.expandedKeys || defaultExpandedKeys;\n    }\n\n    return initExpandedKeys;\n  };\n\n  var _React$useState = React.useState(props.selectedKeys || props.defaultSelectedKeys || []),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      selectedKeys = _React$useState2[0],\n      setSelectedKeys = _React$useState2[1];\n\n  var _React$useState3 = React.useState(getInitExpandedKeys()),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      expandedKeys = _React$useState4[0],\n      setExpandedKeys = _React$useState4[1];\n\n  React.useEffect(function () {\n    if ('selectedKeys' in props) {\n      setSelectedKeys(props.selectedKeys);\n    }\n  }, [props.selectedKeys]);\n  React.useEffect(function () {\n    if ('expandedKeys' in props) {\n      setExpandedKeys(props.expandedKeys);\n    }\n  }, [props.expandedKeys]);\n\n  var expandFolderNode = function expandFolderNode(event, node) {\n    var isLeaf = node.isLeaf;\n\n    if (isLeaf || event.shiftKey || event.metaKey || event.ctrlKey) {\n      return;\n    } // Call internal rc-tree expand function\n    // https://github.com/ant-design/ant-design/issues/12567\n\n\n    treeRef.current.onNodeExpand(event, node);\n  };\n\n  var onDebounceExpand = debounce(expandFolderNode, 200, {\n    leading: true\n  });\n\n  var onExpand = function onExpand(keys, info) {\n    var _a;\n\n    if (!('expandedKeys' in props)) {\n      setExpandedKeys(keys);\n    } // Call origin function\n\n\n    return (_a = props.onExpand) === null || _a === void 0 ? void 0 : _a.call(props, keys, info);\n  };\n\n  var onClick = function onClick(event, node) {\n    var _a;\n\n    var expandAction = props.expandAction; // Expand the tree\n\n    if (expandAction === 'click') {\n      onDebounceExpand(event, node);\n    }\n\n    (_a = props.onClick) === null || _a === void 0 ? void 0 : _a.call(props, event, node);\n  };\n\n  var onDoubleClick = function onDoubleClick(event, node) {\n    var _a;\n\n    var expandAction = props.expandAction; // Expand the tree\n\n    if (expandAction === 'doubleClick') {\n      onDebounceExpand(event, node);\n    }\n\n    (_a = props.onDoubleClick) === null || _a === void 0 ? void 0 : _a.call(props, event, node);\n  };\n\n  var onSelect = function onSelect(keys, event) {\n    var _a;\n\n    var multiple = props.multiple;\n    var node = event.node,\n        nativeEvent = event.nativeEvent;\n    var _node$key = node.key,\n        key = _node$key === void 0 ? '' : _node$key;\n    var treeData = getTreeData(props); // const newState: DirectoryTreeState = {};\n    // We need wrap this event since some value is not same\n\n    var newEvent = _extends(_extends({}, event), {\n      selected: true\n    }); // Windows / Mac single pick\n\n\n    var ctrlPick = (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.ctrlKey) || (nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.metaKey);\n    var shiftPick = nativeEvent === null || nativeEvent === void 0 ? void 0 : nativeEvent.shiftKey; // Generate new selected keys\n\n    var newSelectedKeys;\n\n    if (multiple && ctrlPick) {\n      // Control click\n      newSelectedKeys = keys;\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else if (multiple && shiftPick) {\n      // Shift click\n      newSelectedKeys = Array.from(new Set([].concat(_toConsumableArray(cachedSelectedKeys.current || []), _toConsumableArray(calcRangeKeys({\n        treeData: treeData,\n        expandedKeys: expandedKeys,\n        startKey: key,\n        endKey: lastSelectedKey.current\n      })))));\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    } else {\n      // Single click\n      newSelectedKeys = [key];\n      lastSelectedKey.current = key;\n      cachedSelectedKeys.current = newSelectedKeys;\n      newEvent.selectedNodes = convertDirectoryKeysToNodes(treeData, newSelectedKeys);\n    }\n\n    (_a = props.onSelect) === null || _a === void 0 ? void 0 : _a.call(props, newSelectedKeys, newEvent);\n\n    if (!('selectedKeys' in props)) {\n      setSelectedKeys(newSelectedKeys);\n    }\n  };\n\n  var _React$useContext = React.useContext(ConfigContext),\n      getPrefixCls = _React$useContext.getPrefixCls,\n      direction = _React$useContext.direction;\n\n  var customizePrefixCls = props.prefixCls,\n      className = props.className,\n      otherProps = __rest(props, [\"prefixCls\", \"className\"]);\n\n  var prefixCls = getPrefixCls('tree', customizePrefixCls);\n  var connectClassName = classNames(\"\".concat(prefixCls, \"-directory\"), _defineProperty({}, \"\".concat(prefixCls, \"-directory-rtl\"), direction === 'rtl'), className);\n  return /*#__PURE__*/React.createElement(Tree, _extends({\n    icon: getIcon,\n    ref: treeRef,\n    blockNode: true\n  }, otherProps, {\n    prefixCls: prefixCls,\n    className: connectClassName,\n    expandedKeys: expandedKeys,\n    selectedKeys: selectedKeys,\n    onSelect: onSelect,\n    onClick: onClick,\n    onDoubleClick: onDoubleClick,\n    onExpand: onExpand\n  }));\n};\n\nvar ForwardDirectoryTree = /*#__PURE__*/React.forwardRef(DirectoryTree);\nForwardDirectoryTree.displayName = 'DirectoryTree';\nForwardDirectoryTree.defaultProps = {\n  showIcon: true,\n  expandAction: 'click'\n};\nexport default ForwardDirectoryTree;"]},"metadata":{},"sourceType":"module"}