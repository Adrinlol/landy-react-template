{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport ResponsiveObserve from '../../_util/responsiveObserve';\n\nfunction useBreakpoint() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      screens = _useState2[0],\n      setScreens = _useState2[1];\n\n  useEffect(function () {\n    var token = ResponsiveObserve.subscribe(function (supportScreens) {\n      setScreens(supportScreens);\n    });\n    return function () {\n      return ResponsiveObserve.unsubscribe(token);\n    };\n  }, []);\n  return screens;\n}\n\nexport default useBreakpoint;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/grid/hooks/useBreakpoint.js"],"names":["_slicedToArray","useEffect","useState","ResponsiveObserve","useBreakpoint","_useState","_useState2","screens","setScreens","token","subscribe","supportScreens","unsubscribe"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,0CAA3B;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;;AAEA,SAASC,aAAT,GAAyB;AACvB,MAAIC,SAAS,GAAGH,QAAQ,CAAC,EAAD,CAAxB;AAAA,MACII,UAAU,GAAGN,cAAc,CAACK,SAAD,EAAY,CAAZ,CAD/B;AAAA,MAEIE,OAAO,GAAGD,UAAU,CAAC,CAAD,CAFxB;AAAA,MAGIE,UAAU,GAAGF,UAAU,CAAC,CAAD,CAH3B;;AAKAL,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAIQ,KAAK,GAAGN,iBAAiB,CAACO,SAAlB,CAA4B,UAAUC,cAAV,EAA0B;AAChEH,MAAAA,UAAU,CAACG,cAAD,CAAV;AACD,KAFW,CAAZ;AAGA,WAAO,YAAY;AACjB,aAAOR,iBAAiB,CAACS,WAAlB,CAA8BH,KAA9B,CAAP;AACD,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AAQA,SAAOF,OAAP;AACD;;AAED,eAAeH,aAAf","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport { useEffect, useState } from 'react';\nimport ResponsiveObserve from '../../_util/responsiveObserve';\n\nfunction useBreakpoint() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      screens = _useState2[0],\n      setScreens = _useState2[1];\n\n  useEffect(function () {\n    var token = ResponsiveObserve.subscribe(function (supportScreens) {\n      setScreens(supportScreens);\n    });\n    return function () {\n      return ResponsiveObserve.unsubscribe(token);\n    };\n  }, []);\n  return screens;\n}\n\nexport default useBreakpoint;"]},"metadata":{},"sourceType":"module"}