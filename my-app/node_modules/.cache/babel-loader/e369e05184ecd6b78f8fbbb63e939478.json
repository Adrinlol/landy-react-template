{"ast":null,"code":"import * as React from 'react';\nexport default function useSelectTriggerControl(elements, open, triggerOpen) {\n  var propsRef = React.useRef(null);\n  propsRef.current = {\n    open: open,\n    triggerOpen: triggerOpen\n  };\n  React.useEffect(function () {\n    function onGlobalMouseDown(event) {\n      var target = event.target;\n\n      if (target.shadowRoot && event.composed) {\n        target = event.composedPath()[0] || target;\n      }\n\n      if (propsRef.current.open && elements().filter(function (element) {\n        return element;\n      }).every(function (element) {\n        return !element.contains(target) && element !== target;\n      })) {\n        // Should trigger close\n        propsRef.current.triggerOpen(false);\n      }\n    }\n\n    window.addEventListener('mousedown', onGlobalMouseDown);\n    return function () {\n      return window.removeEventListener('mousedown', onGlobalMouseDown);\n    };\n  }, []);\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-select/es/hooks/useSelectTriggerControl.js"],"names":["React","useSelectTriggerControl","elements","open","triggerOpen","propsRef","useRef","current","useEffect","onGlobalMouseDown","event","target","shadowRoot","composed","composedPath","filter","element","every","contains","window","addEventListener","removeEventListener"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,eAAe,SAASC,uBAAT,CAAiCC,QAAjC,EAA2CC,IAA3C,EAAiDC,WAAjD,EAA8D;AAC3E,MAAIC,QAAQ,GAAGL,KAAK,CAACM,MAAN,CAAa,IAAb,CAAf;AACAD,EAAAA,QAAQ,CAACE,OAAT,GAAmB;AACjBJ,IAAAA,IAAI,EAAEA,IADW;AAEjBC,IAAAA,WAAW,EAAEA;AAFI,GAAnB;AAIAJ,EAAAA,KAAK,CAACQ,SAAN,CAAgB,YAAY;AAC1B,aAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,UAAIC,MAAM,GAAGD,KAAK,CAACC,MAAnB;;AAEA,UAAIA,MAAM,CAACC,UAAP,IAAqBF,KAAK,CAACG,QAA/B,EAAyC;AACvCF,QAAAA,MAAM,GAAGD,KAAK,CAACI,YAAN,GAAqB,CAArB,KAA2BH,MAApC;AACD;;AAED,UAAIN,QAAQ,CAACE,OAAT,CAAiBJ,IAAjB,IAAyBD,QAAQ,GAAGa,MAAX,CAAkB,UAAUC,OAAV,EAAmB;AAChE,eAAOA,OAAP;AACD,OAF4B,EAE1BC,KAF0B,CAEpB,UAAUD,OAAV,EAAmB;AAC1B,eAAO,CAACA,OAAO,CAACE,QAAR,CAAiBP,MAAjB,CAAD,IAA6BK,OAAO,KAAKL,MAAhD;AACD,OAJ4B,CAA7B,EAII;AACF;AACAN,QAAAA,QAAQ,CAACE,OAAT,CAAiBH,WAAjB,CAA6B,KAA7B;AACD;AACF;;AAEDe,IAAAA,MAAM,CAACC,gBAAP,CAAwB,WAAxB,EAAqCX,iBAArC;AACA,WAAO,YAAY;AACjB,aAAOU,MAAM,CAACE,mBAAP,CAA2B,WAA3B,EAAwCZ,iBAAxC,CAAP;AACD,KAFD;AAGD,GAtBD,EAsBG,EAtBH;AAuBD","sourcesContent":["import * as React from 'react';\nexport default function useSelectTriggerControl(elements, open, triggerOpen) {\n  var propsRef = React.useRef(null);\n  propsRef.current = {\n    open: open,\n    triggerOpen: triggerOpen\n  };\n  React.useEffect(function () {\n    function onGlobalMouseDown(event) {\n      var target = event.target;\n\n      if (target.shadowRoot && event.composed) {\n        target = event.composedPath()[0] || target;\n      }\n\n      if (propsRef.current.open && elements().filter(function (element) {\n        return element;\n      }).every(function (element) {\n        return !element.contains(target) && element !== target;\n      })) {\n        // Should trigger close\n        propsRef.current.triggerOpen(false);\n      }\n    }\n\n    window.addEventListener('mousedown', onGlobalMouseDown);\n    return function () {\n      return window.removeEventListener('mousedown', onGlobalMouseDown);\n    };\n  }, []);\n}"]},"metadata":{},"sourceType":"module"}