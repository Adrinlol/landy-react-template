{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n/**\n * Removed props:\n *  - childrenProps\n */\n\nimport React from 'react';\nimport { composeRef } from \"rc-util/es/ref\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport { alignElement, alignPoint } from 'dom-align';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport isEqual from 'lodash/isEqual';\nimport { isSamePoint, restoreFocus, monitorResize } from './util';\nimport useBuffer from './hooks/useBuffer';\n\nfunction getElement(func) {\n  if (typeof func !== 'function') return null;\n  return func();\n}\n\nfunction getPoint(point) {\n  if (_typeof(point) !== 'object' || !point) return null;\n  return point;\n}\n\nvar Align = function Align(_ref, ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      target = _ref.target,\n      align = _ref.align,\n      onAlign = _ref.onAlign,\n      monitorWindowResize = _ref.monitorWindowResize,\n      _ref$monitorBufferTim = _ref.monitorBufferTime,\n      monitorBufferTime = _ref$monitorBufferTim === void 0 ? 0 : _ref$monitorBufferTim;\n  var cacheRef = React.useRef({});\n  var nodeRef = React.useRef();\n  var childNode = React.Children.only(children); // ===================== Align ======================\n  // We save the props here to avoid closure makes props ood\n\n  var forceAlignPropsRef = React.useRef({});\n  forceAlignPropsRef.current.disabled = disabled;\n  forceAlignPropsRef.current.target = target;\n  forceAlignPropsRef.current.align = align;\n  forceAlignPropsRef.current.onAlign = onAlign;\n\n  var _useBuffer = useBuffer(function () {\n    var _forceAlignPropsRef$c = forceAlignPropsRef.current,\n        latestDisabled = _forceAlignPropsRef$c.disabled,\n        latestTarget = _forceAlignPropsRef$c.target,\n        latestAlign = _forceAlignPropsRef$c.align,\n        latestOnAlign = _forceAlignPropsRef$c.onAlign;\n\n    if (!latestDisabled && latestTarget) {\n      var source = nodeRef.current;\n      var result;\n      var element = getElement(latestTarget);\n      var point = getPoint(latestTarget);\n      cacheRef.current.element = element;\n      cacheRef.current.point = point;\n      cacheRef.current.align = latestAlign; // IE lose focus after element realign\n      // We should record activeElement and restore later\n      // IE lose focus after element realign\n      // We should record activeElement and restore later\n\n      var _document = document,\n          activeElement = _document.activeElement; // We only align when element is visible\n      // We only align when element is visible\n\n      if (element && isVisible(element)) {\n        result = alignElement(source, element, latestAlign);\n      } else if (point) {\n        result = alignPoint(source, point, latestAlign);\n      }\n\n      restoreFocus(activeElement, source);\n\n      if (latestOnAlign && result) {\n        latestOnAlign(source, result);\n      }\n\n      return true;\n    }\n\n    return false;\n  }, monitorBufferTime),\n      _useBuffer2 = _slicedToArray(_useBuffer, 2),\n      _forceAlign = _useBuffer2[0],\n      cancelForceAlign = _useBuffer2[1]; // ===================== Effect =====================\n  // Listen for target updated\n\n\n  var resizeMonitor = React.useRef({\n    cancel: function cancel() {}\n  }); // Listen for source updated\n\n  var sourceResizeMonitor = React.useRef({\n    cancel: function cancel() {}\n  });\n  React.useEffect(function () {\n    var element = getElement(target);\n    var point = getPoint(target);\n\n    if (nodeRef.current !== sourceResizeMonitor.current.element) {\n      sourceResizeMonitor.current.cancel();\n      sourceResizeMonitor.current.element = nodeRef.current;\n      sourceResizeMonitor.current.cancel = monitorResize(nodeRef.current, _forceAlign);\n    }\n\n    if (cacheRef.current.element !== element || !isSamePoint(cacheRef.current.point, point) || !isEqual(cacheRef.current.align, align)) {\n      _forceAlign(); // Add resize observer\n\n\n      if (resizeMonitor.current.element !== element) {\n        resizeMonitor.current.cancel();\n        resizeMonitor.current.element = element;\n        resizeMonitor.current.cancel = monitorResize(element, _forceAlign);\n      }\n    }\n  }); // Listen for disabled change\n\n  React.useEffect(function () {\n    if (!disabled) {\n      _forceAlign();\n    } else {\n      cancelForceAlign();\n    }\n  }, [disabled]); // Listen for window resize\n\n  var winResizeRef = React.useRef(null);\n  React.useEffect(function () {\n    if (monitorWindowResize) {\n      if (!winResizeRef.current) {\n        winResizeRef.current = addEventListener(window, 'resize', _forceAlign);\n      }\n    } else if (winResizeRef.current) {\n      winResizeRef.current.remove();\n      winResizeRef.current = null;\n    }\n  }, [monitorWindowResize]); // Clear all if unmount\n\n  React.useEffect(function () {\n    return function () {\n      resizeMonitor.current.cancel();\n      sourceResizeMonitor.current.cancel();\n      if (winResizeRef.current) winResizeRef.current.remove();\n      cancelForceAlign();\n    };\n  }, []); // ====================== Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      forceAlign: function forceAlign() {\n        return _forceAlign(true);\n      }\n    };\n  }); // ===================== Render =====================\n\n  if ( /*#__PURE__*/React.isValidElement(childNode)) {\n    childNode = /*#__PURE__*/React.cloneElement(childNode, {\n      ref: composeRef(childNode.ref, nodeRef)\n    });\n  }\n\n  return childNode;\n};\n\nvar RcAlign = /*#__PURE__*/React.forwardRef(Align);\nRcAlign.displayName = 'Align';\nexport default RcAlign;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-align/es/Align.js"],"names":["_slicedToArray","_typeof","React","composeRef","isVisible","alignElement","alignPoint","addEventListener","isEqual","isSamePoint","restoreFocus","monitorResize","useBuffer","getElement","func","getPoint","point","Align","_ref","ref","children","disabled","target","align","onAlign","monitorWindowResize","_ref$monitorBufferTim","monitorBufferTime","cacheRef","useRef","nodeRef","childNode","Children","only","forceAlignPropsRef","current","_useBuffer","_forceAlignPropsRef$c","latestDisabled","latestTarget","latestAlign","latestOnAlign","source","result","element","_document","document","activeElement","_useBuffer2","_forceAlign","cancelForceAlign","resizeMonitor","cancel","sourceResizeMonitor","useEffect","winResizeRef","window","remove","useImperativeHandle","forceAlign","isValidElement","cloneElement","RcAlign","forwardRef","displayName"],"mappings":"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","sourcesContent":["import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _typeof from \"@babel/runtime/helpers/esm/typeof\";\n\n/**\n * Removed props:\n *  - childrenProps\n */\nimport React from 'react';\nimport { composeRef } from \"rc-util/es/ref\";\nimport isVisible from \"rc-util/es/Dom/isVisible\";\nimport { alignElement, alignPoint } from 'dom-align';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport isEqual from 'lodash/isEqual';\nimport { isSamePoint, restoreFocus, monitorResize } from './util';\nimport useBuffer from './hooks/useBuffer';\n\nfunction getElement(func) {\n  if (typeof func !== 'function') return null;\n  return func();\n}\n\nfunction getPoint(point) {\n  if (_typeof(point) !== 'object' || !point) return null;\n  return point;\n}\n\nvar Align = function Align(_ref, ref) {\n  var children = _ref.children,\n      disabled = _ref.disabled,\n      target = _ref.target,\n      align = _ref.align,\n      onAlign = _ref.onAlign,\n      monitorWindowResize = _ref.monitorWindowResize,\n      _ref$monitorBufferTim = _ref.monitorBufferTime,\n      monitorBufferTime = _ref$monitorBufferTim === void 0 ? 0 : _ref$monitorBufferTim;\n  var cacheRef = React.useRef({});\n  var nodeRef = React.useRef();\n  var childNode = React.Children.only(children); // ===================== Align ======================\n  // We save the props here to avoid closure makes props ood\n\n  var forceAlignPropsRef = React.useRef({});\n  forceAlignPropsRef.current.disabled = disabled;\n  forceAlignPropsRef.current.target = target;\n  forceAlignPropsRef.current.align = align;\n  forceAlignPropsRef.current.onAlign = onAlign;\n\n  var _useBuffer = useBuffer(function () {\n    var _forceAlignPropsRef$c = forceAlignPropsRef.current,\n        latestDisabled = _forceAlignPropsRef$c.disabled,\n        latestTarget = _forceAlignPropsRef$c.target,\n        latestAlign = _forceAlignPropsRef$c.align,\n        latestOnAlign = _forceAlignPropsRef$c.onAlign;\n\n    if (!latestDisabled && latestTarget) {\n      var source = nodeRef.current;\n      var result;\n      var element = getElement(latestTarget);\n      var point = getPoint(latestTarget);\n      cacheRef.current.element = element;\n      cacheRef.current.point = point;\n      cacheRef.current.align = latestAlign; // IE lose focus after element realign\n      // We should record activeElement and restore later\n\n      // IE lose focus after element realign\n      // We should record activeElement and restore later\n      var _document = document,\n          activeElement = _document.activeElement; // We only align when element is visible\n\n      // We only align when element is visible\n      if (element && isVisible(element)) {\n        result = alignElement(source, element, latestAlign);\n      } else if (point) {\n        result = alignPoint(source, point, latestAlign);\n      }\n\n      restoreFocus(activeElement, source);\n\n      if (latestOnAlign && result) {\n        latestOnAlign(source, result);\n      }\n\n      return true;\n    }\n\n    return false;\n  }, monitorBufferTime),\n      _useBuffer2 = _slicedToArray(_useBuffer, 2),\n      _forceAlign = _useBuffer2[0],\n      cancelForceAlign = _useBuffer2[1]; // ===================== Effect =====================\n  // Listen for target updated\n\n\n  var resizeMonitor = React.useRef({\n    cancel: function cancel() {}\n  }); // Listen for source updated\n\n  var sourceResizeMonitor = React.useRef({\n    cancel: function cancel() {}\n  });\n  React.useEffect(function () {\n    var element = getElement(target);\n    var point = getPoint(target);\n\n    if (nodeRef.current !== sourceResizeMonitor.current.element) {\n      sourceResizeMonitor.current.cancel();\n      sourceResizeMonitor.current.element = nodeRef.current;\n      sourceResizeMonitor.current.cancel = monitorResize(nodeRef.current, _forceAlign);\n    }\n\n    if (cacheRef.current.element !== element || !isSamePoint(cacheRef.current.point, point) || !isEqual(cacheRef.current.align, align)) {\n      _forceAlign(); // Add resize observer\n\n\n      if (resizeMonitor.current.element !== element) {\n        resizeMonitor.current.cancel();\n        resizeMonitor.current.element = element;\n        resizeMonitor.current.cancel = monitorResize(element, _forceAlign);\n      }\n    }\n  }); // Listen for disabled change\n\n  React.useEffect(function () {\n    if (!disabled) {\n      _forceAlign();\n    } else {\n      cancelForceAlign();\n    }\n  }, [disabled]); // Listen for window resize\n\n  var winResizeRef = React.useRef(null);\n  React.useEffect(function () {\n    if (monitorWindowResize) {\n      if (!winResizeRef.current) {\n        winResizeRef.current = addEventListener(window, 'resize', _forceAlign);\n      }\n    } else if (winResizeRef.current) {\n      winResizeRef.current.remove();\n      winResizeRef.current = null;\n    }\n  }, [monitorWindowResize]); // Clear all if unmount\n\n  React.useEffect(function () {\n    return function () {\n      resizeMonitor.current.cancel();\n      sourceResizeMonitor.current.cancel();\n      if (winResizeRef.current) winResizeRef.current.remove();\n      cancelForceAlign();\n    };\n  }, []); // ====================== Ref =======================\n\n  React.useImperativeHandle(ref, function () {\n    return {\n      forceAlign: function forceAlign() {\n        return _forceAlign(true);\n      }\n    };\n  }); // ===================== Render =====================\n\n  if ( /*#__PURE__*/React.isValidElement(childNode)) {\n    childNode = /*#__PURE__*/React.cloneElement(childNode, {\n      ref: composeRef(childNode.ref, nodeRef)\n    });\n  }\n\n  return childNode;\n};\n\nvar RcAlign = /*#__PURE__*/React.forwardRef(Align);\nRcAlign.displayName = 'Align';\nexport default RcAlign;"]},"metadata":{},"sourceType":"module"}