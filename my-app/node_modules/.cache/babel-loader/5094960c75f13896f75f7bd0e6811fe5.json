{"ast":null,"code":"/* global __react_refresh_library__ */\nconst safeThis = require('core-js-pure/features/global-this.js');\n\nconst RefreshRuntime = require('react-refresh/runtime.js');\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof safeThis !== 'undefined') {\n    var $RefreshInjected$ = '__reactRefreshInjected'; // Namespace the injected flag (if necessary) for monorepo compatibility\n\n    if (typeof __react_refresh_library__ !== 'undefined' && __react_refresh_library__) {\n      $RefreshInjected$ += '_' + __react_refresh_library__;\n    } // Only inject the runtime if it hasn't been injected\n\n\n    if (!safeThis[$RefreshInjected$]) {\n      // Inject refresh runtime into global scope\n      RefreshRuntime.injectIntoGlobalHook(safeThis); // Mark the runtime as injected to prevent double-injection\n\n      safeThis[$RefreshInjected$] = true;\n    }\n  }\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/@pmmmwh/react-refresh-webpack-plugin/client/ReactRefreshEntry.js"],"names":["safeThis","require","RefreshRuntime","process","env","NODE_ENV","$RefreshInjected$","__react_refresh_library__","injectIntoGlobalHook"],"mappings":"AAAA;AAEA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,sCAAD,CAAxB;;AACA,MAAMC,cAAc,GAAGD,OAAO,CAAC,0BAAD,CAA9B;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACzC,MAAI,OAAOL,QAAP,KAAoB,WAAxB,EAAqC;AACnC,QAAIM,iBAAiB,GAAG,wBAAxB,CADmC,CAEnC;;AACA,QAAI,OAAOC,yBAAP,KAAqC,WAArC,IAAoDA,yBAAxD,EAAmF;AACjFD,MAAAA,iBAAiB,IAAI,MAAMC,yBAA3B;AACD,KALkC,CAOnC;;;AACA,QAAI,CAACP,QAAQ,CAACM,iBAAD,CAAb,EAAkC;AAChC;AACAJ,MAAAA,cAAc,CAACM,oBAAf,CAAoCR,QAApC,EAFgC,CAIhC;;AACAA,MAAAA,QAAQ,CAACM,iBAAD,CAAR,GAA8B,IAA9B;AACD;AACF;AACF","sourcesContent":["/* global __react_refresh_library__ */\n\nconst safeThis = require('core-js-pure/features/global-this.js');\nconst RefreshRuntime = require('react-refresh/runtime.js');\n\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof safeThis !== 'undefined') {\n    var $RefreshInjected$ = '__reactRefreshInjected';\n    // Namespace the injected flag (if necessary) for monorepo compatibility\n    if (typeof __react_refresh_library__ !== 'undefined' && __react_refresh_library__) {\n      $RefreshInjected$ += '_' + __react_refresh_library__;\n    }\n\n    // Only inject the runtime if it hasn't been injected\n    if (!safeThis[$RefreshInjected$]) {\n      // Inject refresh runtime into global scope\n      RefreshRuntime.injectIntoGlobalHook(safeThis);\n\n      // Mark the runtime as injected to prevent double-injection\n      safeThis[$RefreshInjected$] = true;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}