{"ast":null,"code":"\"use strict\";\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\n\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/css-loader/dist/runtime/api.js"],"names":["module","exports","cssWithMappingToString","list","toString","map","item","content","needLayer","concat","length","join","i","modules","media","dedupe","supports","layer","undefined","alreadyImportedModules","k","id","_k","push"],"mappings":"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","sourcesContent":["\"use strict\";\n\n/*\n  MIT License http://www.opensource.org/licenses/mit-license.php\n  Author Tobias Koppers @sokra\n*/\nmodule.exports = function (cssWithMappingToString) {\n  var list = []; // return the list of modules as css string\n\n  list.toString = function toString() {\n    return this.map(function (item) {\n      var content = \"\";\n      var needLayer = typeof item[5] !== \"undefined\";\n\n      if (item[4]) {\n        content += \"@supports (\".concat(item[4], \") {\");\n      }\n\n      if (item[2]) {\n        content += \"@media \".concat(item[2], \" {\");\n      }\n\n      if (needLayer) {\n        content += \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\");\n      }\n\n      content += cssWithMappingToString(item);\n\n      if (needLayer) {\n        content += \"}\";\n      }\n\n      if (item[2]) {\n        content += \"}\";\n      }\n\n      if (item[4]) {\n        content += \"}\";\n      }\n\n      return content;\n    }).join(\"\");\n  }; // import a list of modules into the list\n\n\n  list.i = function i(modules, media, dedupe, supports, layer) {\n    if (typeof modules === \"string\") {\n      modules = [[null, modules, undefined]];\n    }\n\n    var alreadyImportedModules = {};\n\n    if (dedupe) {\n      for (var k = 0; k < this.length; k++) {\n        var id = this[k][0];\n\n        if (id != null) {\n          alreadyImportedModules[id] = true;\n        }\n      }\n    }\n\n    for (var _k = 0; _k < modules.length; _k++) {\n      var item = [].concat(modules[_k]);\n\n      if (dedupe && alreadyImportedModules[item[0]]) {\n        continue;\n      }\n\n      if (typeof layer !== \"undefined\") {\n        if (typeof item[5] === \"undefined\") {\n          item[5] = layer;\n        } else {\n          item[1] = \"@layer\".concat(item[5].length > 0 ? \" \".concat(item[5]) : \"\", \" {\").concat(item[1], \"}\");\n          item[5] = layer;\n        }\n      }\n\n      if (media) {\n        if (!item[2]) {\n          item[2] = media;\n        } else {\n          item[1] = \"@media \".concat(item[2], \" {\").concat(item[1], \"}\");\n          item[2] = media;\n        }\n      }\n\n      if (supports) {\n        if (!item[4]) {\n          item[4] = \"\".concat(supports);\n        } else {\n          item[1] = \"@supports (\".concat(item[4], \") {\").concat(item[1], \"}\");\n          item[4] = supports;\n        }\n      }\n\n      list.push(item);\n    }\n  };\n\n  return list;\n};"]},"metadata":{},"sourceType":"script"}