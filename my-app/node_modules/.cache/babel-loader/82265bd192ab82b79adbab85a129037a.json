{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport raf from \"rc-util/es/raf\";\nimport { getFocusNodeList } from \"rc-util/es/Dom/focus\";\nimport { getMenuId } from '../context/IdContext'; // destruct to reduce minify size\n\nvar LEFT = KeyCode.LEFT,\n    RIGHT = KeyCode.RIGHT,\n    UP = KeyCode.UP,\n    DOWN = KeyCode.DOWN,\n    ENTER = KeyCode.ENTER,\n    ESC = KeyCode.ESC,\n    HOME = KeyCode.HOME,\n    END = KeyCode.END;\nvar ArrowKeys = [UP, DOWN, LEFT, RIGHT];\n\nfunction getOffset(mode, isRootLevel, isRtl, which) {\n  var _inline, _horizontal, _vertical, _offsets$;\n\n  var prev = 'prev';\n  var next = 'next';\n  var children = 'children';\n  var parent = 'parent'; // Inline enter is special that we use unique operation\n\n  if (mode === 'inline' && which === ENTER) {\n    return {\n      inlineTrigger: true\n    };\n  }\n\n  var inline = (_inline = {}, _defineProperty(_inline, UP, prev), _defineProperty(_inline, DOWN, next), _inline);\n  var horizontal = (_horizontal = {}, _defineProperty(_horizontal, LEFT, isRtl ? next : prev), _defineProperty(_horizontal, RIGHT, isRtl ? prev : next), _defineProperty(_horizontal, DOWN, children), _defineProperty(_horizontal, ENTER, children), _horizontal);\n  var vertical = (_vertical = {}, _defineProperty(_vertical, UP, prev), _defineProperty(_vertical, DOWN, next), _defineProperty(_vertical, ENTER, children), _defineProperty(_vertical, ESC, parent), _defineProperty(_vertical, LEFT, isRtl ? children : parent), _defineProperty(_vertical, RIGHT, isRtl ? parent : children), _vertical);\n  var offsets = {\n    inline: inline,\n    horizontal: horizontal,\n    vertical: vertical,\n    inlineSub: inline,\n    horizontalSub: vertical,\n    verticalSub: vertical\n  };\n  var type = (_offsets$ = offsets[\"\".concat(mode).concat(isRootLevel ? '' : 'Sub')]) === null || _offsets$ === void 0 ? void 0 : _offsets$[which];\n\n  switch (type) {\n    case prev:\n      return {\n        offset: -1,\n        sibling: true\n      };\n\n    case next:\n      return {\n        offset: 1,\n        sibling: true\n      };\n\n    case parent:\n      return {\n        offset: -1,\n        sibling: false\n      };\n\n    case children:\n      return {\n        offset: 1,\n        sibling: false\n      };\n\n    default:\n      return null;\n  }\n}\n\nfunction findContainerUL(element) {\n  var current = element;\n\n  while (current) {\n    if (current.getAttribute('data-menu-list')) {\n      return current;\n    }\n\n    current = current.parentElement;\n  } // Normally should not reach this line\n\n  /* istanbul ignore next */\n\n\n  return null;\n}\n/**\n * Find focused element within element set provided\n */\n\n\nfunction getFocusElement(activeElement, elements) {\n  var current = activeElement || document.activeElement;\n\n  while (current) {\n    if (elements.has(current)) {\n      return current;\n    }\n\n    current = current.parentElement;\n  }\n\n  return null;\n}\n/**\n * Get focusable elements from the element set under provided container\n */\n\n\nfunction getFocusableElements(container, elements) {\n  var list = getFocusNodeList(container, true);\n  return list.filter(function (ele) {\n    return elements.has(ele);\n  });\n}\n\nfunction getNextFocusElement(parentQueryContainer, elements, focusMenuElement) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1; // Key on the menu item will not get validate parent container\n\n  if (!parentQueryContainer) {\n    return null;\n  } // List current level menu item elements\n\n\n  var sameLevelFocusableMenuElementList = getFocusableElements(parentQueryContainer, elements); // Find next focus index\n\n  var count = sameLevelFocusableMenuElementList.length;\n  var focusIndex = sameLevelFocusableMenuElementList.findIndex(function (ele) {\n    return focusMenuElement === ele;\n  });\n\n  if (offset < 0) {\n    if (focusIndex === -1) {\n      focusIndex = count - 1;\n    } else {\n      focusIndex -= 1;\n    }\n  } else if (offset > 0) {\n    focusIndex += 1;\n  }\n\n  focusIndex = (focusIndex + count) % count; // Focus menu item\n\n  return sameLevelFocusableMenuElementList[focusIndex];\n}\n\nexport default function useAccessibility(mode, activeKey, isRtl, id, containerRef, getKeys, getKeyPath, triggerActiveKey, triggerAccessibilityOpen, originOnKeyDown) {\n  var rafRef = React.useRef();\n  var activeRef = React.useRef();\n  activeRef.current = activeKey;\n\n  var cleanRaf = function cleanRaf() {\n    raf.cancel(rafRef.current);\n  };\n\n  React.useEffect(function () {\n    return function () {\n      cleanRaf();\n    };\n  }, []);\n  return function (e) {\n    var which = e.which;\n\n    if ([].concat(ArrowKeys, [ENTER, ESC, HOME, END]).includes(which)) {\n      // Convert key to elements\n      var elements;\n      var key2element;\n      var element2key; // >>> Wrap as function since we use raf for some case\n\n      var refreshElements = function refreshElements() {\n        elements = new Set();\n        key2element = new Map();\n        element2key = new Map();\n        var keys = getKeys();\n        keys.forEach(function (key) {\n          var element = document.querySelector(\"[data-menu-id='\".concat(getMenuId(id, key), \"']\"));\n\n          if (element) {\n            elements.add(element);\n            element2key.set(element, key);\n            key2element.set(key, element);\n          }\n        });\n        return elements;\n      };\n\n      refreshElements(); // First we should find current focused MenuItem/SubMenu element\n\n      var activeElement = key2element.get(activeKey);\n      var focusMenuElement = getFocusElement(activeElement, elements);\n      var focusMenuKey = element2key.get(focusMenuElement);\n      var offsetObj = getOffset(mode, getKeyPath(focusMenuKey, true).length === 1, isRtl, which); // Some mode do not have fully arrow operation like inline\n\n      if (!offsetObj && which !== HOME && which !== END) {\n        return;\n      } // Arrow prevent default to avoid page scroll\n\n\n      if (ArrowKeys.includes(which) || [HOME, END].includes(which)) {\n        e.preventDefault();\n      }\n\n      var tryFocus = function tryFocus(menuElement) {\n        if (menuElement) {\n          var focusTargetElement = menuElement; // Focus to link instead of menu item if possible\n\n          var link = menuElement.querySelector('a');\n\n          if (link === null || link === void 0 ? void 0 : link.getAttribute('href')) {\n            focusTargetElement = link;\n          }\n\n          var targetKey = element2key.get(menuElement);\n          triggerActiveKey(targetKey);\n          /**\n           * Do not `useEffect` here since `tryFocus` may trigger async\n           * which makes React sync update the `activeKey`\n           * that force render before `useRef` set the next activeKey\n           */\n\n          cleanRaf();\n          rafRef.current = raf(function () {\n            if (activeRef.current === targetKey) {\n              focusTargetElement.focus();\n            }\n          });\n        }\n      };\n\n      if ([HOME, END].includes(which) || offsetObj.sibling || !focusMenuElement) {\n        // ========================== Sibling ==========================\n        // Find walkable focus menu element container\n        var parentQueryContainer;\n\n        if (!focusMenuElement || mode === 'inline') {\n          parentQueryContainer = containerRef.current;\n        } else {\n          parentQueryContainer = findContainerUL(focusMenuElement);\n        } // Get next focus element\n\n\n        var targetElement;\n        var focusableElements = getFocusableElements(parentQueryContainer, elements);\n\n        if (which === HOME) {\n          targetElement = focusableElements[0];\n        } else if (which === END) {\n          targetElement = focusableElements[focusableElements.length - 1];\n        } else {\n          targetElement = getNextFocusElement(parentQueryContainer, elements, focusMenuElement, offsetObj.offset);\n        } // Focus menu item\n\n\n        tryFocus(targetElement); // ======================= InlineTrigger =======================\n      } else if (offsetObj.inlineTrigger) {\n        // Inline trigger no need switch to sub menu item\n        triggerAccessibilityOpen(focusMenuKey); // =========================== Level ===========================\n      } else if (offsetObj.offset > 0) {\n        triggerAccessibilityOpen(focusMenuKey, true);\n        cleanRaf();\n        rafRef.current = raf(function () {\n          // Async should resync elements\n          refreshElements();\n          var controlId = focusMenuElement.getAttribute('aria-controls');\n          var subQueryContainer = document.getElementById(controlId); // Get sub focusable menu item\n\n          var targetElement = getNextFocusElement(subQueryContainer, elements); // Focus menu item\n\n          tryFocus(targetElement);\n        }, 5);\n      } else if (offsetObj.offset < 0) {\n        var keyPath = getKeyPath(focusMenuKey, true);\n        var parentKey = keyPath[keyPath.length - 2];\n        var parentMenuElement = key2element.get(parentKey); // Focus menu item\n\n        triggerAccessibilityOpen(parentKey, false);\n        tryFocus(parentMenuElement);\n      }\n    } // Pass origin key down event\n\n\n    originOnKeyDown === null || originOnKeyDown === void 0 ? void 0 : originOnKeyDown(e);\n  };\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-menu/es/hooks/useAccessibility.js"],"names":["_defineProperty","React","KeyCode","raf","getFocusNodeList","getMenuId","LEFT","RIGHT","UP","DOWN","ENTER","ESC","HOME","END","ArrowKeys","getOffset","mode","isRootLevel","isRtl","which","_inline","_horizontal","_vertical","_offsets$","prev","next","children","parent","inlineTrigger","inline","horizontal","vertical","offsets","inlineSub","horizontalSub","verticalSub","type","concat","offset","sibling","findContainerUL","element","current","getAttribute","parentElement","getFocusElement","activeElement","elements","document","has","getFocusableElements","container","list","filter","ele","getNextFocusElement","parentQueryContainer","focusMenuElement","arguments","length","undefined","sameLevelFocusableMenuElementList","count","focusIndex","findIndex","useAccessibility","activeKey","id","containerRef","getKeys","getKeyPath","triggerActiveKey","triggerAccessibilityOpen","originOnKeyDown","rafRef","useRef","activeRef","cleanRaf","cancel","useEffect","e","includes","key2element","element2key","refreshElements","Set","Map","keys","forEach","key","querySelector","add","set","get","focusMenuKey","offsetObj","preventDefault","tryFocus","menuElement","focusTargetElement","link","targetKey","focus","targetElement","focusableElements","controlId","subQueryContainer","getElementById","keyPath","parentKey","parentMenuElement"],"mappings":"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","sourcesContent":["import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport KeyCode from \"rc-util/es/KeyCode\";\nimport raf from \"rc-util/es/raf\";\nimport { getFocusNodeList } from \"rc-util/es/Dom/focus\";\nimport { getMenuId } from '../context/IdContext'; // destruct to reduce minify size\n\nvar LEFT = KeyCode.LEFT,\n    RIGHT = KeyCode.RIGHT,\n    UP = KeyCode.UP,\n    DOWN = KeyCode.DOWN,\n    ENTER = KeyCode.ENTER,\n    ESC = KeyCode.ESC,\n    HOME = KeyCode.HOME,\n    END = KeyCode.END;\nvar ArrowKeys = [UP, DOWN, LEFT, RIGHT];\n\nfunction getOffset(mode, isRootLevel, isRtl, which) {\n  var _inline, _horizontal, _vertical, _offsets$;\n\n  var prev = 'prev';\n  var next = 'next';\n  var children = 'children';\n  var parent = 'parent'; // Inline enter is special that we use unique operation\n\n  if (mode === 'inline' && which === ENTER) {\n    return {\n      inlineTrigger: true\n    };\n  }\n\n  var inline = (_inline = {}, _defineProperty(_inline, UP, prev), _defineProperty(_inline, DOWN, next), _inline);\n  var horizontal = (_horizontal = {}, _defineProperty(_horizontal, LEFT, isRtl ? next : prev), _defineProperty(_horizontal, RIGHT, isRtl ? prev : next), _defineProperty(_horizontal, DOWN, children), _defineProperty(_horizontal, ENTER, children), _horizontal);\n  var vertical = (_vertical = {}, _defineProperty(_vertical, UP, prev), _defineProperty(_vertical, DOWN, next), _defineProperty(_vertical, ENTER, children), _defineProperty(_vertical, ESC, parent), _defineProperty(_vertical, LEFT, isRtl ? children : parent), _defineProperty(_vertical, RIGHT, isRtl ? parent : children), _vertical);\n  var offsets = {\n    inline: inline,\n    horizontal: horizontal,\n    vertical: vertical,\n    inlineSub: inline,\n    horizontalSub: vertical,\n    verticalSub: vertical\n  };\n  var type = (_offsets$ = offsets[\"\".concat(mode).concat(isRootLevel ? '' : 'Sub')]) === null || _offsets$ === void 0 ? void 0 : _offsets$[which];\n\n  switch (type) {\n    case prev:\n      return {\n        offset: -1,\n        sibling: true\n      };\n\n    case next:\n      return {\n        offset: 1,\n        sibling: true\n      };\n\n    case parent:\n      return {\n        offset: -1,\n        sibling: false\n      };\n\n    case children:\n      return {\n        offset: 1,\n        sibling: false\n      };\n\n    default:\n      return null;\n  }\n}\n\nfunction findContainerUL(element) {\n  var current = element;\n\n  while (current) {\n    if (current.getAttribute('data-menu-list')) {\n      return current;\n    }\n\n    current = current.parentElement;\n  } // Normally should not reach this line\n\n  /* istanbul ignore next */\n\n\n  return null;\n}\n/**\n * Find focused element within element set provided\n */\n\n\nfunction getFocusElement(activeElement, elements) {\n  var current = activeElement || document.activeElement;\n\n  while (current) {\n    if (elements.has(current)) {\n      return current;\n    }\n\n    current = current.parentElement;\n  }\n\n  return null;\n}\n/**\n * Get focusable elements from the element set under provided container\n */\n\n\nfunction getFocusableElements(container, elements) {\n  var list = getFocusNodeList(container, true);\n  return list.filter(function (ele) {\n    return elements.has(ele);\n  });\n}\n\nfunction getNextFocusElement(parentQueryContainer, elements, focusMenuElement) {\n  var offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n\n  // Key on the menu item will not get validate parent container\n  if (!parentQueryContainer) {\n    return null;\n  } // List current level menu item elements\n\n\n  var sameLevelFocusableMenuElementList = getFocusableElements(parentQueryContainer, elements); // Find next focus index\n\n  var count = sameLevelFocusableMenuElementList.length;\n  var focusIndex = sameLevelFocusableMenuElementList.findIndex(function (ele) {\n    return focusMenuElement === ele;\n  });\n\n  if (offset < 0) {\n    if (focusIndex === -1) {\n      focusIndex = count - 1;\n    } else {\n      focusIndex -= 1;\n    }\n  } else if (offset > 0) {\n    focusIndex += 1;\n  }\n\n  focusIndex = (focusIndex + count) % count; // Focus menu item\n\n  return sameLevelFocusableMenuElementList[focusIndex];\n}\n\nexport default function useAccessibility(mode, activeKey, isRtl, id, containerRef, getKeys, getKeyPath, triggerActiveKey, triggerAccessibilityOpen, originOnKeyDown) {\n  var rafRef = React.useRef();\n  var activeRef = React.useRef();\n  activeRef.current = activeKey;\n\n  var cleanRaf = function cleanRaf() {\n    raf.cancel(rafRef.current);\n  };\n\n  React.useEffect(function () {\n    return function () {\n      cleanRaf();\n    };\n  }, []);\n  return function (e) {\n    var which = e.which;\n\n    if ([].concat(ArrowKeys, [ENTER, ESC, HOME, END]).includes(which)) {\n      // Convert key to elements\n      var elements;\n      var key2element;\n      var element2key; // >>> Wrap as function since we use raf for some case\n\n      var refreshElements = function refreshElements() {\n        elements = new Set();\n        key2element = new Map();\n        element2key = new Map();\n        var keys = getKeys();\n        keys.forEach(function (key) {\n          var element = document.querySelector(\"[data-menu-id='\".concat(getMenuId(id, key), \"']\"));\n\n          if (element) {\n            elements.add(element);\n            element2key.set(element, key);\n            key2element.set(key, element);\n          }\n        });\n        return elements;\n      };\n\n      refreshElements(); // First we should find current focused MenuItem/SubMenu element\n\n      var activeElement = key2element.get(activeKey);\n      var focusMenuElement = getFocusElement(activeElement, elements);\n      var focusMenuKey = element2key.get(focusMenuElement);\n      var offsetObj = getOffset(mode, getKeyPath(focusMenuKey, true).length === 1, isRtl, which); // Some mode do not have fully arrow operation like inline\n\n      if (!offsetObj && which !== HOME && which !== END) {\n        return;\n      } // Arrow prevent default to avoid page scroll\n\n\n      if (ArrowKeys.includes(which) || [HOME, END].includes(which)) {\n        e.preventDefault();\n      }\n\n      var tryFocus = function tryFocus(menuElement) {\n        if (menuElement) {\n          var focusTargetElement = menuElement; // Focus to link instead of menu item if possible\n\n          var link = menuElement.querySelector('a');\n\n          if (link === null || link === void 0 ? void 0 : link.getAttribute('href')) {\n            focusTargetElement = link;\n          }\n\n          var targetKey = element2key.get(menuElement);\n          triggerActiveKey(targetKey);\n          /**\n           * Do not `useEffect` here since `tryFocus` may trigger async\n           * which makes React sync update the `activeKey`\n           * that force render before `useRef` set the next activeKey\n           */\n\n          cleanRaf();\n          rafRef.current = raf(function () {\n            if (activeRef.current === targetKey) {\n              focusTargetElement.focus();\n            }\n          });\n        }\n      };\n\n      if ([HOME, END].includes(which) || offsetObj.sibling || !focusMenuElement) {\n        // ========================== Sibling ==========================\n        // Find walkable focus menu element container\n        var parentQueryContainer;\n\n        if (!focusMenuElement || mode === 'inline') {\n          parentQueryContainer = containerRef.current;\n        } else {\n          parentQueryContainer = findContainerUL(focusMenuElement);\n        } // Get next focus element\n\n\n        var targetElement;\n        var focusableElements = getFocusableElements(parentQueryContainer, elements);\n\n        if (which === HOME) {\n          targetElement = focusableElements[0];\n        } else if (which === END) {\n          targetElement = focusableElements[focusableElements.length - 1];\n        } else {\n          targetElement = getNextFocusElement(parentQueryContainer, elements, focusMenuElement, offsetObj.offset);\n        } // Focus menu item\n\n\n        tryFocus(targetElement); // ======================= InlineTrigger =======================\n      } else if (offsetObj.inlineTrigger) {\n        // Inline trigger no need switch to sub menu item\n        triggerAccessibilityOpen(focusMenuKey); // =========================== Level ===========================\n      } else if (offsetObj.offset > 0) {\n        triggerAccessibilityOpen(focusMenuKey, true);\n        cleanRaf();\n        rafRef.current = raf(function () {\n          // Async should resync elements\n          refreshElements();\n          var controlId = focusMenuElement.getAttribute('aria-controls');\n          var subQueryContainer = document.getElementById(controlId); // Get sub focusable menu item\n\n          var targetElement = getNextFocusElement(subQueryContainer, elements); // Focus menu item\n\n          tryFocus(targetElement);\n        }, 5);\n      } else if (offsetObj.offset < 0) {\n        var keyPath = getKeyPath(focusMenuKey, true);\n        var parentKey = keyPath[keyPath.length - 2];\n        var parentMenuElement = key2element.get(parentKey); // Focus menu item\n\n        triggerAccessibilityOpen(parentKey, false);\n        tryFocus(parentMenuElement);\n      }\n    } // Pass origin key down event\n\n\n    originOnKeyDown === null || originOnKeyDown === void 0 ? void 0 : originOnKeyDown(e);\n  };\n}"]},"metadata":{},"sourceType":"module"}