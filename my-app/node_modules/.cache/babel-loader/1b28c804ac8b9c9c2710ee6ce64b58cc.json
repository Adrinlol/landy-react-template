{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport RawAsyncValidator from 'async-validator';\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { defaultValidateMessages } from './messages';\nimport { setValues } from './valueUtil'; // Remove incorrect original ts define\n\nvar AsyncValidator = RawAsyncValidator;\n/**\n * Replace with template.\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\n */\n\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\n    var key = str.slice(2, -1);\n    return kv[key];\n  });\n}\n\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\n/**\n * We use `async-validator` to validate the value.\n * But only check one value in a time to avoid namePath validate issue.\n */\n\n\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, value, rule, options, messageVariables) {\n    var cloneRule, subRuleField, validator, messages, result, subResults, kv, fillVariableResult;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cloneRule = _objectSpread({}, rule); // Bug of `async-validator`\n            // https://github.com/react-component/field-form/issues/316\n            // https://github.com/react-component/field-form/issues/313\n\n            delete cloneRule.ruleIndex; // We should special handle array validate\n\n            subRuleField = null;\n\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\n            messages = setValues({}, defaultValidateMessages, options.validateMessages);\n            validator.messages(messages);\n            result = [];\n            _context2.prev = 8;\n            _context2.next = 11;\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\n\n          case 11:\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](8);\n\n            if (_context2.t0.errors) {\n              result = _context2.t0.errors.map(function (_ref4, index) {\n                var message = _ref4.message;\n                return (// Wrap ReactNode with `key`\n\n                  /*#__PURE__*/\n                  React.isValidElement(message) ? /*#__PURE__*/React.cloneElement(message, {\n                    key: \"error_\".concat(index)\n                  }) : message\n                );\n              });\n            } else {\n              console.error(_context2.t0);\n              result = [messages.default];\n            }\n\n          case 16:\n            if (!(!result.length && subRuleField)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 19;\n            return Promise.all(value.map(function (subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n\n          case 19:\n            subResults = _context2.sent;\n            return _context2.abrupt(\"return\", subResults.reduce(function (prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n\n          case 21:\n            // Replace message with variables\n            kv = _objectSpread(_objectSpread({}, rule), {}, {\n              name: name,\n              enum: (rule.enum || []).join(', ')\n            }, messageVariables);\n            fillVariableResult = result.map(function (error) {\n              if (typeof error === 'string') {\n                return replaceMessage(error, kv);\n              }\n\n              return error;\n            });\n            return _context2.abrupt(\"return\", fillVariableResult);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 13]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\n\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\n  var name = namePath.join('.'); // Fill rule with context\n\n  var filledRules = rules.map(function (currentRule, ruleIndex) {\n    var originValidatorFunc = currentRule.validator;\n\n    var cloneRule = _objectSpread(_objectSpread({}, currentRule), {}, {\n      ruleIndex: ruleIndex\n    }); // Replace validator if needed\n\n\n    if (originValidatorFunc) {\n      cloneRule.validator = function (rule, val, callback) {\n        var hasPromise = false; // Wrap callback only accept when promise not provided\n\n        var wrappedCallback = function wrappedCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          } // Wait a tick to make sure return type is a promise\n\n\n          Promise.resolve().then(function () {\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\n\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        }; // Get promise\n\n\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n        /**\n         * 1. Use promise as the first priority.\n         * 2. If promise not exist, use callback with warning instead\n         */\n\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\n\n        if (hasPromise) {\n          promise.then(function () {\n            callback();\n          }).catch(function (err) {\n            callback(err || ' ');\n          });\n        }\n      };\n    }\n\n    return cloneRule;\n  }).sort(function (_ref, _ref2) {\n    var w1 = _ref.warningOnly,\n        i1 = _ref.ruleIndex;\n    var w2 = _ref2.warningOnly,\n        i2 = _ref2.ruleIndex;\n\n    if (!!w1 === !!w2) {\n      // Let keep origin order\n      return i1 - i2;\n    }\n\n    if (w1) {\n      return 1;\n    }\n\n    return -1;\n  }); // Do validate rules\n\n  var summaryPromise;\n\n  if (validateFirst === true) {\n    // >>>>> Validate by serialization\n    summaryPromise = new Promise( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var i, rule, errors;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < filledRules.length)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                rule = filledRules[i];\n                _context.next = 5;\n                return validateRule(name, value, rule, options, messageVariables);\n\n              case 5:\n                errors = _context.sent;\n\n                if (!errors.length) {\n                  _context.next = 9;\n                  break;\n                }\n\n                reject([{\n                  errors: errors,\n                  rule: rule\n                }]);\n                return _context.abrupt(\"return\");\n\n              case 9:\n                i += 1;\n                _context.next = 1;\n                break;\n\n              case 12:\n                /* eslint-enable */\n                resolve([]);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } else {\n    // >>>>> Validate by parallel\n    var rulePromises = filledRules.map(function (rule) {\n      return validateRule(name, value, rule, options, messageVariables).then(function (errors) {\n        return {\n          errors: errors,\n          rule: rule\n        };\n      });\n    });\n    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\n      // Always change to rejection for Field to catch\n      return Promise.reject(errors);\n    });\n  } // Internal catch error to avoid console error log.\n\n\n  summaryPromise.catch(function (e) {\n    return e;\n  });\n  return summaryPromise;\n}\n\nfunction finishOnAllFailed(_x8) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rulePromises) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\n              var _ref5;\n\n              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));\n\n              return errors;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction finishOnFirstFailed(_x9) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\n\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(rulePromises) {\n    var count;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            count = 0;\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              rulePromises.forEach(function (promise) {\n                promise.then(function (ruleError) {\n                  if (ruleError.errors.length) {\n                    resolve([ruleError]);\n                  }\n\n                  count += 1;\n\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-field-form/es/utils/validateUtil.js"],"names":["_toConsumableArray","_defineProperty","_regeneratorRuntime","_objectSpread","_asyncToGenerator","RawAsyncValidator","React","warning","defaultValidateMessages","setValues","AsyncValidator","replaceMessage","template","kv","replace","str","key","slice","validateRule","_x","_x2","_x3","_x4","_x5","_validateRule","apply","arguments","mark","_callee2","name","value","rule","options","messageVariables","cloneRule","subRuleField","validator","messages","result","subResults","fillVariableResult","wrap","_callee2$","_context2","prev","next","ruleIndex","type","defaultField","validateMessages","Promise","resolve","validate","t0","errors","map","_ref4","index","message","isValidElement","cloneElement","concat","console","error","default","length","all","subValue","i","sent","abrupt","reduce","enum","join","stop","validateRules","namePath","rules","validateFirst","filledRules","currentRule","originValidatorFunc","val","callback","hasPromise","wrappedCallback","_len","args","Array","_key","then","promise","catch","err","sort","_ref","_ref2","w1","warningOnly","i1","w2","i2","summaryPromise","_ref3","_callee","reject","_callee$","_context","_x6","_x7","rulePromises","finishOnFirstFailed","finishOnAllFailed","e","_x8","_finishOnAllFailed","_callee3","_callee3$","_context3","errorsList","_ref5","_x9","_finishOnFirstFailed","_callee4","count","_callee4$","_context4","forEach","ruleError"],"mappings":"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","sourcesContent":["import _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport RawAsyncValidator from 'async-validator';\nimport * as React from 'react';\nimport warning from \"rc-util/es/warning\";\nimport { defaultValidateMessages } from './messages';\nimport { setValues } from './valueUtil'; // Remove incorrect original ts define\n\nvar AsyncValidator = RawAsyncValidator;\n/**\n * Replace with template.\n *   `I'm ${name}` + { name: 'bamboo' } = I'm bamboo\n */\n\nfunction replaceMessage(template, kv) {\n  return template.replace(/\\$\\{\\w+\\}/g, function (str) {\n    var key = str.slice(2, -1);\n    return kv[key];\n  });\n}\n\nfunction validateRule(_x, _x2, _x3, _x4, _x5) {\n  return _validateRule.apply(this, arguments);\n}\n/**\n * We use `async-validator` to validate the value.\n * But only check one value in a time to avoid namePath validate issue.\n */\n\n\nfunction _validateRule() {\n  _validateRule = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(name, value, rule, options, messageVariables) {\n    var cloneRule, subRuleField, validator, messages, result, subResults, kv, fillVariableResult;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            cloneRule = _objectSpread({}, rule); // Bug of `async-validator`\n            // https://github.com/react-component/field-form/issues/316\n            // https://github.com/react-component/field-form/issues/313\n\n            delete cloneRule.ruleIndex; // We should special handle array validate\n\n            subRuleField = null;\n\n            if (cloneRule && cloneRule.type === 'array' && cloneRule.defaultField) {\n              subRuleField = cloneRule.defaultField;\n              delete cloneRule.defaultField;\n            }\n\n            validator = new AsyncValidator(_defineProperty({}, name, [cloneRule]));\n            messages = setValues({}, defaultValidateMessages, options.validateMessages);\n            validator.messages(messages);\n            result = [];\n            _context2.prev = 8;\n            _context2.next = 11;\n            return Promise.resolve(validator.validate(_defineProperty({}, name, value), _objectSpread({}, options)));\n\n          case 11:\n            _context2.next = 16;\n            break;\n\n          case 13:\n            _context2.prev = 13;\n            _context2.t0 = _context2[\"catch\"](8);\n\n            if (_context2.t0.errors) {\n              result = _context2.t0.errors.map(function (_ref4, index) {\n                var message = _ref4.message;\n                return (// Wrap ReactNode with `key`\n\n                  /*#__PURE__*/\n                  React.isValidElement(message) ? /*#__PURE__*/React.cloneElement(message, {\n                    key: \"error_\".concat(index)\n                  }) : message\n                );\n              });\n            } else {\n              console.error(_context2.t0);\n              result = [messages.default];\n            }\n\n          case 16:\n            if (!(!result.length && subRuleField)) {\n              _context2.next = 21;\n              break;\n            }\n\n            _context2.next = 19;\n            return Promise.all(value.map(function (subValue, i) {\n              return validateRule(\"\".concat(name, \".\").concat(i), subValue, subRuleField, options, messageVariables);\n            }));\n\n          case 19:\n            subResults = _context2.sent;\n            return _context2.abrupt(\"return\", subResults.reduce(function (prev, errors) {\n              return [].concat(_toConsumableArray(prev), _toConsumableArray(errors));\n            }, []));\n\n          case 21:\n            // Replace message with variables\n            kv = _objectSpread(_objectSpread({}, rule), {}, {\n              name: name,\n              enum: (rule.enum || []).join(', ')\n            }, messageVariables);\n            fillVariableResult = result.map(function (error) {\n              if (typeof error === 'string') {\n                return replaceMessage(error, kv);\n              }\n\n              return error;\n            });\n            return _context2.abrupt(\"return\", fillVariableResult);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[8, 13]]);\n  }));\n  return _validateRule.apply(this, arguments);\n}\n\nexport function validateRules(namePath, value, rules, options, validateFirst, messageVariables) {\n  var name = namePath.join('.'); // Fill rule with context\n\n  var filledRules = rules.map(function (currentRule, ruleIndex) {\n    var originValidatorFunc = currentRule.validator;\n\n    var cloneRule = _objectSpread(_objectSpread({}, currentRule), {}, {\n      ruleIndex: ruleIndex\n    }); // Replace validator if needed\n\n\n    if (originValidatorFunc) {\n      cloneRule.validator = function (rule, val, callback) {\n        var hasPromise = false; // Wrap callback only accept when promise not provided\n\n        var wrappedCallback = function wrappedCallback() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n\n          // Wait a tick to make sure return type is a promise\n          Promise.resolve().then(function () {\n            warning(!hasPromise, 'Your validator function has already return a promise. `callback` will be ignored.');\n\n            if (!hasPromise) {\n              callback.apply(void 0, args);\n            }\n          });\n        }; // Get promise\n\n\n        var promise = originValidatorFunc(rule, val, wrappedCallback);\n        hasPromise = promise && typeof promise.then === 'function' && typeof promise.catch === 'function';\n        /**\n         * 1. Use promise as the first priority.\n         * 2. If promise not exist, use callback with warning instead\n         */\n\n        warning(hasPromise, '`callback` is deprecated. Please return a promise instead.');\n\n        if (hasPromise) {\n          promise.then(function () {\n            callback();\n          }).catch(function (err) {\n            callback(err || ' ');\n          });\n        }\n      };\n    }\n\n    return cloneRule;\n  }).sort(function (_ref, _ref2) {\n    var w1 = _ref.warningOnly,\n        i1 = _ref.ruleIndex;\n    var w2 = _ref2.warningOnly,\n        i2 = _ref2.ruleIndex;\n\n    if (!!w1 === !!w2) {\n      // Let keep origin order\n      return i1 - i2;\n    }\n\n    if (w1) {\n      return 1;\n    }\n\n    return -1;\n  }); // Do validate rules\n\n  var summaryPromise;\n\n  if (validateFirst === true) {\n    // >>>>> Validate by serialization\n    summaryPromise = new Promise( /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(resolve, reject) {\n        var i, rule, errors;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                i = 0;\n\n              case 1:\n                if (!(i < filledRules.length)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                rule = filledRules[i];\n                _context.next = 5;\n                return validateRule(name, value, rule, options, messageVariables);\n\n              case 5:\n                errors = _context.sent;\n\n                if (!errors.length) {\n                  _context.next = 9;\n                  break;\n                }\n\n                reject([{\n                  errors: errors,\n                  rule: rule\n                }]);\n                return _context.abrupt(\"return\");\n\n              case 9:\n                i += 1;\n                _context.next = 1;\n                break;\n\n              case 12:\n                /* eslint-enable */\n                resolve([]);\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x6, _x7) {\n        return _ref3.apply(this, arguments);\n      };\n    }());\n  } else {\n    // >>>>> Validate by parallel\n    var rulePromises = filledRules.map(function (rule) {\n      return validateRule(name, value, rule, options, messageVariables).then(function (errors) {\n        return {\n          errors: errors,\n          rule: rule\n        };\n      });\n    });\n    summaryPromise = (validateFirst ? finishOnFirstFailed(rulePromises) : finishOnAllFailed(rulePromises)).then(function (errors) {\n      // Always change to rejection for Field to catch\n      return Promise.reject(errors);\n    });\n  } // Internal catch error to avoid console error log.\n\n\n  summaryPromise.catch(function (e) {\n    return e;\n  });\n  return summaryPromise;\n}\n\nfunction finishOnAllFailed(_x8) {\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction _finishOnAllFailed() {\n  _finishOnAllFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(rulePromises) {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", Promise.all(rulePromises).then(function (errorsList) {\n              var _ref5;\n\n              var errors = (_ref5 = []).concat.apply(_ref5, _toConsumableArray(errorsList));\n\n              return errors;\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _finishOnAllFailed.apply(this, arguments);\n}\n\nfunction finishOnFirstFailed(_x9) {\n  return _finishOnFirstFailed.apply(this, arguments);\n}\n\nfunction _finishOnFirstFailed() {\n  _finishOnFirstFailed = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(rulePromises) {\n    var count;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            count = 0;\n            return _context4.abrupt(\"return\", new Promise(function (resolve) {\n              rulePromises.forEach(function (promise) {\n                promise.then(function (ruleError) {\n                  if (ruleError.errors.length) {\n                    resolve([ruleError]);\n                  }\n\n                  count += 1;\n\n                  if (count === rulePromises.length) {\n                    resolve([]);\n                  }\n                });\n              });\n            }));\n\n          case 2:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _finishOnFirstFailed.apply(this, arguments);\n}"]},"metadata":{},"sourceType":"module"}