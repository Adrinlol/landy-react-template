{"ast":null,"code":"import { MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION } from './Enum.js';\nimport { match, charat, substr, strlen, sizeof, replace, combine } from './Utility.js';\nimport { copy, tokenize } from './Tokenizer.js';\nimport { serialize } from './Serializer.js';\nimport { prefix } from './Prefixer.js';\n/**\n * @param {function[]} collection\n * @return {function}\n */\n\nexport function middleware(collection) {\n  var length = sizeof(collection);\n  return function (element, index, children, callback) {\n    var output = '';\n\n    for (var i = 0; i < length; i++) output += collection[i](element, index, children, callback) || '';\n\n    return output;\n  };\n}\n/**\n * @param {function} callback\n * @return {function}\n */\n\nexport function rulesheet(callback) {\n  return function (element) {\n    if (!element.root) if (element = element.return) callback(element);\n  };\n}\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\n\nexport function prefixer(element, index, children, callback) {\n  if (element.length > -1) if (!element.return) switch (element.type) {\n    case DECLARATION:\n      element.return = prefix(element.value, element.length);\n      break;\n\n    case KEYFRAMES:\n      return serialize([copy(element, {\n        value: replace(element.value, '@', '@' + WEBKIT)\n      })], callback);\n\n    case RULESET:\n      if (element.length) return combine(element.props, function (value) {\n        switch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n          // :read-(only|write)\n          case ':read-only':\n          case ':read-write':\n            return serialize([copy(element, {\n              props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]\n            })], callback);\n          // :placeholder\n\n          case '::placeholder':\n            return serialize([copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]\n            }), copy(element, {\n              props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]\n            })], callback);\n        }\n\n        return '';\n      });\n  }\n}\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\n\nexport function namespace(element) {\n  switch (element.type) {\n    case RULESET:\n      element.props = element.props.map(function (value) {\n        return combine(tokenize(value), function (value, index, children) {\n          switch (charat(value, 0)) {\n            // \\f\n            case 12:\n              return substr(value, 1, strlen(value));\n            // \\0 ( + > ~\n\n            case 0:\n            case 40:\n            case 43:\n            case 62:\n            case 126:\n              return value;\n            // :\n\n            case 58:\n              if (children[++index] === 'global') children[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1);\n            // \\s\n\n            case 32:\n              return index === 1 ? '' : value;\n\n            default:\n              switch (index) {\n                case 0:\n                  element = value;\n                  return sizeof(children) > 1 ? '' : value;\n\n                case index = sizeof(children) - 1:\n                case 2:\n                  return index === 2 ? value + element + element : value + element;\n\n                default:\n                  return value;\n              }\n\n          }\n        });\n      });\n  }\n}","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/stylis/src/Middleware.js"],"names":["MS","MOZ","WEBKIT","RULESET","KEYFRAMES","DECLARATION","match","charat","substr","strlen","sizeof","replace","combine","copy","tokenize","serialize","prefix","middleware","collection","length","element","index","children","callback","output","i","rulesheet","root","return","prefixer","type","value","props","namespace","map"],"mappings":"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","sourcesContent":["import {MS, MOZ, WEBKIT, RULESET, KEYFRAMES, DECLARATION} from './Enum.js'\nimport {match, charat, substr, strlen, sizeof, replace, combine} from './Utility.js'\nimport {copy, tokenize} from './Tokenizer.js'\nimport {serialize} from './Serializer.js'\nimport {prefix} from './Prefixer.js'\n\n/**\n * @param {function[]} collection\n * @return {function}\n */\nexport function middleware (collection) {\n\tvar length = sizeof(collection)\n\n\treturn function (element, index, children, callback) {\n\t\tvar output = ''\n\n\t\tfor (var i = 0; i < length; i++)\n\t\t\toutput += collection[i](element, index, children, callback) || ''\n\n\t\treturn output\n\t}\n}\n\n/**\n * @param {function} callback\n * @return {function}\n */\nexport function rulesheet (callback) {\n\treturn function (element) {\n\t\tif (!element.root)\n\t\t\tif (element = element.return)\n\t\t\t\tcallback(element)\n\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n * @param {function} callback\n */\nexport function prefixer (element, index, children, callback) {\n\tif (element.length > -1)\n\t\tif (!element.return)\n\t\t\tswitch (element.type) {\n\t\t\t\tcase DECLARATION: element.return = prefix(element.value, element.length)\n\t\t\t\t\tbreak\n\t\t\t\tcase KEYFRAMES:\n\t\t\t\t\treturn serialize([copy(element, {value: replace(element.value, '@', '@' + WEBKIT)})], callback)\n\t\t\t\tcase RULESET:\n\t\t\t\t\tif (element.length)\n\t\t\t\t\t\treturn combine(element.props, function (value) {\n\t\t\t\t\t\t\tswitch (match(value, /(::plac\\w+|:read-\\w+)/)) {\n\t\t\t\t\t\t\t\t// :read-(only|write)\n\t\t\t\t\t\t\t\tcase ':read-only': case ':read-write':\n\t\t\t\t\t\t\t\t\treturn serialize([copy(element, {props: [replace(value, /:(read-\\w+)/, ':' + MOZ + '$1')]})], callback)\n\t\t\t\t\t\t\t\t// :placeholder\n\t\t\t\t\t\t\t\tcase '::placeholder':\n\t\t\t\t\t\t\t\t\treturn serialize([\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + WEBKIT + 'input-$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, ':' + MOZ + '$1')]}),\n\t\t\t\t\t\t\t\t\t\tcopy(element, {props: [replace(value, /:(plac\\w+)/, MS + 'input-$1')]})\n\t\t\t\t\t\t\t\t\t], callback)\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\treturn ''\n\t\t\t\t\t\t})\n\t\t\t}\n}\n\n/**\n * @param {object} element\n * @param {number} index\n * @param {object[]} children\n */\nexport function namespace (element) {\n\tswitch (element.type) {\n\t\tcase RULESET:\n\t\t\telement.props = element.props.map(function (value) {\n\t\t\t\treturn combine(tokenize(value), function (value, index, children) {\n\t\t\t\t\tswitch (charat(value, 0)) {\n\t\t\t\t\t\t// \\f\n\t\t\t\t\t\tcase 12:\n\t\t\t\t\t\t\treturn substr(value, 1, strlen(value))\n\t\t\t\t\t\t// \\0 ( + > ~\n\t\t\t\t\t\tcase 0: case 40: case 43: case 62: case 126:\n\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t// :\n\t\t\t\t\t\tcase 58:\n\t\t\t\t\t\t\tif (children[++index] === 'global')\n\t\t\t\t\t\t\t\tchildren[index] = '', children[++index] = '\\f' + substr(children[index], index = 1, -1)\n\t\t\t\t\t\t// \\s\n\t\t\t\t\t\tcase 32:\n\t\t\t\t\t\t\treturn index === 1 ? '' : value\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tswitch (index) {\n\t\t\t\t\t\t\t\tcase 0: element = value\n\t\t\t\t\t\t\t\t\treturn sizeof(children) > 1 ? '' : value\n\t\t\t\t\t\t\t\tcase index = sizeof(children) - 1: case 2:\n\t\t\t\t\t\t\t\t\treturn index === 2 ? value + element + element : value + element\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\treturn value\n\t\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}