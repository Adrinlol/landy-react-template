{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"style\", \"className\", \"tabIndex\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport Overflow from 'rc-overflow';\nimport MenuItem from './MenuItem';\nimport { parseChildren } from './utils/nodeUtil';\nimport MenuContextProvider from './context/MenuContext';\nimport useMemoCallback from './hooks/useMemoCallback';\nimport { warnItemProp } from './utils/warnUtil';\nimport SubMenu from './SubMenu';\nimport useAccessibility from './hooks/useAccessibility';\nimport useUUID from './hooks/useUUID';\nimport { PathRegisterContext, PathUserContext } from './context/PathContext';\nimport useKeyRecords, { OVERFLOW_KEY } from './hooks/useKeyRecords';\nimport { IdContext } from './context/IdContext';\nimport PrivateContext from './context/PrivateContext';\n/**\n * Menu modify after refactor:\n * ## Add\n * - disabled\n *\n * ## Remove\n * - openTransitionName\n * - openAnimation\n * - onDestroy\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\n */\n// optimize for render\n\nvar EMPTY_LIST = [];\n\nvar Menu = function Menu(props) {\n  var _childList$, _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-menu' : _props$prefixCls,\n      style = props.style,\n      className = props.className,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      children = props.children,\n      direction = props.direction,\n      id = props.id,\n      _props$mode = props.mode,\n      mode = _props$mode === void 0 ? 'vertical' : _props$mode,\n      inlineCollapsed = props.inlineCollapsed,\n      disabled = props.disabled,\n      disabledOverflow = props.disabledOverflow,\n      _props$subMenuOpenDel = props.subMenuOpenDelay,\n      subMenuOpenDelay = _props$subMenuOpenDel === void 0 ? 0.1 : _props$subMenuOpenDel,\n      _props$subMenuCloseDe = props.subMenuCloseDelay,\n      subMenuCloseDelay = _props$subMenuCloseDe === void 0 ? 0.1 : _props$subMenuCloseDe,\n      forceSubMenuRender = props.forceSubMenuRender,\n      defaultOpenKeys = props.defaultOpenKeys,\n      openKeys = props.openKeys,\n      activeKey = props.activeKey,\n      defaultActiveFirst = props.defaultActiveFirst,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      defaultSelectedKeys = props.defaultSelectedKeys,\n      selectedKeys = props.selectedKeys,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$inlineIndent = props.inlineIndent,\n      inlineIndent = _props$inlineIndent === void 0 ? 24 : _props$inlineIndent,\n      motion = props.motion,\n      defaultMotions = props.defaultMotions,\n      _props$triggerSubMenu = props.triggerSubMenuAction,\n      triggerSubMenuAction = _props$triggerSubMenu === void 0 ? 'hover' : _props$triggerSubMenu,\n      builtinPlacements = props.builtinPlacements,\n      itemIcon = props.itemIcon,\n      expandIcon = props.expandIcon,\n      _props$overflowedIndi = props.overflowedIndicator,\n      overflowedIndicator = _props$overflowedIndi === void 0 ? '...' : _props$overflowedIndi,\n      overflowedIndicatorPopupClassName = props.overflowedIndicatorPopupClassName,\n      getPopupContainer = props.getPopupContainer,\n      onClick = props.onClick,\n      onOpenChange = props.onOpenChange,\n      onKeyDown = props.onKeyDown,\n      openAnimation = props.openAnimation,\n      openTransitionName = props.openTransitionName,\n      _internalRenderMenuItem = props._internalRenderMenuItem,\n      _internalRenderSubMenuItem = props._internalRenderSubMenuItem,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var childList = parseChildren(children, EMPTY_LIST);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var containerRef = React.useRef();\n  var uuid = useUUID(id);\n  var isRtl = direction === 'rtl'; // ========================= Warn =========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\n  } // ========================= Mode =========================\n\n\n  var _React$useMemo = React.useMemo(function () {\n    if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\n      return ['vertical', inlineCollapsed];\n    }\n\n    return [mode, false];\n  }, [mode, inlineCollapsed]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      mergedMode = _React$useMemo2[0],\n      mergedInlineCollapsed = _React$useMemo2[1]; // ====================== Responsive ======================\n\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastVisibleIndex = _React$useState4[0],\n      setLastVisibleIndex = _React$useState4[1];\n\n  var allVisible = lastVisibleIndex >= childList.length - 1 || mergedMode !== 'horizontal' || disabledOverflow; // ========================= Open =========================\n\n  var _useMergedState = useMergedState(defaultOpenKeys, {\n    value: openKeys,\n    postState: function postState(keys) {\n      return keys || EMPTY_LIST;\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedOpenKeys = _useMergedState2[0],\n      setMergedOpenKeys = _useMergedState2[1];\n\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    setMergedOpenKeys(keys);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n  }; // >>>>> Cache & Reset open keys when inlineCollapsed changed\n\n\n  var _React$useState5 = React.useState(mergedOpenKeys),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inlineCacheOpenKeys = _React$useState6[0],\n      setInlineCacheOpenKeys = _React$useState6[1];\n\n  var isInlineMode = mergedMode === 'inline';\n  var mountRef = React.useRef(false); // Cache\n\n  React.useEffect(function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]); // Restore\n\n  React.useEffect(function () {\n    if (!mountRef.current) {\n      mountRef.current = true;\n      return;\n    }\n\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [isInlineMode]); // ========================= Path =========================\n\n  var _useKeyRecords = useKeyRecords(),\n      registerPath = _useKeyRecords.registerPath,\n      unregisterPath = _useKeyRecords.unregisterPath,\n      refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n      isSubPathKey = _useKeyRecords.isSubPathKey,\n      getKeyPath = _useKeyRecords.getKeyPath,\n      getKeys = _useKeyRecords.getKeys,\n      getSubPathKeys = _useKeyRecords.getSubPathKeys;\n\n  var registerPathContext = React.useMemo(function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = React.useMemo(function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  React.useEffect(function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]); // ======================== Active ========================\n\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n    value: activeKey\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedActiveKey = _useMergedState4[0],\n      setMergedActiveKey = _useMergedState4[1];\n\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  }); // ======================== Select ========================\n  // >>>>> Select keys\n\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\n    value: selectedKeys,\n    // Legacy convert key to array\n    postState: function postState(keys) {\n      if (Array.isArray(keys)) {\n        return keys;\n      }\n\n      if (keys === null || keys === undefined) {\n        return EMPTY_LIST;\n      }\n\n      return [keys];\n    }\n  }),\n      _useMergedState6 = _slicedToArray(_useMergedState5, 2),\n      mergedSelectKeys = _useMergedState6[0],\n      setMergedSelectKeys = _useMergedState6[1]; // >>>>> Trigger select\n\n\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n\n      setMergedSelectKeys(newSelectKeys); // Trigger event\n\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    } // Whatever selectable, always close it\n\n\n    if (!multiple && mergedOpenKeys.length && mergedMode !== 'inline') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }; // ========================= Open =========================\n\n  /**\n   * Click for item. SubMenu do not have selection status\n   */\n\n\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (mergedMode !== 'inline') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n\n    if (!shallowEqual(mergedOpenKeys, newOpenKeys)) {\n      triggerOpenKeys(newOpenKeys);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer); // ==================== Accessibility =====================\n\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n\n  var onInternalKeyDown = useAccessibility(mergedMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown); // ======================== Effect ========================\n\n  React.useEffect(function () {\n    setMounted(true);\n  }, []); // ======================= Context ========================\n\n  var privateContext = React.useMemo(function () {\n    return {\n      _internalRenderMenuItem: _internalRenderMenuItem,\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\n    };\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]); // ======================== Render ========================\n  // >>>>> Children\n\n  var wrappedChildList = mergedMode !== 'horizontal' || disabledOverflow ? childList : // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return (\n      /*#__PURE__*/\n      // Always wrap provider to avoid sub node re-mount\n      React.createElement(MenuContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  }); // >>>>> Container\n\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\n    id: id,\n    ref: containerRef,\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\n    component: \"ul\",\n    itemComponent: MenuItem,\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(mergedMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), mergedInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames)),\n    dir: direction,\n    style: style,\n    role: \"menu\",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/React.createElement(SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: mergedMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\n    ssr: \"full\",\n    \"data-menu-list\": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps)); // >>>>> Render\n\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\n    value: privateContext\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\n    prefixCls: prefixCls,\n    mode: mergedMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl // Disabled\n    ,\n    disabled: disabled // Motion\n    ,\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null // Active\n    ,\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive // Selection\n    ,\n    selectedKeys: mergedSelectKeys // Level\n    ,\n    inlineIndent: inlineIndent // Popup\n    ,\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer // Icon\n    ,\n    itemIcon: itemIcon,\n    expandIcon: expandIcon // Events\n    ,\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList)))));\n};\n\nexport default Menu;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-menu/es/Menu.js"],"names":["_extends","_defineProperty","_objectSpread","_toConsumableArray","_slicedToArray","_objectWithoutProperties","_excluded","React","classNames","shallowEqual","useMergedState","warning","Overflow","MenuItem","parseChildren","MenuContextProvider","useMemoCallback","warnItemProp","SubMenu","useAccessibility","useUUID","PathRegisterContext","PathUserContext","useKeyRecords","OVERFLOW_KEY","IdContext","PrivateContext","EMPTY_LIST","Menu","props","_childList$","_classNames","_props$prefixCls","prefixCls","style","className","_props$tabIndex","tabIndex","children","direction","id","_props$mode","mode","inlineCollapsed","disabled","disabledOverflow","_props$subMenuOpenDel","subMenuOpenDelay","_props$subMenuCloseDe","subMenuCloseDelay","forceSubMenuRender","defaultOpenKeys","openKeys","activeKey","defaultActiveFirst","_props$selectable","selectable","_props$multiple","multiple","defaultSelectedKeys","selectedKeys","onSelect","onDeselect","_props$inlineIndent","inlineIndent","motion","defaultMotions","_props$triggerSubMenu","triggerSubMenuAction","builtinPlacements","itemIcon","expandIcon","_props$overflowedIndi","overflowedIndicator","overflowedIndicatorPopupClassName","getPopupContainer","onClick","onOpenChange","onKeyDown","openAnimation","openTransitionName","_internalRenderMenuItem","_internalRenderSubMenuItem","restProps","childList","_React$useState","useState","_React$useState2","mounted","setMounted","containerRef","useRef","uuid","isRtl","process","env","NODE_ENV","_React$useMemo","useMemo","_React$useMemo2","mergedMode","mergedInlineCollapsed","_React$useState3","_React$useState4","lastVisibleIndex","setLastVisibleIndex","allVisible","length","_useMergedState","value","postState","keys","_useMergedState2","mergedOpenKeys","setMergedOpenKeys","triggerOpenKeys","_React$useState5","_React$useState6","inlineCacheOpenKeys","setInlineCacheOpenKeys","isInlineMode","mountRef","useEffect","current","_useKeyRecords","registerPath","unregisterPath","refreshOverflowKeys","isSubPathKey","getKeyPath","getKeys","getSubPathKeys","registerPathContext","pathUserContext","slice","map","child","key","_useMergedState3","_useMergedState4","mergedActiveKey","setMergedActiveKey","onActive","onInactive","undefined","_useMergedState5","Array","isArray","_useMergedState6","mergedSelectKeys","setMergedSelectKeys","triggerSelection","info","targetKey","exist","includes","newSelectKeys","filter","concat","selectInfo","onInternalClick","onInternalOpenChange","open","newOpenKeys","k","push","subPathKeys","has","getInternalPopupContainer","triggerAccessibilityOpen","nextOpen","onInternalKeyDown","privateContext","wrappedChildList","index","createElement","overflowDisabled","container","ref","component","itemComponent","dir","role","data","renderRawItem","node","renderRawRest","omitItems","len","originOmitItems","eventKey","title","internalPopupClose","popupClassName","maxCount","INVALIDATE","RESPONSIVE","ssr","onVisibleChange","newLastIndex","Provider","rtl","onItemClick","display"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"prefixCls\", \"style\", \"className\", \"tabIndex\", \"children\", \"direction\", \"id\", \"mode\", \"inlineCollapsed\", \"disabled\", \"disabledOverflow\", \"subMenuOpenDelay\", \"subMenuCloseDelay\", \"forceSubMenuRender\", \"defaultOpenKeys\", \"openKeys\", \"activeKey\", \"defaultActiveFirst\", \"selectable\", \"multiple\", \"defaultSelectedKeys\", \"selectedKeys\", \"onSelect\", \"onDeselect\", \"inlineIndent\", \"motion\", \"defaultMotions\", \"triggerSubMenuAction\", \"builtinPlacements\", \"itemIcon\", \"expandIcon\", \"overflowedIndicator\", \"overflowedIndicatorPopupClassName\", \"getPopupContainer\", \"onClick\", \"onOpenChange\", \"onKeyDown\", \"openAnimation\", \"openTransitionName\", \"_internalRenderMenuItem\", \"_internalRenderSubMenuItem\"];\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport shallowEqual from 'shallowequal';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport warning from \"rc-util/es/warning\";\nimport Overflow from 'rc-overflow';\nimport MenuItem from './MenuItem';\nimport { parseChildren } from './utils/nodeUtil';\nimport MenuContextProvider from './context/MenuContext';\nimport useMemoCallback from './hooks/useMemoCallback';\nimport { warnItemProp } from './utils/warnUtil';\nimport SubMenu from './SubMenu';\nimport useAccessibility from './hooks/useAccessibility';\nimport useUUID from './hooks/useUUID';\nimport { PathRegisterContext, PathUserContext } from './context/PathContext';\nimport useKeyRecords, { OVERFLOW_KEY } from './hooks/useKeyRecords';\nimport { IdContext } from './context/IdContext';\nimport PrivateContext from './context/PrivateContext';\n/**\n * Menu modify after refactor:\n * ## Add\n * - disabled\n *\n * ## Remove\n * - openTransitionName\n * - openAnimation\n * - onDestroy\n * - siderCollapsed: Seems antd do not use this prop (Need test in antd)\n * - collapsedWidth: Seems this logic should be handle by antd Layout.Sider\n */\n// optimize for render\n\nvar EMPTY_LIST = [];\n\nvar Menu = function Menu(props) {\n  var _childList$, _classNames;\n\n  var _props$prefixCls = props.prefixCls,\n      prefixCls = _props$prefixCls === void 0 ? 'rc-menu' : _props$prefixCls,\n      style = props.style,\n      className = props.className,\n      _props$tabIndex = props.tabIndex,\n      tabIndex = _props$tabIndex === void 0 ? 0 : _props$tabIndex,\n      children = props.children,\n      direction = props.direction,\n      id = props.id,\n      _props$mode = props.mode,\n      mode = _props$mode === void 0 ? 'vertical' : _props$mode,\n      inlineCollapsed = props.inlineCollapsed,\n      disabled = props.disabled,\n      disabledOverflow = props.disabledOverflow,\n      _props$subMenuOpenDel = props.subMenuOpenDelay,\n      subMenuOpenDelay = _props$subMenuOpenDel === void 0 ? 0.1 : _props$subMenuOpenDel,\n      _props$subMenuCloseDe = props.subMenuCloseDelay,\n      subMenuCloseDelay = _props$subMenuCloseDe === void 0 ? 0.1 : _props$subMenuCloseDe,\n      forceSubMenuRender = props.forceSubMenuRender,\n      defaultOpenKeys = props.defaultOpenKeys,\n      openKeys = props.openKeys,\n      activeKey = props.activeKey,\n      defaultActiveFirst = props.defaultActiveFirst,\n      _props$selectable = props.selectable,\n      selectable = _props$selectable === void 0 ? true : _props$selectable,\n      _props$multiple = props.multiple,\n      multiple = _props$multiple === void 0 ? false : _props$multiple,\n      defaultSelectedKeys = props.defaultSelectedKeys,\n      selectedKeys = props.selectedKeys,\n      onSelect = props.onSelect,\n      onDeselect = props.onDeselect,\n      _props$inlineIndent = props.inlineIndent,\n      inlineIndent = _props$inlineIndent === void 0 ? 24 : _props$inlineIndent,\n      motion = props.motion,\n      defaultMotions = props.defaultMotions,\n      _props$triggerSubMenu = props.triggerSubMenuAction,\n      triggerSubMenuAction = _props$triggerSubMenu === void 0 ? 'hover' : _props$triggerSubMenu,\n      builtinPlacements = props.builtinPlacements,\n      itemIcon = props.itemIcon,\n      expandIcon = props.expandIcon,\n      _props$overflowedIndi = props.overflowedIndicator,\n      overflowedIndicator = _props$overflowedIndi === void 0 ? '...' : _props$overflowedIndi,\n      overflowedIndicatorPopupClassName = props.overflowedIndicatorPopupClassName,\n      getPopupContainer = props.getPopupContainer,\n      onClick = props.onClick,\n      onOpenChange = props.onOpenChange,\n      onKeyDown = props.onKeyDown,\n      openAnimation = props.openAnimation,\n      openTransitionName = props.openTransitionName,\n      _internalRenderMenuItem = props._internalRenderMenuItem,\n      _internalRenderSubMenuItem = props._internalRenderSubMenuItem,\n      restProps = _objectWithoutProperties(props, _excluded);\n\n  var childList = parseChildren(children, EMPTY_LIST);\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      mounted = _React$useState2[0],\n      setMounted = _React$useState2[1];\n\n  var containerRef = React.useRef();\n  var uuid = useUUID(id);\n  var isRtl = direction === 'rtl'; // ========================= Warn =========================\n\n  if (process.env.NODE_ENV !== 'production') {\n    warning(!openAnimation && !openTransitionName, '`openAnimation` and `openTransitionName` is removed. Please use `motion` or `defaultMotion` instead.');\n  } // ========================= Mode =========================\n\n\n  var _React$useMemo = React.useMemo(function () {\n    if ((mode === 'inline' || mode === 'vertical') && inlineCollapsed) {\n      return ['vertical', inlineCollapsed];\n    }\n\n    return [mode, false];\n  }, [mode, inlineCollapsed]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      mergedMode = _React$useMemo2[0],\n      mergedInlineCollapsed = _React$useMemo2[1]; // ====================== Responsive ======================\n\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      lastVisibleIndex = _React$useState4[0],\n      setLastVisibleIndex = _React$useState4[1];\n\n  var allVisible = lastVisibleIndex >= childList.length - 1 || mergedMode !== 'horizontal' || disabledOverflow; // ========================= Open =========================\n\n  var _useMergedState = useMergedState(defaultOpenKeys, {\n    value: openKeys,\n    postState: function postState(keys) {\n      return keys || EMPTY_LIST;\n    }\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      mergedOpenKeys = _useMergedState2[0],\n      setMergedOpenKeys = _useMergedState2[1];\n\n  var triggerOpenKeys = function triggerOpenKeys(keys) {\n    setMergedOpenKeys(keys);\n    onOpenChange === null || onOpenChange === void 0 ? void 0 : onOpenChange(keys);\n  }; // >>>>> Cache & Reset open keys when inlineCollapsed changed\n\n\n  var _React$useState5 = React.useState(mergedOpenKeys),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      inlineCacheOpenKeys = _React$useState6[0],\n      setInlineCacheOpenKeys = _React$useState6[1];\n\n  var isInlineMode = mergedMode === 'inline';\n  var mountRef = React.useRef(false); // Cache\n\n  React.useEffect(function () {\n    if (isInlineMode) {\n      setInlineCacheOpenKeys(mergedOpenKeys);\n    }\n  }, [mergedOpenKeys]); // Restore\n\n  React.useEffect(function () {\n    if (!mountRef.current) {\n      mountRef.current = true;\n      return;\n    }\n\n    if (isInlineMode) {\n      setMergedOpenKeys(inlineCacheOpenKeys);\n    } else {\n      // Trigger open event in case its in control\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }, [isInlineMode]); // ========================= Path =========================\n\n  var _useKeyRecords = useKeyRecords(),\n      registerPath = _useKeyRecords.registerPath,\n      unregisterPath = _useKeyRecords.unregisterPath,\n      refreshOverflowKeys = _useKeyRecords.refreshOverflowKeys,\n      isSubPathKey = _useKeyRecords.isSubPathKey,\n      getKeyPath = _useKeyRecords.getKeyPath,\n      getKeys = _useKeyRecords.getKeys,\n      getSubPathKeys = _useKeyRecords.getSubPathKeys;\n\n  var registerPathContext = React.useMemo(function () {\n    return {\n      registerPath: registerPath,\n      unregisterPath: unregisterPath\n    };\n  }, [registerPath, unregisterPath]);\n  var pathUserContext = React.useMemo(function () {\n    return {\n      isSubPathKey: isSubPathKey\n    };\n  }, [isSubPathKey]);\n  React.useEffect(function () {\n    refreshOverflowKeys(allVisible ? EMPTY_LIST : childList.slice(lastVisibleIndex + 1).map(function (child) {\n      return child.key;\n    }));\n  }, [lastVisibleIndex, allVisible]); // ======================== Active ========================\n\n  var _useMergedState3 = useMergedState(activeKey || defaultActiveFirst && ((_childList$ = childList[0]) === null || _childList$ === void 0 ? void 0 : _childList$.key), {\n    value: activeKey\n  }),\n      _useMergedState4 = _slicedToArray(_useMergedState3, 2),\n      mergedActiveKey = _useMergedState4[0],\n      setMergedActiveKey = _useMergedState4[1];\n\n  var onActive = useMemoCallback(function (key) {\n    setMergedActiveKey(key);\n  });\n  var onInactive = useMemoCallback(function () {\n    setMergedActiveKey(undefined);\n  }); // ======================== Select ========================\n  // >>>>> Select keys\n\n  var _useMergedState5 = useMergedState(defaultSelectedKeys || [], {\n    value: selectedKeys,\n    // Legacy convert key to array\n    postState: function postState(keys) {\n      if (Array.isArray(keys)) {\n        return keys;\n      }\n\n      if (keys === null || keys === undefined) {\n        return EMPTY_LIST;\n      }\n\n      return [keys];\n    }\n  }),\n      _useMergedState6 = _slicedToArray(_useMergedState5, 2),\n      mergedSelectKeys = _useMergedState6[0],\n      setMergedSelectKeys = _useMergedState6[1]; // >>>>> Trigger select\n\n\n  var triggerSelection = function triggerSelection(info) {\n    if (selectable) {\n      // Insert or Remove\n      var targetKey = info.key;\n      var exist = mergedSelectKeys.includes(targetKey);\n      var newSelectKeys;\n\n      if (multiple) {\n        if (exist) {\n          newSelectKeys = mergedSelectKeys.filter(function (key) {\n            return key !== targetKey;\n          });\n        } else {\n          newSelectKeys = [].concat(_toConsumableArray(mergedSelectKeys), [targetKey]);\n        }\n      } else {\n        newSelectKeys = [targetKey];\n      }\n\n      setMergedSelectKeys(newSelectKeys); // Trigger event\n\n      var selectInfo = _objectSpread(_objectSpread({}, info), {}, {\n        selectedKeys: newSelectKeys\n      });\n\n      if (exist) {\n        onDeselect === null || onDeselect === void 0 ? void 0 : onDeselect(selectInfo);\n      } else {\n        onSelect === null || onSelect === void 0 ? void 0 : onSelect(selectInfo);\n      }\n    } // Whatever selectable, always close it\n\n\n    if (!multiple && mergedOpenKeys.length && mergedMode !== 'inline') {\n      triggerOpenKeys(EMPTY_LIST);\n    }\n  }; // ========================= Open =========================\n\n  /**\n   * Click for item. SubMenu do not have selection status\n   */\n\n\n  var onInternalClick = useMemoCallback(function (info) {\n    onClick === null || onClick === void 0 ? void 0 : onClick(warnItemProp(info));\n    triggerSelection(info);\n  });\n  var onInternalOpenChange = useMemoCallback(function (key, open) {\n    var newOpenKeys = mergedOpenKeys.filter(function (k) {\n      return k !== key;\n    });\n\n    if (open) {\n      newOpenKeys.push(key);\n    } else if (mergedMode !== 'inline') {\n      // We need find all related popup to close\n      var subPathKeys = getSubPathKeys(key);\n      newOpenKeys = newOpenKeys.filter(function (k) {\n        return !subPathKeys.has(k);\n      });\n    }\n\n    if (!shallowEqual(mergedOpenKeys, newOpenKeys)) {\n      triggerOpenKeys(newOpenKeys);\n    }\n  });\n  var getInternalPopupContainer = useMemoCallback(getPopupContainer); // ==================== Accessibility =====================\n\n  var triggerAccessibilityOpen = function triggerAccessibilityOpen(key, open) {\n    var nextOpen = open !== null && open !== void 0 ? open : !mergedOpenKeys.includes(key);\n    onInternalOpenChange(key, nextOpen);\n  };\n\n  var onInternalKeyDown = useAccessibility(mergedMode, mergedActiveKey, isRtl, uuid, containerRef, getKeys, getKeyPath, setMergedActiveKey, triggerAccessibilityOpen, onKeyDown); // ======================== Effect ========================\n\n  React.useEffect(function () {\n    setMounted(true);\n  }, []); // ======================= Context ========================\n\n  var privateContext = React.useMemo(function () {\n    return {\n      _internalRenderMenuItem: _internalRenderMenuItem,\n      _internalRenderSubMenuItem: _internalRenderSubMenuItem\n    };\n  }, [_internalRenderMenuItem, _internalRenderSubMenuItem]); // ======================== Render ========================\n  // >>>>> Children\n\n  var wrappedChildList = mergedMode !== 'horizontal' || disabledOverflow ? childList : // Need wrap for overflow dropdown that do not response for open\n  childList.map(function (child, index) {\n    return (\n      /*#__PURE__*/\n      // Always wrap provider to avoid sub node re-mount\n      React.createElement(MenuContextProvider, {\n        key: child.key,\n        overflowDisabled: index > lastVisibleIndex\n      }, child)\n    );\n  }); // >>>>> Container\n\n  var container = /*#__PURE__*/React.createElement(Overflow, _extends({\n    id: id,\n    ref: containerRef,\n    prefixCls: \"\".concat(prefixCls, \"-overflow\"),\n    component: \"ul\",\n    itemComponent: MenuItem,\n    className: classNames(prefixCls, \"\".concat(prefixCls, \"-root\"), \"\".concat(prefixCls, \"-\").concat(mergedMode), className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-inline-collapsed\"), mergedInlineCollapsed), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), isRtl), _classNames)),\n    dir: direction,\n    style: style,\n    role: \"menu\",\n    tabIndex: tabIndex,\n    data: wrappedChildList,\n    renderRawItem: function renderRawItem(node) {\n      return node;\n    },\n    renderRawRest: function renderRawRest(omitItems) {\n      // We use origin list since wrapped list use context to prevent open\n      var len = omitItems.length;\n      var originOmitItems = len ? childList.slice(-len) : null;\n      return /*#__PURE__*/React.createElement(SubMenu, {\n        eventKey: OVERFLOW_KEY,\n        title: overflowedIndicator,\n        disabled: allVisible,\n        internalPopupClose: len === 0,\n        popupClassName: overflowedIndicatorPopupClassName\n      }, originOmitItems);\n    },\n    maxCount: mergedMode !== 'horizontal' || disabledOverflow ? Overflow.INVALIDATE : Overflow.RESPONSIVE,\n    ssr: \"full\",\n    \"data-menu-list\": true,\n    onVisibleChange: function onVisibleChange(newLastIndex) {\n      setLastVisibleIndex(newLastIndex);\n    },\n    onKeyDown: onInternalKeyDown\n  }, restProps)); // >>>>> Render\n\n  return /*#__PURE__*/React.createElement(PrivateContext.Provider, {\n    value: privateContext\n  }, /*#__PURE__*/React.createElement(IdContext.Provider, {\n    value: uuid\n  }, /*#__PURE__*/React.createElement(MenuContextProvider, {\n    prefixCls: prefixCls,\n    mode: mergedMode,\n    openKeys: mergedOpenKeys,\n    rtl: isRtl // Disabled\n    ,\n    disabled: disabled // Motion\n    ,\n    motion: mounted ? motion : null,\n    defaultMotions: mounted ? defaultMotions : null // Active\n    ,\n    activeKey: mergedActiveKey,\n    onActive: onActive,\n    onInactive: onInactive // Selection\n    ,\n    selectedKeys: mergedSelectKeys // Level\n    ,\n    inlineIndent: inlineIndent // Popup\n    ,\n    subMenuOpenDelay: subMenuOpenDelay,\n    subMenuCloseDelay: subMenuCloseDelay,\n    forceSubMenuRender: forceSubMenuRender,\n    builtinPlacements: builtinPlacements,\n    triggerSubMenuAction: triggerSubMenuAction,\n    getPopupContainer: getInternalPopupContainer // Icon\n    ,\n    itemIcon: itemIcon,\n    expandIcon: expandIcon // Events\n    ,\n    onItemClick: onInternalClick,\n    onOpenChange: onInternalOpenChange\n  }, /*#__PURE__*/React.createElement(PathUserContext.Provider, {\n    value: pathUserContext\n  }, container), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      display: 'none'\n    },\n    \"aria-hidden\": true\n  }, /*#__PURE__*/React.createElement(PathRegisterContext.Provider, {\n    value: registerPathContext\n  }, childList)))));\n};\n\nexport default Menu;"]},"metadata":{},"sourceType":"module"}