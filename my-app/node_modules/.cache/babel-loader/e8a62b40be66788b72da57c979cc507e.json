{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionStart\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"];\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport TreeNode from './TreeNode';\nimport { getTreeNodeProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\n\nvar MotionTreeNode = function MotionTreeNode(_ref, ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      motion = _ref.motion,\n      motionNodes = _ref.motionNodes,\n      motionType = _ref.motionType,\n      onOriginMotionStart = _ref.onMotionStart,\n      onOriginMotionEnd = _ref.onMotionEnd,\n      active = _ref.active,\n      treeNodeRequiredProps = _ref.treeNodeRequiredProps,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useContext = React.useContext(TreeContext),\n      prefixCls = _React$useContext.prefixCls;\n\n  var motionedRef = React.useRef(false);\n\n  var onMotionEnd = function onMotionEnd() {\n    if (!motionedRef.current) {\n      onOriginMotionEnd();\n    }\n\n    motionedRef.current = true;\n  };\n\n  useEffect(function () {\n    if (motionNodes && motionType === 'hide' && visible) {\n      setVisible(false);\n    }\n  }, [motionNodes]);\n  useEffect(function () {\n    // Trigger motion only when patched\n    if (motionNodes) {\n      onOriginMotionStart();\n    }\n\n    return function () {\n      if (motionNodes) {\n        onMotionEnd();\n      }\n    };\n  }, []);\n\n  if (motionNodes) {\n    return /*#__PURE__*/React.createElement(CSSMotion, _extends({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onAppearEnd: onMotionEnd,\n      onLeaveEnd: onMotionEnd\n    }), function (_ref2, motionRef) {\n      var motionClassName = _ref2.className,\n          motionStyle = _ref2.style;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var restProps = _extends({}, treeNode.data),\n            title = treeNode.title,\n            key = treeNode.key,\n            isStart = treeNode.isStart,\n            isEnd = treeNode.isEnd;\n\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return /*#__PURE__*/React.createElement(TreeNode, _extends({}, restProps, treeNodeProps, {\n          title: title,\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(TreeNode, _extends({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n};\n\nMotionTreeNode.displayName = 'MotionTreeNode';\nvar RefMotionTreeNode = /*#__PURE__*/React.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/rc-tree/es/MotionTreeNode.js"],"names":["_extends","_slicedToArray","_objectWithoutProperties","_excluded","React","useEffect","classNames","CSSMotion","TreeNode","getTreeNodeProps","TreeContext","MotionTreeNode","_ref","ref","className","style","motion","motionNodes","motionType","onOriginMotionStart","onMotionStart","onOriginMotionEnd","onMotionEnd","active","treeNodeRequiredProps","props","_React$useState","useState","_React$useState2","visible","setVisible","_React$useContext","useContext","prefixCls","motionedRef","useRef","current","createElement","motionAppear","onAppearEnd","onLeaveEnd","_ref2","motionRef","motionClassName","motionStyle","concat","map","treeNode","restProps","data","title","key","isStart","isEnd","children","treeNodeProps","domRef","displayName","RefMotionTreeNode","forwardRef"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"className\", \"style\", \"motion\", \"motionNodes\", \"motionType\", \"onMotionStart\", \"onMotionEnd\", \"active\", \"treeNodeRequiredProps\"];\nimport * as React from 'react';\nimport { useEffect } from 'react';\nimport classNames from 'classnames';\nimport CSSMotion from 'rc-motion';\nimport TreeNode from './TreeNode';\nimport { getTreeNodeProps } from './utils/treeUtil';\nimport { TreeContext } from './contextTypes';\n\nvar MotionTreeNode = function MotionTreeNode(_ref, ref) {\n  var className = _ref.className,\n      style = _ref.style,\n      motion = _ref.motion,\n      motionNodes = _ref.motionNodes,\n      motionType = _ref.motionType,\n      onOriginMotionStart = _ref.onMotionStart,\n      onOriginMotionEnd = _ref.onMotionEnd,\n      active = _ref.active,\n      treeNodeRequiredProps = _ref.treeNodeRequiredProps,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useState = React.useState(true),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      visible = _React$useState2[0],\n      setVisible = _React$useState2[1];\n\n  var _React$useContext = React.useContext(TreeContext),\n      prefixCls = _React$useContext.prefixCls;\n\n  var motionedRef = React.useRef(false);\n\n  var onMotionEnd = function onMotionEnd() {\n    if (!motionedRef.current) {\n      onOriginMotionEnd();\n    }\n\n    motionedRef.current = true;\n  };\n\n  useEffect(function () {\n    if (motionNodes && motionType === 'hide' && visible) {\n      setVisible(false);\n    }\n  }, [motionNodes]);\n  useEffect(function () {\n    // Trigger motion only when patched\n    if (motionNodes) {\n      onOriginMotionStart();\n    }\n\n    return function () {\n      if (motionNodes) {\n        onMotionEnd();\n      }\n    };\n  }, []);\n\n  if (motionNodes) {\n    return /*#__PURE__*/React.createElement(CSSMotion, _extends({\n      ref: ref,\n      visible: visible\n    }, motion, {\n      motionAppear: motionType === 'show',\n      onAppearEnd: onMotionEnd,\n      onLeaveEnd: onMotionEnd\n    }), function (_ref2, motionRef) {\n      var motionClassName = _ref2.className,\n          motionStyle = _ref2.style;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        ref: motionRef,\n        className: classNames(\"\".concat(prefixCls, \"-treenode-motion\"), motionClassName),\n        style: motionStyle\n      }, motionNodes.map(function (treeNode) {\n        var restProps = _extends({}, treeNode.data),\n            title = treeNode.title,\n            key = treeNode.key,\n            isStart = treeNode.isStart,\n            isEnd = treeNode.isEnd;\n\n        delete restProps.children;\n        var treeNodeProps = getTreeNodeProps(key, treeNodeRequiredProps);\n        return /*#__PURE__*/React.createElement(TreeNode, _extends({}, restProps, treeNodeProps, {\n          title: title,\n          active: active,\n          data: treeNode.data,\n          key: key,\n          isStart: isStart,\n          isEnd: isEnd\n        }));\n      }));\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(TreeNode, _extends({\n    domRef: ref,\n    className: className,\n    style: style\n  }, props, {\n    active: active\n  }));\n};\n\nMotionTreeNode.displayName = 'MotionTreeNode';\nvar RefMotionTreeNode = /*#__PURE__*/React.forwardRef(MotionTreeNode);\nexport default RefMotionTreeNode;"]},"metadata":{},"sourceType":"module"}