{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport MenuContext from './MenuContext';\nimport { isValidElement, cloneElement } from '../_util/reactNode';\n\nfunction SubMenu(props) {\n  var _a;\n\n  var popupClassName = props.popupClassName,\n      icon = props.icon,\n      title = props.title;\n  var context = React.useContext(MenuContext);\n  var prefixCls = context.prefixCls,\n      inlineCollapsed = context.inlineCollapsed,\n      antdMenuTheme = context.antdMenuTheme;\n  var parentPath = useFullPath();\n  var titleNode;\n\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inline-collapsed-noicon\")\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-title-content\")\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    var titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', \"\".concat(prefixCls, \"-item-icon\"))\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-title-content\")\n    }, title));\n  }\n\n  var contextValue = React.useMemo(function () {\n    return _extends(_extends({}, context), {\n      firstLevel: false\n    });\n  }, [context]);\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, _extends({}, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(antdMenuTheme), popupClassName)\n  })));\n}\n\nexport default SubMenu;","map":{"version":3,"sources":["/Users/iflego/Documents/GitHub/landy-react-template/my-app/node_modules/antd/es/menu/SubMenu.js"],"names":["_extends","React","SubMenu","RcSubMenu","useFullPath","classNames","omit","MenuContext","isValidElement","cloneElement","props","_a","popupClassName","icon","title","context","useContext","prefixCls","inlineCollapsed","antdMenuTheme","parentPath","titleNode","length","createElement","className","concat","charAt","titleIsSpan","type","Fragment","contextValue","useMemo","firstLevel","Provider","value"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport { SubMenu as RcSubMenu, useFullPath } from 'rc-menu';\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport MenuContext from './MenuContext';\nimport { isValidElement, cloneElement } from '../_util/reactNode';\n\nfunction SubMenu(props) {\n  var _a;\n\n  var popupClassName = props.popupClassName,\n      icon = props.icon,\n      title = props.title;\n  var context = React.useContext(MenuContext);\n  var prefixCls = context.prefixCls,\n      inlineCollapsed = context.inlineCollapsed,\n      antdMenuTheme = context.antdMenuTheme;\n  var parentPath = useFullPath();\n  var titleNode;\n\n  if (!icon) {\n    titleNode = inlineCollapsed && !parentPath.length && title && typeof title === 'string' ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefixCls, \"-inline-collapsed-noicon\")\n    }, title.charAt(0)) : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-title-content\")\n    }, title);\n  } else {\n    // inline-collapsed.md demo 依赖 span 来隐藏文字,有 icon 属性，则内部包裹一个 span\n    // ref: https://github.com/ant-design/ant-design/pull/23456\n    var titleIsSpan = isValidElement(title) && title.type === 'span';\n    titleNode = /*#__PURE__*/React.createElement(React.Fragment, null, cloneElement(icon, {\n      className: classNames(isValidElement(icon) ? (_a = icon.props) === null || _a === void 0 ? void 0 : _a.className : '', \"\".concat(prefixCls, \"-item-icon\"))\n    }), titleIsSpan ? title : /*#__PURE__*/React.createElement(\"span\", {\n      className: \"\".concat(prefixCls, \"-title-content\")\n    }, title));\n  }\n\n  var contextValue = React.useMemo(function () {\n    return _extends(_extends({}, context), {\n      firstLevel: false\n    });\n  }, [context]);\n  return /*#__PURE__*/React.createElement(MenuContext.Provider, {\n    value: contextValue\n  }, /*#__PURE__*/React.createElement(RcSubMenu, _extends({}, omit(props, ['icon']), {\n    title: titleNode,\n    popupClassName: classNames(prefixCls, \"\".concat(prefixCls, \"-\").concat(antdMenuTheme), popupClassName)\n  })));\n}\n\nexport default SubMenu;"]},"metadata":{},"sourceType":"module"}